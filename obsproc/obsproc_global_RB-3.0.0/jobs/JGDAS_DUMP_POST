#!/bin/bash
set -xa
date -u

###################################################################
# Set DEBUG LEVEL - modifies info in execution trace prompt string
###################################################################
export DEBUG_LEVEL=${DEBUG_LEVEL=1}
case $DEBUG_LEVEL in
  1) export PS4='+ ${SECONDS}s + ' ;;       # add seconds (this is typical case)
  0) export PS4='+ ';;                      # don't include seconds (useful if
                                            #  want to diff output from 2 runs)
  2) export PS4='+ ${SECONDS}s:L$LINENO + ';;         # add script line #
  3) export PS4='+ ${SECONDS}s:${0##*/}:L$LINENO + ';;# add script name & line #
  4) export PS4='+ ${0##*/}:L$LINENO + ';;  # script name & line (no seconds)
  *) echo "Unrecognized DEBUG_LEVEL.  Stay with current PS4 setting";;
esac

########################################
# Check that required variables are set
########################################
set +x
echo
echo cyc is ${cyc:?"###FATAL ERROR \"cyc\" is not set"}
echo envir is ${envir:?"###FATAL ERROR \"envir\" is not set"}
echo job is ${job:?"###FATAL ERROR \"job\" is not set"}
echo DATAROOT is ${DATAROOT:?"###FATAL ERROR \"DATAROOT\" is not set"}
echo
set -x

################################
# Print out version information
################################
set +x
echo
echo "####################################################################"
echo
echo "Current OBSPROC_GLOBAL version is ${obsproc_global_ver:-not set}"
echo "OBSPROC_DUMP_POST version used by this job is" \
       "${obsproc_dump_post_ver:-not set}"
echo "OBSPROC_SHARED_BUFR_REMOREST version used by this job is" \
       "${obsproc_shared_bufr_remorest_ver:-not set}"
echo "OBSPROC_SHARED_BUFR_AVGDATA version used by this job is" \
       "${obsproc_shared_bufr_avgdata_ver:-not set}"
echo "OBSPROC_SHARED_BUFR_DUMPLIST version used by this job is" \
       "${obsproc_shared_bufr_dumplist_ver:-not set}"
echo
echo "####################################################################"
echo
set -x

#####################################################################
# List modules loaded for this job
#   On luna/surge may need to initialize the Modules package to find
#   the module command.  Will do so for either system.
#####################################################################
if [ -f /opt/modules/default/init/sh ]; then  # on luna/surge
  . /opt/modules/default/init/sh 2>/dev/null
elif [ -f /usrx/local/Modules/default/init/sh ]; then  # on tide/gyre
  . /usrx/local/Modules/default/init/sh 2>/dev/null
fi
set +x
echo
echo "####################################################################"
echo
      module list
echo
echo "####################################################################"
echo
set -x

######################
# Specify NET and RUN
######################
export NET=${NET:-gfs}
export RUN=${RUN:-gdas}
export RUND=${RUND:-gdas}    # gdas1->gdas transitional variable
# Variable "$RUND" will be used temporarily to set default gdas COM directories.
#  This replaces old variable "$model", which NCO now uses for another purpose.
#  Use of $RUND (rather than $RUN) to set gdas COM directories is intended as a
#  transitional safety measure in case $RUN (used in child scripts to define the
#  leading filename segment) needs to be reverted back to "gdas1".

##############################
# Specify cycle and time-mark
##############################
export cycle=t${cyc}z
export tmmark=tm00

###############################
# Create new working directory
###############################
jobid=${jobid:-${job}.$(hostname -s).$$}
export DATA=${DATA:-$DATAROOT/${jobid}}
rm -rf $DATA
mkdir -p $DATA
cd $DATA
export pgmout=OUTPUT.$$

######################################
# Set job log file for postmsg output
######################################
jlogfile=${jlogfile:-${DATA}/jlogfile}

###############################################################################
# SENDCOM  - Copy files to $COMOUT directory
# SENDECF  - Flag Events on ECFLOW
# SENDDBN  - Alert output file to TOC
# SENDSDM  - Send files to SDM (via email and/or printer in bufr_datacount.sh)
###############################################################################
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDSDM=${SENDSDM:-YES}
[[ "$envir" != prod ]] && export SENDSDM=NO  # parallel , not send email to SDM

##########################
# Specify Execution Areas
##########################

# -------------------------------
# Paths for obsproc_network items
# -------------------------------
export HOMEobsproc_network=${HOMEobsproc_network:\
-${NWROOT:?}/obsproc_global.${obsproc_global_ver:?\
"###FATAL ERROR \"obsproc_global_ver\" is not set"}}

# ---------------------------------
# Paths for obsproc_dump_post items
# ---------------------------------
export HOMEobsproc_dump_post=${HOMEobsproc_dump_post:\
-${NWROOT:?}/obsproc_dump_post.${obsproc_dump_post_ver:?\
"###FATAL ERROR \"obsproc_dump_post_ver\" is not set"}}

export SCRIPTSobsproc_dump_post=${SCRIPTSobsproc_dump_post:\
-$HOMEobsproc_dump_post/scripts}

export EXECobsproc_dump_post=${EXECobsproc_dump_post:\
-$HOMEobsproc_dump_post/exec}

export USHobsproc_dump_post=${USHobsproc_dump_post:-$HOMEobsproc_dump_post/ush}

# --------------------------------------------
# Paths for obsproc_shared_bufr_remorest items
# --------------------------------------------
export HOMEobsproc_shared_bufr_remorest=${HOMEobsproc_shared_bufr_remorest:\
-${NWROOT:?}/obsproc_shared/bufr_remorest.${obsproc_shared_bufr_remorest_ver:?\
"###FATAL ERROR \"obsproc_shared_bufr_remorest_ver\" is not set"}}

export EXECobsproc_shared_bufr_remorest=${EXECobsproc_shared_bufr_remorest:\
-$HOMEobsproc_shared_bufr_remorest/exec}

export USHobsproc_shared_bufr_remorest=${USHobsproc_shared_bufr_remorest:\
-$HOMEobsproc_shared_bufr_remorest/ush}

# -------------------------------------------
# Paths for obsproc_shared_bufr_avgdata items
# -------------------------------------------
export HOMEobsproc_shared_bufr_avgdata=${HOMEobsproc_shared_bufr_avgdata:\
-${NWROOT:?}/obsproc_shared/bufr_avgdata.${obsproc_shared_bufr_avgdata_ver:?\
"###FATAL ERROR \"obsproc_shared_bufr_avgdata_ver\" is not set"}}

export EXECobsproc_shared_bufr_avgdata=${EXECobsproc_shared_bufr_avgdata:\
-$HOMEobsproc_shared_bufr_avgdata/exec}

export USHobsproc_shared_bufr_avgdata=${USHobsproc_shared_bufr_avgdata:\
-$HOMEobsproc_shared_bufr_avgdata/ush}

# --------------------------------------------
# Paths for obsproc_shared_bufr_dumplist items
# --------------------------------------------
export HOMEobsproc_shared_bufr_dumplist=${HOMEobsproc_shared_bufr_dumplist:\
-${NWROOT:?}/obsproc_shared/bufr_dumplist.${obsproc_shared_bufr_dumplist_ver:?\
"###FATAL ERROR \"obsproc_shared_bufr_dumplist_ver\" is not set"}}

export FIXobsproc_shared_bufr_dumplist=${FIXobsproc_shared_bufr_dumplist:\
-$HOMEobsproc_shared_bufr_dumplist/fix}

#########################################################################
# Add some prod utilities to working directory
#########################################################################
echo "step ############# break ##############################" > ./break
cp $UTILROOT/ush/err_chk   .; chmod +x err_chk
cp $UTILROOT/ush/err_exit  .; chmod +x err_exit
cp $UTILROOT/ush/prep_step .; chmod +x prep_step
cp $UTILROOT/ush/postmsg   .; chmod +x postmsg
cp $UTILROOT/ush/setpdy.sh .; chmod +x setpdy.sh

##########################################
# Run setpdy and initialize PDY variables
##########################################
./setpdy.sh
. PDY

#########################
# Define COM directories
#########################
export COMIN_ROOT=${COMIN_ROOT:-${COMROOT:-""}}

if [[ "$RUN_ENVIR" == nco ]]; then
  export COMIN=${COMIN_ROOT:?}/${NET}/${envir}/${RUND}.${PDY}
  export COMOUT=${COMROOT:?}/${NET}/${envir}/${RUND}.${PDY}
  mkdir -m 775 -p $COMOUT
else
  export COMIN=${COMIN:-${COMIN_ROOT:?}/${NET}/${envir}/${RUND}.${PDY}}

# COMOUT_ROOT for developers defaults to unique $DATA/com directory as root to
#  prevent job from writing into a non-unique directory that might already have
#  output in it from a previous checkout run for the same cycle
# -----------------------------------------------------------------------------
  export COMOUT_ROOT=${COMOUT_ROOT:-${DATA}/com}
  export COMOUT=${COMOUT:-${COMOUT_ROOT}/${NET}/${envir}/${RUND}.${PDY}}
  mkdir -m 755 -p $COMOUT
fi

# comin and comin_m1 are paths to dump status files for bufr_avgdata.sh
export comin=${comin:-${COMIN_ROOT:?}/${NET}/${envir}/${RUND}.${PDY}}
export comin_m1=${comin_m1:-${COMIN_ROOT:?}/${NET}/${envir}/${RUND}.${PDYm1}}

# ---------------------------
# Paths for non-obsproc items
# ---------------------------

# directory path to data count/alert processing executed in bufr_datacount.sh
#  and data count averaging executed in model script and in bufr_avgdata.sh
# ---------------------------------------------------------------------------
export HOMEarch=${HOMEarch:-${COMROOT:?}/$NET/$envir/sdm_rtdm}

#  .. AVGDarch_IN is directory path containing 30-day avg files (read by
#     bufr_datacount.sh)
#     ------------------------------------------------------------------
#  .. AVGDarch_OUT is directory path for avg tables output by model script
#     --------------------------------------------------------------------
if [[ "$RUN_ENVIR" == nco ]]; then
  export AVGDarch_IN=$HOMEarch/avgdata
  export AVGDarch_OUT=$HOMEarch/avgdata
else
  [ -n "$HOMEarch" ] && HOMEarch_avgdata=$HOMEarch/avgdata
  export AVGDarch_IN=\
${AVGDarch_IN:-${HOMEarch_avgdata:-${COMIN_ROOT:?}/$NET/$envir/sdm_rtdm/avgdata}}
  export AVGDarch_OUT=${AVGDarch_OUT:-${COMOUT_ROOT:?}/$NET/$envir/sdm_rtdm/avgdata}
  mkdir -p $AVGDarch_OUT
fi

#  .. OBCNTarch is directory path to write new status files to & read all status
#     files from {can WRITE to this location only if COPY=YES (the default)}
#     --------------------------------------------------------------------------
export OBCNTarch=${OBCNTarch:-$HOMEarch/obcount_30day}

#  .. ALERTL is directory for alert log files output by bufr_datacount.sh
#     -------------------------------------------------------------------
if [[ "$RUN_ENVIR" == nco ]]; then
  if [[ ${envir} == prod ]]; then
    export ALERTL=${ALERTL:-${COMROOT:?}/logs/alertlog}
  else
    export ALERTL=${ALERTL:-${COMROOT:?}/logs/${envir}/alertlog}
  fi
  mkdir -p $ALERTL
else # developer
  export ALERTL=${ALERTL:-${COMOUT_ROOT:?}/logs/${envir}/alertlog}
  mkdir -p $ALERTL
fi

#################################################
# SETUP GDAS DATA DUMP POST PROCESSING VARIABLES
#################################################

#########################################################
# Specify variables specific to this execution of script
#########################################################
export PROCESS_DATACOUNTS=${PROCESS_DATACOUNTS:-YES}
export PROCESS_REMOREST=${PROCESS_REMOREST:-YES}
export PROCESS_UNBLKBUFR=${PROCESS_UNBLKBUFR:-NO}
export PROCESS_LISTERS=${PROCESS_LISTERS:-YES}

# Data count average tables are generated in the 18Z run only
if [ "$cyc" = '18' ]; then
   export PROCESS_AVGTABLES=${PROCESS_AVGTABLES:-YES}
else
   export PROCESS_AVGTABLES=${PROCESS_AVGTABLES:-NO}
fi

env

export NET=gdas
#####################
# Execute the script
#####################
$SCRIPTSobsproc_dump_post/exdump_post.sh.ecf
eval err_${RUN}_dump_post=$?

echo "`hostname`  --  `date -u`" > $COMOUT/where_${cycle}_${RUN}_dump_post_ran

> $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_global_ver" ]  &&  \
 echo "Current OBSPROC_GLOBAL version is $obsproc_global_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_dump_post_ver" ]  &&  \
 echo "OBSPROC_DUMP_POST version used by this job is \
$obsproc_dump_post_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_shared_bufr_remorest_ver" ]  &&  \
 echo "OBSPROC_SHARED_BUFR_REMOREST version used by this job is \
$obsproc_shared_bufr_remorest_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_shared_bufr_avgdata_ver" ]  &&  \
 echo "OBSPROC_SHARED_BUFR_AVGDATA version used by this job is \
$obsproc_shared_bufr_avgdata_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_shared_bufr_dumplist_ver" ]  &&  \
 echo "OBSPROC_SHARED_BUFR_DUMPLIST version used by this job is \
$obsproc_shared_bufr_dumplist_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run

if [ "$KEEPDATA" != YES ]; then
   cd $DATAROOT
   rm -rf $DATA
fi
date -u

exit
