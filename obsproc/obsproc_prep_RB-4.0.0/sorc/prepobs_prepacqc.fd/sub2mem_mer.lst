Page 1           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

      1 c$$$  Subprogram Documentation Block
      2 c   BEST VIEWED WITH 94-CHARACTER WIDTH WINDOW
      3 c
      4 c Subprogram: sub2mem_mer
      5 c   Programmer: D. Keyser       Org: NP22       Date: 2016-12-09
      6 c
      7 c Abstract: Takes a merged (mass and wind) aircraft data profile, containing NRLACQC events,
      8 c   (read from input arrays *_accum), adds mandatory levels (via interpolation from spanning
      9 c   levels) and stores it in BUFRLIB internal memory.  The calling routine will then call
     10 c   WRITSB in order to write the profile as a single report (subset) into the output
     11 c   PREPBUFR-like file containing merged (mass and wind) aircraft reports. Single(flight)-
     12 c   level reports that are not part of any profile will also be processed here if namelist
     13 c   switch l_prof1lvl=T.  A maximum of 255 level can be included in a profile report here.
     14 c
     15 c Program History Log:
     16 c 2010-11-15  S. Bender  -- Original Author
     17 c 2012-05-08  D. Keyser  -- Prepared for operational implementation
     18 c 2012-11-20  J. Woollen -- Initial port to WCOSS
     19 c 2013-02-07  D. Keyser  -- Final changes to run on WCOSS: use formatted print statements
     20 c                           where previously unformatted print was > 80 characters
     21 c 2014-12-09  Y. Zhu     -- Modified the calculation of vertical velocity rate (stored in
     22 c                           rate_accum) still using a finite-difference method, but now
     23 c                           calculated for both ascents and descents using the nearest
     24 c                           neighboring pair which are at least one minute apart (before,
     25 c                           only only be calculated for descents)
     26 c 2014-12-09  Y. Zhu     -- Add new namelist switch "l_mandlvl" which, when F, will skip
     27 c                           interpolation to mandatory levels
     28 c 2014-12-09  J. Purser/Y. Zhu -- Add new namelist switch "tsplines" which, when T, will
     29 c                           calculate vertical velocity rate (stored in rate_accum) using
     30 c                           Jim Purser's tension-spline interpolation utility to get
     31 c                           continuous gradient results in a profile and mitigate missing
     32 c                           time information
     33 c 2014-12-12  D. Keyser  -- Printout from vertical velocity rate calculation information for
     34 c                           QC'd merged aircraft reports written to profiles PREPBUFR-like
     35 c                           file is written to unit 41 rather than stdout.
     36 c 2015-04-17  Y. Zhu     -- 
     37 c                       1) This subroutine is more robust.  If there is an error in the
     38 c                          generation of vertical velocity rate in the tension-spline
     39 c                          interpolation utility pspl (called in this subroutine), this
     40 c                          subroutine (and thus the program itself) will no longer abort
     41 c                          (with either c. code 62, 63 or 64 depending upon which routine
     42 c                          inside pspl generated the error) but will instead revert to the
     43 c                          finite difference method for calculating vertical velocity rate.  
     44 c                       2) Previously, halfgate was set to be 30 for the data profiles that
     45 c                          don't have second information in time, but a tighter value of 10
     46 c                          for the data profiles that do have second information in time. Now
     47 c                          halfgate is relaxed to be 30 for the data profiles that do have
     48 c                          complete time information.
     49 c 2016-12-09  D. Keyser  --
     50 c                 - Nomenclature change: replaced "MDCRS/ACARS" with just "MDCRS".
     51 c                 - The format for a print statement containing latitude and longitude changed
     52 c                   to print to 5 decimal places since some aircraft reports contain this
     53 c                   precision.
     54 c
     55 c Usage: call sub2mem_mer(proflun,bmiss,mxlv,mxnmev,maxmandlvls,
     56 c                         mandlvls,mesgtype,hdr2wrt,
     57 c                         acid1,c_acftid1,c_acftreg1,

Page 2           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

     58 c                         rct_accum,drinfo_accum,acft_seq_accum,
     59 c                         mstq_accum,cat_accum,elv_accum,rpt_accum,
     60 c                         tcor_accum,
     61 c     	                  pevn_accum,pbg_accum,ppp_accum,
     62 c                         qevn_accum,qbg_accum,qpp_accum,
     63 c                         tevn_accum,tbg_accum,tpp_accum,
     64 c                         zevn_accum,zbg_accum,zpp_accum,
     65 c                         wuvevn_accum,wuvbg_accum,wuvpp_accum,
     66 c                         wdsevn_accum,mxe4prof,c_qc_accum,
     67 c                         num_events_prof,lvlsinprof,nlvinprof,
     68 c                         nrlacqc_pc,l_mandlvl,tsplines,l_operational,lwr)
     69 c
     70 c   Input argument list:
     71 c     proflun      - Unit number for the output post-PREPACQC PREPBUFR-like file containing
     72 c                    merged profile reports (always) and single(flight)-level reports not
     73 c                    part of any profile (when l_prof1lvl=T) with added NRLACQC events
     74 c                    (aircraft data only)
     75 c     bmiss        - BUFRLIB missing value (set in main program)
     76 c     mxlv         - Maximum number of levels allowed in a report profile
     77 c     mxnmev       - Maximum number of events allowed, per variable type
     78 c     maxmandlvls  - Maxmum number of mandatory pressure levels to consider for aircraft
     79 c                    profiles
     80 c     mandlvls     - List of mandatory pressure levels to consider for aircraft profiles
     81 c     mesgtype     - PREPBUFR message type (AIRCAR or AIRCFT) of the profile in question
     82 c     hdr2wrt      - Array containing header information for the profile report
     83 c     acid1        - Aircraft flight number for the profile MDCRS report {this will be encoded
     84 c                    into 'ACID' for MDCRS or AMDAR (LATAM only) reports in output PREPBUFR-
     85 c                    like profiles file}
     86 c     c_acftreg    - Aircraft tail number for the profile report as used in NRL QC processing
     87 c                    (passed into this subroutine only for printing purposes)
     88 c     c_acftid     - Aircraft flight number for the profile report as used in NRL QC
     89 c                    processing (passed into this subroutine only for printing purposes)
     90 c     rct_accum    - Array containing receipt time on all profile levels
     91 c     drinfo_accum - Array containing drift coordinates (lat, lon, time) on all profile
     92 c                    levels
     93 c     acft_seq_accum - Array containing the temperature precision and flight phase on all
     94 c                    profile levels
     95 c     mstq_accum   - Array containing the moisture quality flag on all profile levels
     96 c     cat_accum    - Array containing the PREPBUFR level categories on all profile levels
     97 c     elv_accum    - Array containing elevation on all profile levels
     98 c     rpt_accum    - Array containing reported observation time on all profile levels
     99 c     tcor_accum   - Array containing time correction indicator on all profile levels
    100 c     pevn_accum   - Array containing all pressure events (ob, qm, pc, rc) on all profile
    101 c                    levels
    102 c     pbg_accum    - Array containing pressure background information on all profile levels
    103 c     ppp_accum    - Array containing pressure post-processing information on all profile
    104 c                    levels
    105 c     qevn_accum   - Array containing all moisture events (ob, qm, pc, rc) on all profile
    106 c                    levels
    107 c     qbg_accum    - Array containing moisture background information on all profile levels
    108 c     qpp_accum    - Array containing moisture post-processing information on all profile
    109 c                    levels
    110 c     tevn_accum   - Array containing all temperature events (ob, qm, pc, rc) on all profile
    111 c                    levels
    112 c     tbg_accum    - Array containing temperature background information on all profile
    113 c                    levels
    114 c     tpp_accum    - Array containing temperature post-processing information on all profile

Page 3           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    115 c                    levels
    116 c     zevn_accum   - Array containing all altitude events (ob, qm, pc, rc) on all profile
    117 c                    levels
    118 c     zbg_accum    - Array containing altitude background information on all profile levels
    119 c     zpp_accum    - Array containing altitude post-processing information on all profile
    120 c                    levels
    121 c     wuvevn_accum - Array containing all wind (u/v) events (ob, qm, pc, rc) on all profile
    122 c                    levels
    123 c     wuvbg_accum  - Array containing wind (u/v) background information on all profile levels
    124 c     wuvpp_accum  - Array containing wind (u/v) post-processing information on all profile
    125 c                    levels
    126 c     wdsevn_accum - Array containing all wind (direction/speed) events (ob, qm, pc, rc) on
    127 c                    all profile levels
    128 c     mxe4prof     - Maximum number of events in a single-level merged report (i.e., the
    129 c                    maximum amongst the number of pressure, moisture, temperature, altitude,
    130 c                    u/v wind and dir/speed wind events)
    131 c     c_qc_accum   - Array containing NQLACQC quality information 11-character strings on all
    132 c                    profile levels
    133 c     lvlsinprof   - Array containing a list of pressure levels that are present in the
    134 c                    current profile
    135 c     nlvinprof    - Number of levels in profile
    136 c     nrlacqc_pc   - PREPBUFR program code for the NRLACQC step
    137 c     l_mandlvl    - Logical whether to interpolate to mandatory levels in profile generation
    138 c     tsplines     - Logical whether to use tension-splines for aircraft vertical velocity
    139 c                    calculation
    140 c     l_operational- Run program in operational mode if true
    141 c     lwr          - Machine word length in bytes (either 4 or 8)
    142 c
    143 c   Output argument list:
    144 c     hdr2wrt      - Array containing header information for the profile report (TYP undated,
    145 c                    (also changed to highest/lowest pressure level for ascents/descents)
    146 c     num_events_prof - Total number of events on an ob, across all levels, across all
    147 c                    reports (to this point), written into the PREPBUFR-like file (this value
    148 c                    is the same for each ob type)
    149 c     lvlsinprof   - Array containing a list of pressure levels that are present in the
    150 c                    current profile (now possibly also contains mandatory levels)
    151 c
    152 c   Output files:
    153 c     Unit proflun - PREPBUFR-like file containing merged (mass and wind) profile reports
    154 c                    (always) and single(flight)-level reports not part of any profile (when
    155 c                    l_prof1lvl=T) with NRLACQC events
    156 c     Unit 06      - Standard output print
    157 c     Unit 52      - Text file containing listing of all QC'd merged aircraft reports written
    158 c                    to profiles PREPBUFR-like file
    159 c
    160 c   Subprograms called:
    161 c     Unique:    none
    162 c     Library:
    163 c       SYSTEM:  SYSTEM
    164 c       BUFRLIB: UFBINT      IBFMS
    165 c       W3NCO:   W3TAGE      ERREXIT
    166 c       W3EMC:   ORDERS
    167 c
    168 c   Exit States:
    169 c     Cond =  0 - successful run
    170 c            59 - nlvinprof is zero coming into this subroutine (should never happen!)
    171 c            61 - index "j is .le. 1 meaning "iord" array underflow (should never happen!)

Page 4           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    172 c
    173 c Remarks: Called by subroutine output_acqc_prof.
    174 c
    175 c Attributes:
    176 c   Language: FORTRAN 90
    177 c   Machine:  NCEP WCOSS
    178 c
    179 c$$$
    180       subroutine sub2mem_mer(proflun,bmiss,mxlv,mxnmev,maxmandlvls,
    181      +                       mandlvls,mesgtype,hdr2wrt,
    182      +                       acid1,c_acftid1,c_acftreg1,
    183      +                       rct_accum,drinfo_accum,acft_seq_accum,
    184      +                       mstq_accum,cat_accum,elv_accum,rpt_accum,
    185      +                       tcor_accum,
    186      +	                     pevn_accum,pbg_accum,ppp_accum,
    187      +                       qevn_accum,qbg_accum,qpp_accum,
    188      +                       tevn_accum,tbg_accum,tpp_accum,
    189      +                       zevn_accum,zbg_accum,zpp_accum,
    190      +                       wuvevn_accum,wuvbg_accum,wuvpp_accum,
    191      +                       wdsevn_accum,mxe4prof,c_qc_accum,
    192      +                       num_events_prof,lvlsinprof,nlvinprof,
    193      +                       nrlacqc_pc,l_mandlvl,tsplines,
    194      +                       l_operational,lwr)
    195 
    196       use pkind, only: dp
    197       use pspl, only: bnewton,best_slalom,count_gates,convertd,
    198      +                convertd_back
    199       implicit none
    200 
    201 c ------------------------------
    202 c Parameter statements/constants
    203 c ------------------------------
    204       integer      proflun             ! output unit number for post-PREPACQC PREPBUFR-like
    205                                        !  file containing merged profile reports (always) and
    206                                        !  single(flight)-level reports not part of any
    207                                        !  profile (when l_prof1lvl=T) with added NRLACQC
    208                                        !  events
    209 
    210       real*8       bmiss               ! BUFRLIB missing value (set in main program)
    211 
    212 c Variables used to write data to output PREPBUFR-like file in sorted order
    213 c -------------------------------------------------------------------------
    214       integer      mxlv                ! maximum number of report levels allowed in aircraft
    215                                        !  profiles
    216       character*6  cmxlv               ! character form of mxlv
    217 
    218       integer      mxnmev              ! maximum number of events allowed in stack
    219      +,            lvlsinprof(mxlv)    ! array containing a list of pressure levels that are
    220                                        !  present in the current profile (later changed to
    221                                        !  add mandatory levels)
    222      +,            mxe4prof            ! maximum number of events in a single-level merged
    223                                        !  report (i.e., the maximum amongst the number of
    224                                        !  pressure, moisture, temperature, altitude, u/v wind
    225                                        !  and dir/speed wind events)
    226      +,            nlvinprof           ! number of levels in a profile upon input
    227 
    228       real*8   hdr2wrt(15)             ! header info for current profile (passed in)

Page 5           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    229      +,        drinfo_accum(3,mxlv)    ! array used to accumulate drift info across profile
    230                                        !  levels
    231      +,        acft_seq_accum(2,mxlv)  ! array used to accumulate ACFT_SEQ (PCAT -temperature
    232                                        !  precision, POAF - phase of flight) info across
    233                                        !  profile levels
    234      +,        mstq_accum(1,mxlv)      ! array used to accumulate moisture QC marks across
    235                                        !  profile levels
    236      +,        cat_accum(1,mxlv)       ! array used to accumulate level category markers
    237                                        !  across profile levels
    238      +,        elv_accum(1,mxlv)       ! array used to accumulate elevation across profile
    239                                        !  levels
    240      +,        rpt_accum(1,mxlv)       ! array used to accumulate reported obs time across
    241                                        !  profile levels
    242      +,        tcor_accum(1,mxlv)      ! array used to accumulate time correction factor
    243                                        !  across profile levels
    244      +,        rct_accum(1,mxlv)       ! array used to accumulate receipt time across profile
    245                                        !  levels
    246 
    247       real*8   pevn_accum(4,mxlv,mxnmev)! array used to accumulate pressure data/events for a
    248                                         !  single profile, across profile levels
    249      +,        pbg_accum(3,mxlv)        ! array used to accumulate pressure background info
    250                                         !  (POE, PFC, PFCMOD) for a single profile, across
    251                                         !  profile levels
    252      +,        ppp_accum(3,mxlv)        ! array used to accumulate pressure post-processing
    253                                         !  info (PAN, PCL, PCS) for a single profile, across
    254                                         !  profile levels
    255 
    256       real*8   qevn_accum(4,mxlv,mxnmev)! array used to accumulate moisture data/events for a
    257                                         !  single profile, across profile levels
    258      +,        qbg_accum(3,mxlv)        ! array used to accumulate moisture background info
    259                                         !  (QOE, QFC, QFCMOD) for a single profile, across
    260                                         !  profile levels
    261      +,        qpp_accum(3,mxlv)        ! array used to accumulate moisture post-processing
    262                                         !  info (QAN, QCL, QCS) for a single profile, across
    263                                         !  profile levels
    264 
    265       real*8   tevn_accum(4,mxlv,mxnmev)! array used to accumulate temperature data/events
    266                                         !  for a single profile, across profile levels
    267      +,        tbg_accum(3,mxlv)        ! array used to accumulate temperature background
    268                                         !  info (TOE, TFC, TFCMOD) for a single profile,
    269                                         !  across profile levels
    270      +,        tpp_accum(3,mxlv)        ! array used to accumulate temperature post-
    271                                         !  processing info (TAN, TCL, TCS) for a single
    272                                         !  profile, across profile levels
    273 
    274       real*8   zevn_accum(4,mxlv,mxnmev)! array used to accumulate altitude data/events for a
    275                                         !  single profile, across profile levels
    276      +,        zbg_accum(3,mxlv)        ! array used to accumulate altitude background info
    277                                         !  (ZOE, ZFC, ZFCMOD) for a single profile, across
    278                                         !  profile levels
    279      +,        zpp_accum(3,mxlv)        ! array used to accumulate altitude post-processing
    280                                         !  info (ZAN, ZCL, ZCS) for a single profile, across
    281                                         !  profile levels
    282 
    283       real*8   wuvevn_accum(5,mxlv,mxnmev)! array used to accumulate wind data/events (u/v
    284                                           !  components) for a single profile, across profile
    285                                           !  levels

Page 6           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    286      +,        wuvbg_accum(5,mxlv)      ! array used to accumulate wind background info (WOE,
    287                                         !  UFC, VFC, UFCMOD, VFCMOD)  for a single profile,
    288                                         !  across profile levels
    289      +,        wuvpp_accum(6,mxlv)      ! array used to accumulate wind post-processing info
    290                                         !  (UAN, VAN, UCL, VCL, UCS, VCS) for a single
    291                                         !  profile, across profile levels
    292 
    293       real*8   wdsevn_accum(5,mxlv,mxnmev)! array used to accumulate wind data/events
    294                                           !  (direction/speed) for a single profile, across
    295                                           !  profile levels
    296 
    297       character*11 c_qc_accum(mxlv)    ! array used to accumulate NRLACQC quality information
    298                                        !  on individual obs in a profile, across profile
    299                                        !  levels
    300 
    301 c Logicals controlling processing (not read in from namelist in main program)
    302 c ---------------------------------------------------------------------------
    303       logical l_mandlvl                ! T=interpolate to mandatory levels in profile
    304                                        !   generation
    305                                        ! F=do not interpolate to mandatory levels in profile
    306                                        !   generation
    307       logical tsplines                 ! T=use tension-splines for aircraft vertical velocity
    308                                        !   calculation
    309                                        ! F=use finite-differencing for aircraft vertical
    310                                        !   velocity calculation
    311       logical l_operational            ! Run program  in operational mode if true
    312 
    313 c Summary counters
    314 c ----------------
    315       integer num_events_prof          ! total number of events on an ob, across all levels,
    316                                        !  across all reports, written in the PREPBUFR-like
    317                                        !  (profiles) file (this value is the same for each
    318                                        !  ob type)
    319 c Mandatory levels settings
    320 c -------------------------
    321       integer maxmandlvls              ! maxmum number of mandatory pressure levels to
    322                                        !  consider for aircraft profiles
    323      +,       mandlvls(maxmandlvls)    ! list of mandatory pressure levels to consider for
    324                                        !  aircraft profiles
    325      +,       nmandlvls                ! number of mandatory levels interpolated for this
    326                                        !  profile
    327      +,       nmNbtw                   ! number of mandatory levels between "bread of the
    328                                        !  sandwich" reports
    329 
    330       character*8 mesgtype             ! BUFR message type (e.g., 'AIRCFT  ')
    331 
    332       real*8      acid1                ! aircraft flight number for the profile MDCRS or AMDAR
    333                                        !  (LATAM only) report
    334      +,           acid_arr1            ! used with ufbint routine to encode aircraft flight
    335                                        !  number (ACID) into MDCRS or AMDAR (LATAM only)
    336                                        !  reports in output PREPBUFR-like file)
    337 
    338       character*9  c_acftid1           ! aircraft flight number (as processed by NRLACQC)
    339                                        !  for the profile report (used for printing purposes
    340                                        !  only)
    341 
    342       character*8  c_acftreg1          ! aircraft tail number (as processed by NRLACQC)

Page 7           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    343                                        !  for the profile report (used for printing purposes
    344                                        !  only)
    345 
    346       integer     nlv2wrt_tot          ! total number of levels to write in this profile,
    347                                        !  including any interpolated mandatory levels
    348       character*6 cnlv2wrt_tot         ! character form of nlv2wrt_tot
    349 
    350       integer     nlv2wrt              ! number of levels in profile to write to output	
    351       character*6 cnlv2wrt             ! character form of nlv2wrt
    352 
    353       integer     nlvwrt               ! number of levels written to output PREPBUFR-like
    354                                        !  file
    355 
    356       real*8      pevns4(4,mxlv)       ! array used with ufbint routine to encode pressure
    357                                        !  events into output PREPBUFR-like file
    358      +,           qevns4(4,mxlv)       ! array used with ufbint routine to encode moisture
    359                                        !  events into output PREPBUFR-like file
    360      +,           tevns4(4,mxlv)       ! array used with ufbint routine to encode temperature
    361                                        !  events into output PREPBUFR-like file
    362      +,           zevns4(4,mxlv)       ! array used with ufbint routine to encode altitude
    363                                        !  events into output PREPBUFR-like file
    364      +,           wuvevns5(5,mxlv)     ! array used with ufbint routine to encode wind (u/v
    365                                        !  component) events into output PREPBUFR-like file
    366      +,	          wdsevns5(5,mxlv)     ! array used with ufbint routine to encode wind
    367                                        !  (direction/speed) events into output PREPBUFR-like
    368                                        !  file
    369 
    370 c For background/post-processing info
    371 c -----------------------------------
    372       real*8      pbgarr3(3,mxlv)      ! array used with ufbint routine to encode pressure
    373                                        !  background info into output PREPBUFR-like file
    374      +,	          qbgarr3(3,mxlv)      ! array used with ufbint routine to encode moisture
    375                                        !  background info into output PREPBUFR-like file
    376      +,	          tbgarr3(3,mxlv)      ! array used with ufbint routine to encode temperature
    377                                        !  background info into output PREPBUFR-like file
    378      +,	          zbgarr3(3,mxlv)      ! array used with ufbint routine to encode altitude
    379                                        !  background info into output PREPBUFR-like file
    380      +,	          wuvbgarr5(5,mxlv)    ! array used with ufbint routine to encode wind (u/v
    381                                        !  component) background info into output PREPBUFR-
    382                                        ! like file
    383      +,           ppparr3(3,mxlv)      ! array used with ufbint routine to encode pressure
    384                                        !  post-processing info into output PREPBUFR-like file
    385      +,           qpparr3(3,mxlv)      ! array used with ufbint routine to encode moisture
    386                                        !  post-processing info into output PREPBUFR-like file
    387      +,	          tpparr3(3,mxlv)      ! array used with ufbint routine to encode temperature
    388                                        !  post-processing info into output PREPBUFR-like file
    389      +,	          zpparr3(3,mxlv)      ! array used with ufbint routine to encode altitude
    390                                        !  post-processing info into output PREPBUFR-like file
    391      +,	          wuvpparr6(6,mxlv)    ! array used with ufbint routine to encode wind (u/v
    392                                        !  component) info into output PREPBUFR-like file
    393      +,	          drarr3(3,mxlv)       ! array used with ufbint routine to encode drift info
    394                                        !  into output PREPBUFR-like file
    395      +,	          acft_seq_arr2(2,mxlv)! array used with ufbint routine to encode PCAT, POAF
    396                                        !  into output PREPBUFR-like file
    397      +,	          mstq_arr1(1,mxlv)    ! array used with ufbint routine to encode moisture QC
    398                                        !  flag into output PREPBUFR-like file
    399      +,	          cat_arr1(1,mxlv)     ! array used with ufbint routine to encode level

Page 8           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    400                                        !  category info into output PREPBUFR-like file
    401      +,           rct_arr1(1,mxlv)     ! array used with ufbint routine to encode level
    402                                        !  receipt time info into output PREPBUFR-like file
    403      +,	          ialr_arr1(1,mxlv)    ! array used with ufbint routine to encode ascent/
    404                                        !  descent rate into output PREPBUFR-like file
    405      +,	          turb_arr4(4,mxlv)    ! array used with ufbint routine to encode turbulence
    406                                        !  data into output PREPBUFR-like file
    407 
    408 C Arrays associated with sorting of data
    409 c --------------------------------------
    410       integer  iwork(mxlv)             ! work array
    411      +,        iord(mxlv)              ! array containing sorted index
    412 
    413 C Loop indices
    414 c ------------
    415       integer  i,j,k,l                 ! original (unsorted) indices
    416      +,        iii                     ! index
    417      +,        jj                      ! sorted (pressure low->high) index pointing to lvl j
    418      +,        jjp1                    ! sorted index pointing to next level below jj
    419      +,        jjm1                    ! sorted index pointing to previous level above jj
    420      +,        jjp2                    ! sorted index pointing to next level below jjp1
    421      +,        jjm2                    ! sorted index pointing to previous level above jjm1
    422      +,        jjmaxp                  ! sorted index pointing to level jj with max pressure
    423      +,        jjminp                  ! sorted index pointing to level jj with min pressure
    424      +,        jjpnmnbtw               ! sorted index pointing to next level below jj that is
    425                                        !  not a mandatory pressure level
    426      +,        jk                      ! index,
    427      +,        c1_jk                   ! index,
    428      +,        c2_jk                   ! index,
    429      +,        jkp                     ! index,
    430      +,        jkm                     ! index, 
    431      +,        jjp                     ! index,
    432      +,        jjm                     ! index,
    433      +,        kk                      ! sorted (pressure low->high) index pointing to lvl k
    434      +,        jjpk                    ! sorted index pointing to level jj plus k
    435 
    436       real     pul                     ! pressure ob at level "below" mandatory level (higher
    437                                        !  pressure, lower altitude)
    438      +,        pll                     ! pressure ob at level "above" mandatory level (lower
    439                                        !  pressure, higher altitude)
    440      +,        pqul                    ! pressure qm at level "below" mandatory level (higher
    441                                        !  pressure, lower altitude)
    442      +,        pqll                    ! pressure qm at level "above" mandatory level (lower
    443                                        !  pressure, higher altitude)
    444      +,        pml                     ! pressure ob at mandatory level
    445      +,        tul                     ! temperature ob at level "below" mandatory level
    446                                        !  (higher pressure, lower altitude)
    447      +,        tll                     ! temperature ob at level "above" mandatory level
    448                                        !  (lower pressure, higher altitude)
    449      +,        tqul                    ! temperature qm at level "below" mandatory level
    450                                        !  (higher pressure, lower altitude)
    451      +,        tqll                    ! temperature qm at level "above" mandatory level
    452                                        !  (lower pressure, higher altitude)
    453      +,	       tml                     ! temperature ob at mandatory level
    454      +,	       dt_dlnp                 ! change in temperature w.r.t. change in log-pressure
    455      +,	       qul                     ! moisture ob at level "below" mandatory level (higher
    456                                        !  pressure, lower altitude)

Page 9           Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    457      +,	       qll                     ! moisture ob at level "above" mandatory level (lower
    458                                        !  pressure, higher altitude)
    459      +,	       qqul                    ! moisture qm at level "below" mandatory level (higher
    460                                        !  pressure, lower altitude)
    461      +,        qqll                    ! moisture qm at level "above" mandatory level (lower
    462                                        !  pressure, higher altitude)
    463      +,	       qml                     ! moisture ob at mandatory level
    464      +,	       dq_dlnp                 ! change in moisture w.r.t. change in log-pressure
    465      +,	       zul                     ! altitude ob at level "below" mandatory level (higher
    466                                        !  pressure, lower altitude)
    467      +,	       zll                     ! altitude ob at level "above" mandatory level (lower
    468                                        !  pressure, higher altitude)
    469      +,	       zqul                    ! altitude qm at level "below" mandatory level (higher
    470                                        !  pressure, lower altitude)
    471      +,        zqll                    ! altitude qm at level "above" mandatory level (lower
    472                                        !  pressure, higher altitude)
    473      +,        zml                     ! altitude ob at mandatory level
    474      +,        dz_dlnp                 ! change in altitude w.r.t. change in log-pressure
    475      +,        uul                     ! u-comp of wind ob at level "below" mandatory level
    476                                        !  (higher pressure, lower altitude)
    477      +,        ull                     ! u-comp of wind ob at level "above" mandatory level
    478                                        !  (lower pressure, higher altitude)
    479      +,        uml                     ! u-comp of wind ob at mandatory level
    480      +,        du_dlnp                 ! change in u-comp of wind w.r.t. change in
    481                                        !  log-pressure
    482      +,        vul                     ! v-comp of wind ob at level "below" mandatory level
    483                                        !  (higher pressure, lower altitude)
    484      +,        vll                     ! v-comp of wind ob at level "above" mandatory level
    485                                        !  (lower pressure, higher altitude)
    486      +,        vml                     ! v-comp of wind ob at mandatory level
    487      +,        dv_dlnp                 ! change in v-comp of wind w.r.t. change in
    488                                        !  log-pressure
    489      +,        uvqul                   ! u/v-comp of wind qm at level "below" mandatory level
    490                                        !  (higher pressure, lower altitude)
    491      +,        uvqll                   ! u/v-comp of wind qm at level "above" mandatory level
    492                                        !  (lower pressure, higher altitude)
    493 
    494       integer  ibfms                   ! BUFRLIB function for testing for missing
    495 
    496       real*8   dtime_dlnp              ! change in time w.r.t. change in log-pressure
    497 
    498       real     dist_pul_pll            ! horizontal distance traveled when going from point
    499                                        !  at pll to pul
    500      +,	       spd_pul_pll             ! average speed while traveling from point at pll to
    501                                        !  pul
    502      +,        dist2pml                ! horizontal distance traveled when going from point
    503                                        !  at pll to pml
    504 ! vvvv DAK-future change perhaps to account for incr. lat/lon precision
    505      +,        lat_pul                 ! latitude at data level "below" mandatory level
    506                                        !  (higher pressure, lower altitude)
    507      +,        lon_pul                 ! longitude at data level "below" mandatory level
    508                                        !  (higher pressure, lower altitude)
    509      +,        lat_pll                 ! latitude at data level "above" mandatory level
    510                                        !  (lower pressure, higher altitude)
    511      +,        lon_pll                 ! longitude at data level "above" mandatory level
    512                                        !  (lower pressure, higher altitude)
    513 ! ^^^^ DAK-future change perhaps to account for incr. lat/lon precision

Page 10          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    514      +,        radius_e                ! radius of the earth in meters
    515      +,        deg2rad                 ! conversion factor for converting degrees -> radians
    516 
    517       parameter(radius_e = 6371229.)
    518       parameter(deg2rad = 3.14159274/180.)
    519 
    520       real*8   delx                    ! change in longitude/nmNbtw
    521      +,        dely                    ! change in latitude/nmNbtw
    522      +,        dt                      ! delta time (sec) between two levels, used to
    523                                        !  calculate instantaneous altitude (ascent/descent)
    524                                        !  rate
    525      +,        dt_new                  ! delta time
    526      +,        rate_accum(mxlv)        ! array of instantaneous altitude (ascent/descent)
    527                                        !  rates on all levels of profile
    528 
    529 c Variables used in printing values for a particular report and level
    530 c -------------------------------------------------------------------
    531       integer  ihdr2wrt9               ! PREPBUFR instrument type ("ITP" from header)
    532      +,        iacft_seq_accum2        ! temperature precision, and phase of flight
    533      +,        idrinfo_accum3          ! drift information
    534      +,        izevn_accum1            ! altitude ob
    535      +,        iwdsevn_accum1          ! wind direction ob
    536      +,        ipevn_accum2            ! pressure quality mark
    537      +,        izevn_accum2            ! altitude quality mark
    538      +,        itevn_accum2            ! temperature quality mark
    539      +,        iqevn_accum2            ! moisture quality mark
    540      +,        iwuvevn_accum3          ! wind quality mark
    541      +,        ipevn_accum4            ! pressure reason code 
    542      +,        izevn_accum4            ! altitude reason code
    543      +,        itevn_accum4            ! temperature reason code
    544      +,        iqevn_accum4            ! moisture code
    545      +,        iwuvevn_accum5          ! wind reason code
    546      +,        nevents_t               ! number of events on temperature
    547      +,        nevents_q               ! number of events on moisture
    548      +,        nevents_w               ! number of events on wind
    549      +,        imstq_accum1            ! moisture qc flag
    550      +,        icat_accum1             ! PREPBUFR level category ("CAT")
    551      +,        ihdr2wrt6               ! PREPBUFR report type ("TYP" from header)
    552 
    553       real*8       wspd                ! wind speed ob
    554      +,            q_sphum             ! moisture (specific humidity) ob
    555      +,            hdr2wrt1            ! real form of PREPBUFR report id ("SID" from header)
    556 
    557 c Misc.
    558 c -----
    559       real        nrlacqc_pc           ! PREPBUFR program code for the NRLACQC step
    560 
    561       integer     lwr                  ! machine word length in bytes (either 4 or 8)
    562 
    563 c Variables related to tspline
    564       integer, parameter:: nit=30
    565 !     real(dp),parameter:: bigT=120.0,halfgate=30.0,heps=.01
    566       real(dp),parameter:: bigT=120.0,heps=.01
    567       integer nh,nh2,m,mh,maxita,maxitb,maxit,maxrts,doru
    568       integer err_tspline
    569       real(dp) enbest,timemin
    570       real(dp) halfgate

Page 11          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    571       integer, allocatable :: idx(:)
    572       integer, allocatable :: modebest(:)
    573       integer, allocatable :: pof(:)
    574       integer, allocatable :: hgts(:)
    575       integer, allocatable :: hgtp(:)
    576       real, allocatable :: tdata(:),hdata(:),wdata(:)
    577       real(dp), allocatable :: te(:),hs(:),dhdt(:)
    578       real(dp), allocatable :: hp(:)
    579       real(dp), allocatable :: qbest(:),habest(:)
    580       logical descending,FF,nearsec
    581 
    582 c ----------------------------------------------------
    583 
    584 c Start program
    585 c -------------
    586 ccc   print *, 'in sub2mem_mer for the next merged report'
    587 
    588       rate_accum = bmiss
    589 
    590       if(nlvinprof.eq.0) then
    591         print *
    592         print *, '### PROBLEM - into subr, sub2mem_mer with nlvinprof ',
    593      +           '= ',0
    594         print *, '              this should never happen!!'
    595         print *
    596         call w3tage('PREPOBS_PREPACQC')
    597         call errexit(59)
    598       endif
    599 
    600 c First sort pressures from lowest to highest, this will also determine the maximum and
    601 c  minimum pressure values in this profile
    602 c -------------------------------------------------------------------------------------
    603       call orders(1,iwork,lvlsinprof,iord,nlvinprof,1,lwr,2)
    604 
    605 ccc   print *, '.. there are originally ',nlvinprof,' p-levels in this',
    606 ccc  +         ' report'
    607 
    608 c Interpolate z,t,q,u,v values to mandatory levels - include the levels of 1000, 850, 700,
    609 c  500, 400, 300, 200, 150 and 100 mb in the acceptable mandatory levels for aircraft
    610 c  profiles (not many aircraft flying above 100 mb!)
    611 c ---------------------------------------------------------------------------------------
    612       nmandlvls = 0
    613       nlv2wrt_tot = nlvinprof
    614 
    615       if(l_mandlvl .and. nlvinprof.gt.1) then ! do interpolation only for profiles with
    616                                               !  more than one report!
    617         loop1: do i = 1,maxmandlvls   ! maxmandlvls=9 - number of mandatory levels to check
    618           do j = 1,nlvinprof          !  levels will appear in increasing order via index
    619                                       !  jj... first level might be 247 mb, second might be
    620                                       !  427 mb, etc.
    621             jj = iord(j)
    622             jjp1 = iord(j+1)
    623 
    624             if(j.lt.nlvinprof) then   ! exclude last level in profile (one closest to the
    625                                       !  ground) (use .lt. instead of .le. to do this); only
    626                                       !  interpolate for mandatory levels sandwiched by
    627                                       !  actual data

Page 12          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    628 
    629 c Below, jj points to level at a lower pressure/higher altitude and jjp1 points to the
    630 c  adjacent level at a higher pressure, lower altitude)
    631 c ------------------------------------------------------------------------------------
    632               if(lvlsinprof(jj)  .lt.mandlvls(i) .and.
    633      +	         lvlsinprof(jjp1).gt.mandlvls(i)) then
    634  
    635                 if(nlvinprof+nmandlvls+1.gt.mxlv) then
    636 C.......................................................................
    637 C There are more levels in profile than "mxlv" -- do not process any more levels
    638 C ------------------------------------------------------------------------------
    639                   print 53, mxlv,mxlv
    640    53 format(/' #####> WARNING: THERE ARE MORE THAN ',I6,' LEVELS IN ',
    641      + 'THIS PROFILE -- WILL CONTINUE ON PROCESSING ONLY ',I6,' LEVELS',
    642      + ' FOR THIS PROFILE'/)
    643                   write(cmxlv,'(i6)') mxlv
    644                   call system('[ -n "$jlogfile" ] && $DATA/postmsg'//
    645      +             ' "$jlogfile" "***WARNING:'//cmxlv//' AIRCRAFT '//
    646      +             'PROFILE LEVEL LIMIT EXCEEDED IN '//
    647      +             'PREPOBS_PREPACQC, ONLY '//cmxlv//' LEVELS '//
    648      +             'PROCESSED"')
    649                   exit loop1
    650 C.......................................................................
    651                 endif
    652 
    653                 nmandlvls = nmandlvls + 1
    654 
    655 c Now calculate values on mandlvls(i) using values at lvlsinprof(j) (ll/lower level and (j+1)
    656 c  (ul/upper level) - USE REASON CODE 98 FOR INTERPOLATED MANDATORY LEVELS (use highest
    657 c  quality mark amongst lower and upper levels)
    658 c -------------------------------------------------------------------------------------------
    659                 pll  = lvlsinprof(jj)       ! pressure ob at level "above" mandatory level
    660                 pul  = lvlsinprof(jjp1)     ! pressure ob at level "below" mandatory level
    661                 pqll = pevn_accum(2,jj,1)   ! pressure qm at level "above" mandatory level
    662                 pqul = pevn_accum(2,jjp1,1) ! pressure qm at level "below" mandatory level
    663                 pml = mandlvls(i)           ! pressure at mandatory level
    664 
    665                 lvlsinprof(nlvinprof+nmandlvls) = mandlvls(i)
    666                 pevn_accum(1,nlvinprof+nmandlvls,1) = pml/10.           ! POB
    667                 pevn_accum(2,nlvinprof+nmandlvls,1) = max(pqll,pqul)    ! PQM 
    668                 pevn_accum(3,nlvinprof+nmandlvls,1) = nrlacqc_pc        ! PPC
    669                 pevn_accum(4,nlvinprof+nmandlvls,1) = 98                ! PRC
    670 
    671                 cat_accum(1,nlvinprof+nmandlvls) = 7 ! interpolated mand. levels get CAT = 7
    672 
    673 c Temperature
    674 c -----------
    675                 if(ibfms(tevn_accum(1,jj,1)).eq.0 .and.
    676      +             ibfms(tevn_accum(1,jjp1,1)).eq.0 ) then ! temperature isn't missing
    677                   do iii = mxe4prof,1,-1
    678                     if(ibfms(tevn_accum(1,jj,iii)).ne.0) then
    679                       nevents_t = iii
    680                     else
    681                       nevents_t = iii
    682                       exit
    683                     endif
    684                   enddo

Page 13          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    685                   tll  = tevn_accum(1,jj,nevents_t)   ! temp ob at lvl "above" mandatory level
    686                   tqll = tevn_accum(2,jj,nevents_t)   ! temp qm at lvl "above" mandatory level
    687                   do iii = mxe4prof,1,-1
    688                     if(ibfms(tevn_accum(1,jjp1,iii)).ne.0) then
    689                       nevents_t = iii
    690                     else
    691                       nevents_t = iii
    692                       exit
    693                     endif
    694                   enddo
    695                   tul  = tevn_accum(1,jjp1,nevents_t) ! temp ob at lvl "below" mandatory level
    696                   tqul = tevn_accum(2,jjp1,nevents_t) ! temp qm at lvl "below" mandatory level
    697 ccccc             print *, 'pmd, pll, pul, tqll,tqul: ',pml, pll, pul,
    698 ccccc+                      tqll,tqul
    699 
    700                   dt_dlnp = (tul - tll)/alog(pul/pll)
    701 
    702                   tml = tll + (dt_dlnp * (alog(pml/pll)))
    703 
    704                   tevn_accum(1,nlvinprof+nmandlvls,1) = tml             ! TOB
    705                   tevn_accum(2,nlvinprof+nmandlvls,1) = max(tqll,tqul)  ! TQM 
    706                   tevn_accum(3,nlvinprof+nmandlvls,1) = nrlacqc_pc      ! TPC
    707                   tevn_accum(4,nlvinprof+nmandlvls,1) = 98              ! TRC
    708 
    709                 endif ! temps missing?
    710 
    711 c Moisture
    712 c --------
    713                 if(ibfms(qevn_accum(1,jj,1)).eq.0 .and.
    714      +             ibfms(qevn_accum(1,jjp1,1)).eq.0 ) then ! moisture isn't missing
    715                   do iii = mxe4prof,1,-1
    716                     if(ibfms(qevn_accum(1,jj,iii)).ne.0) then
    717                       nevents_q = iii
    718                     else
    719                       nevents_q = iii
    720                       exit
    721                     endif
    722                   enddo
    723                   qll  = qevn_accum(1,jj,nevents_q)   ! q ob at level "above" mandatory level
    724                   qqll = qevn_accum(2,jj,nevents_q)   ! q qm at level "above" mandatory level
    725                   do iii = mxe4prof,1,-1
    726                     if(ibfms(qevn_accum(1,jjp1,iii)).ne.0) then
    727                       nevents_q = iii
    728                     else
    729                       nevents_q = iii
    730                       exit
    731                     endif
    732                   enddo
    733                   qul  = qevn_accum(1,jjp1,nevents_q) ! q ob at level "below" mandatory level
    734                   qqul = qevn_accum(2,jjp1,nevents_q) ! q qm at level "below" mandatory level
    735 
    736                   dq_dlnp = (qul - qll)/alog(pul/pll)
    737 
    738                   qml = qll + (dq_dlnp * (alog(pml/pll)))
    739 
    740                   qevn_accum(1,nlvinprof+nmandlvls,1) = qml             ! QOB
    741                   qevn_accum(2,nlvinprof+nmandlvls,1) = max(qqll,qqul)  ! QQM 

Page 14          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    742                   qevn_accum(3,nlvinprof+nmandlvls,1) = nrlacqc_pc      ! QPC
    743                   qevn_accum(4,nlvinprof+nmandlvls,1) = 98              ! QRC
    744 
    745                 else ! if moisture missing, check to see if QFC is present for "bread"
    746                      !  levels; if so, interpolate QFC
    747                   if(ibfms(qbg_accum(2,jj)).eq.0 .and.
    748      +	             ibfms(qbg_accum(2,jjp1)).eq.0 ) then ! QFC isn't missing for "bread"
    749                                                           !  levels
    750                     qll = qbg_accum(2,jj)     ! QFC at ob level "above" mandatory level
    751                     qul = qbg_accum(2,jjp1)   ! QFC at ob level "below" mandatory level
    752 
    753                     dq_dlnp = (qul - qll)/alog(pul/pll)
    754 
    755                     qml = qll + (dq_dlnp * (alog(pml/pll)))
    756 
    757                     qbg_accum(2,nlvinprof+nmandlvls) = qml ! QFC
    758 
    759                   endif ! is QFC present for "bread" levels when moisture missing?
    760                 endif ! moisture missing?
    761 
    762 c Altitude
    763 c --------
    764                 if(ibfms(zevn_accum(1,jj,1)).eq.0 .and.
    765      +             ibfms(zevn_accum(1,jjp1,1)).eq.0 ) then ! altitude isn't missing
    766                   zll  = zevn_accum(1,jj,1)           ! z ob at level "above" mandatory level
    767                   zul  = zevn_accum(1,jjp1,1)         ! z ob at level "below" mandatory level
    768                   zqll = zevn_accum(2,jj,1)           ! z qm at level "above" mandatory level
    769                   zqul = zevn_accum(2,jjp1,1)         ! z qm at level "below" mandatory level
    770 
    771                   dz_dlnp = (zul - zll)/alog(pul/pll)
    772 
    773                   zml = zll + (dz_dlnp * (alog(pml/pll)))
    774 
    775                   zevn_accum(1,nlvinprof+nmandlvls,1) = zml             ! ZOB
    776                   zevn_accum(2,nlvinprof+nmandlvls,1) = max(zqll,zqul)  ! ZQM 
    777                   zevn_accum(3,nlvinprof+nmandlvls,1) = nrlacqc_pc      ! ZPC
    778                   zevn_accum(4,nlvinprof+nmandlvls,1) = 98              ! ZRC
    779 
    780                 endif ! altitude missing?
    781 
    782 c u- and v- components of wind
    783 c ----------------------------
    784                 if(ibfms(wuvevn_accum(1,jj,1)).eq.0 .and.
    785      +             ibfms(wuvevn_accum(1,jjp1,1)).eq.0 .and.
    786      +             ibfms(wuvevn_accum(2,jj,1)).eq.0 .and.
    787      +             ibfms(wuvevn_accum(2,jjp1,1)).eq.0) then ! u and v aren't missing
    788                   do iii = mxe4prof,1,-1
    789                     if(ibfms(wuvevn_accum(1,jj,iii)).ne.0 .or.
    790      +                 ibfms(wuvevn_accum(2,jj,iii)).ne.0) then
    791                       nevents_w = iii
    792                     else
    793                       nevents_w = iii
    794                       exit
    795                     endif
    796                   enddo
    797                   ull   = wuvevn_accum(1,jj,nevents_w)  ! UOB ob at lvl "above" mandatory lvl
    798                   vll   = wuvevn_accum(2,jj,nevents_w)  ! VOB ob at lvl "above" mandatory lvl

Page 15          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    799                   uvqll = wuvevn_accum(3,jj,nevents_w)  ! UOB/VOB qm at lvl "above" mandatory
    800                                                         !  lvl
    801                   do iii = mxe4prof,1,-1
    802                     if(ibfms(wuvevn_accum(1,jjp1,iii)).ne.0 .or.
    803      +                ibfms(wuvevn_accum(2,jjp1,iii)).ne.0) then
    804                       nevents_w = iii
    805                     else
    806                       nevents_w = iii
    807                       exit
    808                     endif
    809                   enddo
    810                   uul   = wuvevn_accum(1,jjp1,nevents_w) ! UOB ob at lvl "below" mandatory lvl
    811                   vul   = wuvevn_accum(2,jjp1,nevents_w) ! VOB ob at lvl "below" mandatory lvl
    812                   uvqul = wuvevn_accum(3,jjp1,nevents_w) ! UOB/VOB qm at lvl "below" mandatory
    813                                                          !  lvl
    814 
    815                   du_dlnp = (uul - ull)/alog(pul/pll)
    816                   dv_dlnp = (vul - vll)/alog(pul/pll)
    817 
    818                   uml = ull + (du_dlnp * (alog(pml/pll)))
    819                   vml = vll + (dv_dlnp * (alog(pml/pll)))
    820 
    821                   wuvevn_accum(1,nlvinprof+nmandlvls,1) = uml           ! UOB
    822                   wuvevn_accum(2,nlvinprof+nmandlvls,1) = vml           ! VOB
    823                   wuvevn_accum(3,nlvinprof+nmandlvls,1) =
    824      +             max(uvqll,uvqul)                                     ! WQM 
    825                   wuvevn_accum(4,nlvinprof+nmandlvls,1) = nrlacqc_pc    ! WPC
    826                   wuvevn_accum(5,nlvinprof+nmandlvls,1) = 98            ! WRC
    827 
    828                 endif ! wind missing?
    829 
    830               endif ! calc values for this mandatory level?
    831             endif ! j.lt.nlvinprof
    832           enddo ! j = 1,nlvinprof
    833         enddo loop1 ! i = 1,maxmandlvls
    834 
    835         nlv2wrt_tot = nlvinprof + nmandlvls
    836 ccc     print'(" .. there are eventually ",I0," p-levels in this ",
    837 ccc  +         "report (incl. mand. levels to which obs interp. to)")',
    838 ccc          nlv2wrt_tot
    839 
    840 c Re-sort pressures (now with mandatory levels inclded) from lowest to highest
    841 c ----------------------------------------------------------------------------
    842         call orders(1,iwork,lvlsinprof,iord,nlv2wrt_tot,1,lwr,2)
    843 
    844       end if ! l_mandlvl .and. nlvinprof.gt.1
    845 
    846 c -----------------------------------------
    847 c Calculate vertical velocity rate_accum
    848 c add ascent/descent rate here
    849 c -----------------------------------------
    850       write(41,*) 'nlv2wrt_tot=', nlv2wrt_tot,'c_acftreg=',c_acftreg1
    851       err_tspline = 0
    852 
    853       if ((nlv2wrt_tot.gt.1) .and. tsplines) then
    854          nh = 0
    855          do j = 1,nlv2wrt_tot

Page 16          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    856             jj = iord(j)
    857             if (ibfms(drinfo_accum(3,jj)).eq.0) then
    858                nh = nh + 1
    859 c              write(41,*) 'j,ord,z,t=', j, jj,zevn_accum(1,jj,1),
    860 c    +                 drinfo_accum(3,jj)
    861             end if
    862          end do
    863          nh2 = nh * 2
    864 
    865          halfgate=30.0
    866 !        nearsec=.false.
    867 !        do j = 1,nlv2wrt_tot
    868 !           jj = iord(j)
    869 !           if (ibfms(drinfo_accum(3,jj)).eq.0) then
    870 !              timemin=drinfo_accum(3,jj)*60.0
    871 !              timemin=abs(timemin-nint(timemin))
    872 !              if (timemin>=0.01 .and. timemin<=0.99) nearsec=.true.
    873 !           end if
    874 !        end do
    875 !        if (nearsec) halfgate=10.0
    876          write(41,*) 'halfgate=', halfgate
    877 
    878          allocate(idx(nh),pof(nh))
    879          allocate(tdata(nh),hdata(nh),wdata(nh))
    880          allocate(te(nh),hgts(nh),hs(nh),dhdt(nh))
    881          maxita = 0
    882          maxitb = 0
    883          maxrts = 0
    884          maxit  = 0
    885 
    886          nh = 0
    887          do j = 1,nlv2wrt_tot
    888             jj = iord(j)
    889             if (ibfms(drinfo_accum(3,jj)).eq.0) then
    890                nh = nh + 1
    891                tdata(nh) = drinfo_accum(3,jj) ! hours
    892                hdata(nh) = zevn_accum(1,jj,1) ! meters
    893                pof(nh)   = nint(acft_seq_accum(2,jj))
    894                write(41,*) 'tdata,hdata,pof=',nh,tdata(nh),hdata(nh),
    895      +          pof(nh)
    896             end if
    897          end do
    898 
    899 c        arrange data with time increase
    900          call convertd(nh,halfgate,tdata,hdata,pof,
    901      +        doru,idx,hgts,hs,descending,FF)
    902 !!!!!!!! if (FF) call w3tage('PREPOBS_PREPACQC')
    903 !!!!!!!! if (FF) call errexit(62)
    904          if (FF) then 
    905 c Error generating vertical velocity rate in tension-spline interpolation utility pspl
    906 c  (coming out of subroutine convertd) - use finite difference method
    907 c ------------------------------------------------------------------------------------
    908             print*,"WARNING: tspline err in utility pspl, coming out ",
    909      +             "of subr. convertd - use finite difference method" 
    910             write(41,*)"WARNING: tspline err in utility pspl, coming ",
    911      +                 "out of subr. convertd - use finite difference ",
    912      +                 "method" 

Page 17          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    913             err_tspline = 1
    914             go to 666
    915          end if
    916          if (descending)then
    917             write(41,'('' set descending'')')
    918          else
    919             write(41,'('' set ascending'')')
    920          endif
    921 
    922          call count_gates(nh,hgts(1:nh),mh)
    923          m = mh*2
    924          allocate(hgtp(m),hp(m),qbest(m),habest(m),modebest(mh))
    925          call best_slalom(nh,mh,doru,hgts,hs,halfgate,bigT,hgtp,hp,
    926      +     qbest,habest,enbest,modebest,maxita,maxitb,maxit,maxrts,FF)
    927           write(41,*) 'maxita,maxitb,maxit,maxrts=',maxita,maxitb,maxit,
    928      +     maxrts
    929 !!!!!!!! if (FF) call w3tage('PREPOBS_PREPACQC')
    930 !!!!!!!! if (FF) call errexit(63)
    931          if (FF) then 
    932 c Error generating vertical velocity rate in tension-spline interpolation utility pspl
    933 c  (coming out of subroutine best_slalom) - use finite difference method
    934 c ------------------------------------------------------------------------------------
    935             print*,"WARNING: tspline err in utility pspl, coming out ",
    936      +             "of subr. best_slalom - use finite difference method" 
    937             write(41,*)"WARNING: tspline err in utility pspl, coming ",
    938      +                 "out of subr. best_slalom - use finite ",
    939      +                 "difference method" 
    940             err_tspline = 1
    941             go to 666
    942          end if
    943 
    944 c        Use bounded Newton iterations to estimate the vertical velocity
    945          call bnewton(nh,m,bigT,halfgate,hgts,hs,hgtp,habest,
    946      +        qbest,te(1:nh),dhdt(1:nh),FF)
    947 !!!!!!!! if (FF) call w3tage('PREPOBS_PREPACQC')
    948 !!!!!!!! if (FF) call errexit(64)
    949          if (FF) then 
    950 c Error generating vertical velocity rate in tension-spline interpolation utility pspl
    951 c  (coming out of subroutine bnewton) - use finite difference method
    952 c ------------------------------------------------------------------------------------
    953             print*,"WARNING: tspline err in utility pspl, coming out ",
    954      +             "of subr. bnewton - use finite difference method" 
    955             write(41,*)"WARNING: tspline err in utility pspl, coming ",
    956      +                 "out of subr. bnewton - use finite difference ",
    957      +                 "method" 
    958             err_tspline = 1
    959             go to 666
    960          end if
    961 
    962 c        convert back data with time decrease for ascending
    963          call convertd_back(nh,halfgate,wdata,tdata,dhdt,hgts,idx,
    964      +                      descending)
    965          do j = 1, nh
    966             write(41,*) 'hgts,hs,dhdt,wdata=', j,hgts(j),hs(j),dhdt(j),
    967      +       wdata(j)
    968          end do
    969 

Page 18          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

    970 c        Encode dhdt into PREPBUFR-like file as IALR
    971          nh = 0
    972          do j = 1,nlv2wrt_tot
    973             jj = iord(j)
    974             if (ibfms(drinfo_accum(3,jj)).eq.0) then
    975                nh = nh + 1
    976                rate_accum(jj) = wdata(nh)
    977                write(41,*) 'j,z,rate=',j,zevn_accum(1,jj,1),
    978      +          rate_accum(jj)
    979             end if
    980          end do
    981 
    982  666     continue
    983 
    984          if(allocated(idx)) deallocate(idx)
    985          if(allocated(pof)) deallocate(pof)
    986          if(allocated(tdata)) deallocate(tdata)
    987          if(allocated(hdata)) deallocate(hdata)
    988          if(allocated(wdata)) deallocate(wdata)
    989          if(allocated(te)) deallocate(te)
    990          if(allocated(hgts)) deallocate(hgts)
    991          if(allocated(hs)) deallocate(hs)
    992          if(allocated(dhdt)) deallocate(dhdt)
    993          if(allocated(hgtp)) deallocate(hgtp)
    994          if(allocated(hp)) deallocate(hp)
    995          if(allocated(qbest)) deallocate(qbest)
    996          if(allocated(habest)) deallocate(habest)
    997          if(allocated(modebest)) deallocate(modebest)
    998       end if ! nlv2wrt_tot.gt.1 .and. tsplines
    999 
   1000       if (((nlv2wrt_tot.gt.1) .and. (.not.tsplines)) 
   1001      +                           .or. err_tspline>0) then
   1002         do j = 1,nlv2wrt_tot
   1003           jj = iord(j)
   1004           write(41,*) 'j,ord,z,t,pof=', j, jj,zevn_accum(1,jj,1),
   1005      +    drinfo_accum(3,jj),acft_seq_accum(1,jj),acft_seq_accum(2,jj)
   1006         end do
   1007 
   1008         do j = 1,nlv2wrt_tot
   1009           jj = iord(j)
   1010 
   1011           jkp = 0
   1012           jkm = 0
   1013           jjp1 = 0
   1014           jjm1 = 0
   1015           if (j .eq. nlv2wrt_tot) then
   1016              if (ibfms(drinfo_accum(3,jj)).eq.0) then
   1017                 jjp1 = jj
   1018                 jkp = j
   1019              end if
   1020           else
   1021              do jk = j+1,nlv2wrt_tot
   1022                 jjp = iord(jk)
   1023                 if (jjp > nlvinprof) cycle
   1024                 if (ibfms(drinfo_accum(3,jjp)).eq.0) then
   1025                    jjp1 = jjp
   1026                    jkp = jk

Page 19          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1027                    exit
   1028                 end if
   1029              end do
   1030           end if
   1031 
   1032           if (j .eq. 1 ) then
   1033              if (ibfms(drinfo_accum(3,jj)).eq.0) then
   1034                 jjm1 = jj
   1035                 jkm = j
   1036              end if
   1037           else
   1038              do jk = j-1,1,-1
   1039                 jjm = iord(jk)
   1040                 if (jjm > nlvinprof) cycle  ! use real obs only
   1041                 if (ibfms(drinfo_accum(3,jjm)).eq.0) then
   1042                    jjm1 = jjm
   1043                    jkm = jk
   1044                    exit
   1045                 end if
   1046              end do
   1047           end if
   1048 
   1049           if ((jjp1 .ne. 0) .and. (jjm1 .ne. 0)) then
   1050              dt = (drinfo_accum(3,jjp1) - drinfo_accum(3,jjm1))*3600. !  seconds 
   1051 
   1052              c1_jk = 0
   1053              c2_jk = 0
   1054              do while ((abs(dt)<60.) .and. ((jkp+c1_jk<=nlv2wrt_tot)
   1055      +                 .or. (jkm-c2_jk>=1)))
   1056                 jjp2 = 0
   1057                 jjm2 = 0
   1058                 c1_jk = c1_jk+1
   1059                 c2_jk = c2_jk+1
   1060                 dt_new = dt
   1061 
   1062                 do while (jkp+c1_jk<=nlv2wrt_tot
   1063      +                .and. iord(jkp+c1_jk)>nlvinprof)
   1064                    c1_jk = c1_jk+1   ! skip mandatory level
   1065                 end do
   1066                 if (jkp+c1_jk<=nlv2wrt_tot
   1067      +                .and. iord(jkp+c1_jk)<=nlvinprof) then
   1068                    jjp = iord(jkp+c1_jk)
   1069                    if (ibfms(drinfo_accum(3,jjp)).eq.0) then
   1070                       jjp2 = jjp
   1071                       dt_new = (drinfo_accum(3,jjp2)
   1072      +                       - drinfo_accum(3,jjm1))*3600.
   1073                    end if
   1074                 end if
   1075                 if (abs(dt_new) >= 60.) then
   1076                    if (jjp2 .ne. 0) jjp1 = jjp2
   1077                    exit
   1078                 end if
   1079 
   1080                 do while (jkm-c2_jk>=1 .and. iord(jkm-c2_jk)>nlvinprof)
   1081                    c2_jk = c2_jk+1   ! skip mandatory level
   1082                 end do
   1083                 if (jkm-c2_jk>=1 .and. iord(jkm-c2_jk)<=nlvinprof) then

Page 20          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1084                    jjm = iord(jkm-c2_jk)
   1085                    if (ibfms(drinfo_accum(3,jjm)).eq.0) then
   1086                       jjm2 = jjm
   1087                       dt_new = (drinfo_accum(3,jjp1)
   1088      +                       - drinfo_accum(3,jjm2))*3600.
   1089                    end if
   1090                 end if
   1091                 if (abs(dt_new) >= 60.) then
   1092                    if (jjm2 .ne. 0) jjm1 = jjm2
   1093                    exit
   1094                 end if
   1095 
   1096                 if ((jjp2 .ne. 0) .and. (jjm2 .ne. 0)) then
   1097                    dt_new = (drinfo_accum(3,jjp2)
   1098      +                    - drinfo_accum(3,jjm2))*3600.
   1099                    if (abs(dt_new) >= 60.) then
   1100                       if (jjp2 .ne. 0) jjp1 = jjp2
   1101                       if (jjm2 .ne. 0) jjm1 = jjm2
   1102                       exit
   1103                    end if
   1104                 end if
   1105              end do
   1106              dt = (drinfo_accum(3,jjp1) - drinfo_accum(3,jjm1))*3600.
   1107 
   1108 c            write(41,*)' fj,ord1,z1,t1 = ',j,jjp1,zevn_accum(1,jjp1,1),
   1109 c    +                               drinfo_accum(3,jjp1)
   1110 c            write(41,*)' fj,ord2,z2,t2 = ',j,jjm1,zevn_accum(1,jjm1,1),
   1111 c    +                                  drinfo_accum(3,jjm1)
   1112              zul = zevn_accum(1,jjp1,1)   ! meters
   1113              zll = zevn_accum(1,jjm1,1) ! meters
   1114 
   1115 c Need gross checks on ascent/descent rate here?
   1116              if(abs(dt) .gt. 0.)  ! added to avoid divide by zero
   1117      +          rate_accum(jj) = (zul - zll)/dt  ! m/s
   1118                                             ! will be encoded into
   1119                                             ! PREPBUFR-like file as IALR
   1120 
   1121              write(41,*) ' fj,dt,rate_accum=',j,dt,rate_accum(jj)
   1122              write(41,*) ''
   1123           end if
   1124         end do
   1125       end if ! ((nlv2wrt_tot.gt.1) .and. (.not.tsplines)) .or. err_tspline>0
   1126 
   1127 c Interpolate position and time to mandatory level (will be stored in XDR YDR HRDR) (need to
   1128 c   have mandatory levels inserted into the profile before this step)
   1129 c ------------------------------------------------------------------------------------------
   1130       if (l_mandlvl .and. nlvinprof.gt.1) then
   1131 
   1132 ccccccc print *, ' nlv2wrt_tot = ',nlv2wrt_tot
   1133         do j = 1,nlv2wrt_tot
   1134           jj = iord(j)
   1135 ccccccc   print *, ' j,jj = ',j,jj
   1136 
   1137           nmNbtw = 0 ! reset 'number of mandatory levels in-between' counter
   1138 c------------------------------------------------------------------------------------------
   1139 c------------------------------------------------------------------------------------------
   1140 ! (DAK: verified that logic below gives the correct answer - good news!)

Page 21          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1141           if(ibfms(drinfo_accum(1,jj)).ne.0 .and.
   1142      +	     ibfms(drinfo_accum(2,jj)).ne.0 .and.
   1143      +       ibfms(drinfo_accum(3,jj)).ne.0) then ! all obs in drift sequence missing likely
   1144                                                   !  means this is a mandatory level for
   1145                                                   !  which these obs must be filled via
   1146                                                   !  interpolation
   1147             nmNbtw = 1 ! set 'number of mandatory levels in-between' counter to 1
   1148 ccccc       print *, 'here is a first mand. level - p = ',lvlsinprof(jj)
   1149 
   1150 c see if there is more than one mandatory level in a row for which we need to calculate XDR,
   1151 c  YDR and HRDR values
   1152 c ------------------------------------------------------------------------------------------
   1153             do k = j+1, nlv2wrt_tot
   1154 ccccccc       print *, ' k = ',k
   1155               kk = iord(k)
   1156               if(ibfms(drinfo_accum(1,kk)).ne.0 .and.
   1157      +	         ibfms(drinfo_accum(2,kk)).ne.0 .and.
   1158      +           ibfms(drinfo_accum(3,kk)).ne.0) then ! another mandatory levelw/ missing
   1159                                                       !  XDR, YDR and HRDR
   1160                 nmNbtw = nmNbtw + 1    ! increment 'number of mandatory levels in-between'
   1161                                        !  counter by 1
   1162 
   1163 ccccc           print *, 'here is ANOTHER adjacent MANDATORY LEVEL - ',
   1164 ccccc+                   'p =',lvlsinprof(kk)
   1165 ccccc           print *, 'nmNbtw = ',nmNbtw
   1166               else
   1167                 exit ! exit k loop
   1168               endif
   1169             enddo
   1170 
   1171 c At this point, nmNbtw is the number of mandatory levels in a row w/ missing XDR, YDR and
   1172 c  HRDR - ow we need to determine the "bread" levels; in other words, levels with real, non-
   1173 c  interpolated data, that sandwich the mandatory levels - below, jj points to the mandatory
   1174 c  level, jjm1 points to the "bread" level with actual data at the lower pressure/higher
   1175 c  altitude and jjpnmNbtw points to the "bread" level with actual data at a higher pressure/
   1176 c  lower altitude
   1177 c ------------------------------------------------------------------------------------------
   1178             if(j.le.1) then
   1179 c DAK: Make sure j is > 1 here !!  (not sure it can ever happen)
   1180               print *
   1181               print *, '### PROBLEM - j .le. 1 (= ',j,') in subr. ',
   1182      +                 'sub2mem_mer, iord array underflow'
   1183               print *, '              this should never happen!!'
   1184               print *
   1185               call w3tage('PREPOBS_PREPACQC')
   1186               call errexit(61)
   1187             endif
   1188             jjm1 = iord(j-1)
   1189             jjpnmNbtw = iord(j+nmNbtw)
   1190             pll = lvlsinprof(jjm1)
   1191             pul = lvlsinprof(jjpnmNbtw)
   1192 
   1193 c Interpolate lat/lon/time to mandatory levels
   1194 c --------------------------------------------
   1195 
   1196 c Determine dtime/dlnp, total horizontal distance covered between the two points, and average
   1197 c  groundspeed of aircraft between the points

Page 22          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1198 c -------------------------------------------------------------------------------------------
   1199             dtime_dlnp = (drinfo_accum(3,jjpnmNbtw) - 
   1200      +                    drinfo_accum(3,jjm1)) / alog(pul/pll)
   1201 
   1202 c Use Haversine formula to determine distance, given two lat/lons (the same formula is used
   1203 c  in the acftobs_qc/gcirc_qc routine and more information is available at
   1204 c  http://www.movable-type.co.uk/scripts/GIS-FAQ-5.1.html)
   1205 c -----------------------------------------------------------------------------------------
   1206             lat_pul = drinfo_accum(2,jjpnmNbtw)
   1207             lon_pul = drinfo_accum(1,jjpnmNbtw)
   1208             lat_pll = drinfo_accum(2,jjm1)
   1209             lon_pll = drinfo_accum(1,jjm1)
   1210 
   1211             if(int(lon_pul*100.).eq.int(lon_pll*100.)) then
   1212               dist_pul_pll = radius_e * abs(lat_pul-lat_pll) * deg2rad 
   1213             elseif(int(lat_pul*100.).eq.int(lat_pll*100.)) then
   1214               dist_pul_pll = 2.0*radius_e*
   1215      +         asin(min(1.0,abs(cos(lat_pul*deg2rad)*
   1216      +         sin((lon_pul-lon_pll)*0.5*deg2rad))))
   1217             else
   1218               dist_pul_pll = 2.0*radius_e*
   1219      +         asin(min(1.0,sqrt(
   1220      +                           (sin((lat_pul-lat_pll)*0.5*deg2rad))**2
   1221      +                               +  cos(lat_pul*deg2rad)*
   1222      +                                  cos(lat_pll*deg2rad)*
   1223      +                           (sin((lon_pul-lon_pll)*0.5*deg2rad))**2
   1224      +                                                                 )
   1225      +                                                                 )
   1226      +                                                                 )
   1227             endif
   1228 
   1229 c Check if times are equal, then interpolate lat/lon - assume aircraft is traveling at a
   1230 c  constant speed between the locations where pul and pll are observed
   1231 c --------------------------------------------------------------------------------------
   1232             if(int(drinfo_accum(3,jjpnmNbtw)*100000.).ne.
   1233      +	       int(drinfo_accum(3,jjm1)*100000.) .and.
   1234      +        dist_pul_pll.ne.0.) then
   1235 
   1236               spd_pul_pll = dist_pul_pll /
   1237      +                      abs((drinfo_accum(3,jjpnmNbtw) -
   1238      +                           drinfo_accum(3,jjm1))*3600.)
   1239 
   1240               do k = 0,nmNbtw-1
   1241 ccccccc         print *, ' k 2 = ',k
   1242                 jjpk = iord(j+k)
   1243                 pml = lvlsinprof(jjpk)
   1244 
   1245 c time
   1246                 drinfo_accum(3,jjpk) = drinfo_accum(3,jjm1) + 
   1247      +                                 dtime_dlnp*alog(pml/pll)
   1248 
   1249                 dist2pml = spd_pul_pll *
   1250      +                   abs(drinfo_accum(3,jjpk)-drinfo_accum(3,jjm1))*
   1251      +                     3600.         ! sec/hour... drinfo_accum(3,x) values are in hours
   1252 
   1253 c latitude
   1254                 drinfo_accum(2,jjpk) = drinfo_accum(2,jjm1) +

Page 23          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1255      +                                 dist2pml/dist_pul_pll*
   1256      +           (drinfo_accum(2,jjpnmNbtw)-drinfo_accum(2,jjm1))
   1257 
   1258 c longitude
   1259                 drinfo_accum(1,jjpk) = drinfo_accum(1,jjm1) +
   1260      +                                 dist2pml/dist_pul_pll*
   1261      +           (drinfo_accum(1,jjpnmNbtw)-drinfo_accum(1,jjm1))
   1262 
   1263               enddo
   1264             else ! times are equal; assume groundspeed varies linearly -- or, dist_pul_pll=0
   1265                  !  and lat/lons of pul and pll are either equal or very very close
   1266 
   1267 c Determine delx, y
   1268 c -----------------
   1269               delx = (drinfo_accum(1,jjpnmNbtw) -
   1270      +                drinfo_accum(1,jjm1))/(nmNbtw+1)
   1271               dely = (drinfo_accum(2,jjpnmNbtw) -
   1272      +                drinfo_accum(2,jjm1))/(nmNbtw+1)
   1273 
   1274 c Store interpolated lat/lon/time values for the levels that need it
   1275 c ------------------------------------------------------------------
   1276               do k = 0,nmNbtw-1
   1277 ccccccc         print *, ' k 3 = ',k
   1278                 jjpk = iord(j+k)
   1279                 pml = lvlsinprof(jjpk)
   1280                 drinfo_accum(1,jjpk) =
   1281      +           drinfo_accum(1,jjm1) + (k+1)*delx
   1282                 drinfo_accum(2,jjpk) =
   1283      +           drinfo_accum(2,jjm1) + (k+1)*dely
   1284                 drinfo_accum(3,jjpk) = drinfo_accum(3,jjm1) +
   1285      +                                 dtime_dlnp*alog(pml/pll) ! if times are equal,
   1286                                                                 !  dtime_dlnp =0, and then
   1287                                                                 !  time at pml = time at pll
   1288 
   1289 cc              drinfo_accum(3,jj) = 
   1290 cc   +            drinfo_accum(3,jjpnmNbtw) ! give pml the same time as pul and pll 
   1291 
   1292               enddo 
   1293             endif ! times of "bread" levels equal?
   1294           endif ! need to interpolate for mandatory level ?
   1295 ! (DAK: verified that above below gives the correct answer - good news!)
   1296 c------------------------------------------------------------------------------------------
   1297 c------------------------------------------------------------------------------------------
   1298         enddo ! j = 1,nlv2wrt_tot
   1299       endif ! l_mandlvl .and. nlvinprof.gt.1
   1300 
   1301 c Set TYP to reflect whether or not report is part of a profile, ascending or descending
   1302 c --------------------------------------------------------------------------------------
   1303       jjmaxp = iord(nlv2wrt_tot)
   1304       jjminp = iord(1)
   1305       if(nlv2wrt_tot.eq.1) then
   1306         hdr2wrt(6) = 300 + mod(int(hdr2wrt(6)),100)    ! TYP = 3xx for single level merged
   1307                                                        !  (mass + wind) reports
   1308       elseif(nlv2wrt_tot.gt.1 .and.
   1309      +      (c_qc_accum(jjmaxp)(11:11).eq.'a' .or. 
   1310      +	     c_qc_accum(jjmaxp)(11:11).eq.'A')) then   ! ascending profile (merged)
   1311         hdr2wrt(6) = 400 + mod(int(hdr2wrt(6)),100)    !  TYP = 4xx for ascending profile

Page 24          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1312                                                        !   merged (mass + wind) reports
   1313 
   1314 c Make sure the header information for the ascent is the coordinates, etc, present at the
   1315 c  "launch" level (highest pressure/lowest altitude)
   1316 c ---------------------------------------------------------------------------------------
   1317         hdr2wrt(2) = drinfo_accum(1,jjmaxp)
   1318         hdr2wrt(3) = drinfo_accum(2,jjmaxp)
   1319         hdr2wrt(4) = drinfo_accum(3,jjmaxp)
   1320         hdr2wrt(5) = elv_accum(1,jjmaxp)
   1321         hdr2wrt(12) = rpt_accum(1,jjmaxp)
   1322         hdr2wrt(13) = tcor_accum(1,jjmaxp)
   1323 
   1324       elseif(nlv2wrt_tot.gt.1 .and.
   1325      +      (c_qc_accum(jjmaxp)(11:11).eq.'d' .or. 
   1326      +	     c_qc_accum(jjmaxp)(11:11).eq.'D')) then   ! descending profile (merged)
   1327         hdr2wrt(6) = 500 + mod(int(hdr2wrt(6)),100)    !  TYP = 5xx for descending profile
   1328                                                        !   merged (mass + wind) reports
   1329 
   1330 c Make sure the header information for the descent is the coordinates, etc., present at the
   1331 c  "launch" level (lowest pressure/highest altitude)
   1332 c -----------------------------------------------------------------------------------------
   1333         hdr2wrt(2) = drinfo_accum(1,jjminp)
   1334         hdr2wrt(3) = drinfo_accum(2,jjminp)
   1335         hdr2wrt(4) = drinfo_accum(3,jjminp)
   1336         hdr2wrt(5) = elv_accum(1,jjminp)
   1337         hdr2wrt(12) = rpt_accum(1,jjminp)
   1338         hdr2wrt(13) = tcor_accum(1,jjminp)
   1339 
   1340       endif
   1341 ccc   print *, '.. the report type here is ',hdr2wrt(6)
   1342 
   1343 c Set SQN/PROCN to missing for profiles
   1344 c -------------------------------------
   1345       hdr2wrt(10) = bmiss
   1346       hdr2wrt(11) = bmiss
   1347 
   1348 c Write header info/metadata
   1349 c --------------------------
   1350       call ufbint(proflun,hdr2wrt,15,1,nlvwrt,
   1351      + 'SID XOB YOB DHR ELV TYP T29 TSB ITP SQN PROCN RPT TCOR '//
   1352      + 'RSRD EXPRSRD')
   1353 
   1354       acid_arr1 = acid1
   1355       if(ibfms(acid1).eq.0) 
   1356      +  call ufbint(proflun,acid_arr1,1,1,nlvwrt,'ACID')  ! store 'ACID' if present
   1357                                                           !  {currently only in MDCRS or AMDAR
   1358                                                           !  (LATAM only) reports}
   1359 
   1360       if(mesgtype.ne.'AIRCAR'.and. mesgtype.ne.'AIRCFT') then
   1361         print *, 'Non-compatible message type! (',mesgtype,')'
   1362         print *, 'Skipping this report; it will not be written to ',
   1363      +           'output.'
   1364         go to 9999
   1365       endif
   1366 
   1367 ccc   print *, 'FOR THIS REPORT: mxe4prof = ',mxe4prof
   1368 

Page 25          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1369 c -------------------------------------
   1370 c Process each event set, one at a time
   1371 c -------------------------------------
   1372       do i = 1,mxe4prof ! maximum number of events in a single-level merged report (i.e., the
   1373                         !  maximum amongst the number of pressure, moisture,temperature,
   1374                         !  altitude, u/v wind and direction/speed wind events)
   1375 ccc     print *, '.. bring in next event for writing out'
   1376 ccc     print *, 'Next event is number ',i
   1377 
   1378 c Clear out arrays used with ufbint to store data in memory
   1379 c ---------------------------------------------------------
   1380         nlv2wrt   = 0
   1381 
   1382         pevns4    = bmiss
   1383         qevns4    = bmiss
   1384         tevns4    = bmiss
   1385         zevns4    = bmiss
   1386         wuvevns5  = bmiss
   1387         wdsevns5  = bmiss
   1388 
   1389         pbgarr3   = bmiss
   1390         qbgarr3   = bmiss
   1391         tbgarr3   = bmiss
   1392         zbgarr3   = bmiss
   1393         wuvbgarr5 = bmiss
   1394 
   1395         ppparr3   = bmiss
   1396         qpparr3   = bmiss
   1397         tpparr3   = bmiss
   1398         zpparr3   = bmiss
   1399         wuvpparr6 = bmiss
   1400 
   1401         drarr3    = bmiss
   1402 
   1403         acft_seq_arr2 = bmiss
   1404 
   1405         mstq_arr1 = bmiss
   1406         rct_arr1  = bmiss
   1407         cat_arr1  = bmiss
   1408         ialr_arr1 = bmiss
   1409         turb_arr4 = bmiss
   1410 
   1411 c Collapse stacks of events; keep levels where there is pressure data - do this in
   1412 c  anticipation of "striping"/layering events onto data upon output - organize data across
   1413 c  all levels for each "event set"/"layer"
   1414 c ----------------------------------------------------------------------------------------
   1415 
   1416         do j = nlv2wrt_tot,1,-1
   1417 
   1418           jj = iord(j)
   1419 ccc       print *, 'j: ',j
   1420 
   1421           nlv2wrt = nlv2wrt + 1 ! nlv2wrt = number of pressure levels to be written out
   1422 ccc       print *, 'nlv2wrt = ',nlv2wrt
   1423 
   1424           if(ibfms(pevn_accum(1,jj,i)).eq.0) then ! if POB is missing, don't process this
   1425                                                   !  event

Page 26          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1426             pevns4(1:4,nlv2wrt) = pevn_accum(1:4,jj,i)
   1427 ccc         print *, 'POB PQM PPC PRC for this level and event:'
   1428 ccc         print *, ' pevns4(1,',nlv2wrt,') = ',pevns4(1,nlv2wrt)
   1429 ccc         print *, ' pevns4(2,',nlv2wrt,') = ',pevns4(2,nlv2wrt)
   1430 ccc         print *, ' pevns4(3,',nlv2wrt,') = ',pevns4(3,nlv2wrt)
   1431 ccc         print *, ' pevns4(4,',nlv2wrt,') = ',pevns4(4,nlv2wrt)
   1432 ccc       else
   1433 ccc         print *, 'POB missing, pevns4 is missing for this level ',
   1434 ccc  +               'and event'
   1435           endif
   1436 
   1437           if(ibfms(qevn_accum(1,jj,i)).eq.0) then ! if QOB is missing, don't process this
   1438                                                   !  event
   1439             qevns4(1:4,nlv2wrt) = qevn_accum(1:4,jj,i)
   1440 ccc         print *, 'QOB QQM QPC QRC for this level and event:'
   1441 ccc         print *, ' qevns4(1,',nlv2wrt,') = ',qevns4(1,nlv2wrt)
   1442 ccc         print *, ' qevns4(2,',nlv2wrt,') = ',qevns4(2,nlv2wrt)
   1443 ccc         print *, ' qevns4(3,',nlv2wrt,') = ',qevns4(3,nlv2wrt)
   1444 ccc         print *, ' qevns4(4,',nlv2wrt,') = ',qevns4(4,nlv2wrt)
   1445 ccc       else
   1446 ccc         print *, 'QOB missing, qevns4 is missing for this ',
   1447 ccc  +               'level and event'
   1448           endif
   1449 
   1450           if(ibfms(tevn_accum(1,jj,i)).eq.0) then ! if TOB is missing, don't process this
   1451                                                   !  event
   1452             tevns4(1:4,nlv2wrt) = tevn_accum(1:4,jj,i)
   1453 ccc         print *, 'TOB TQM TPC TRC for this level and event:'
   1454 ccc         print *, ' tevns4(1,',nlv2wrt,') = ',tevns4(1,nlv2wrt)
   1455 ccc         print *, ' tevns4(2,',nlv2wrt,') = ',tevns4(2,nlv2wrt)
   1456 ccc         print *, ' tevns4(3,',nlv2wrt,') = ',tevns4(3,nlv2wrt)
   1457 ccc         print *, ' tevns4(4,',nlv2wrt,') = ',tevns4(4,nlv2wrt)
   1458 ccc       else
   1459 ccc         print *, 'TOB missing, tevns4 is missing for this ',
   1460 ccc  +               'level and event'
   1461           endif
   1462 
   1463           if(ibfms(zevn_accum(1,jj,i)).eq.0) then ! if ZOB is missing, don't process this
   1464                                                   !  event
   1465             zevns4(1:4,nlv2wrt) = zevn_accum(1:4,jj,i)
   1466 ccc         print *, 'ZOB ZQM ZPC ZRC for this level and event:'
   1467 ccc         print *, ' zevns4(1,',nlv2wrt,') = ',zevns4(1,nlv2wrt)
   1468 ccc         print *, ' zevns4(2,',nlv2wrt,') = ',zevns4(2,nlv2wrt)
   1469 ccc         print *, ' zevns4(3,',nlv2wrt,') = ',zevns4(3,nlv2wrt)
   1470 ccc         print *, ' zevns4(4,',nlv2wrt,') = ',zevns4(4,nlv2wrt)
   1471 ccc       else
   1472 ccc         print *, 'ZOB missing, zevns4 is missing for this level ',
   1473 ccc  +               'and event'
   1474           endif
   1475 
   1476           if(ibfms(wuvevn_accum(1,jj,i)).eq.0 .and.  ! if UOB or VOB are missing, don't
   1477      +       ibfms(wuvevn_accum(2,jj,i)).eq.0) then  !  process this event
   1478             wuvevns5(1:5,nlv2wrt) = wuvevn_accum(1:5,jj,i)
   1479 ccc         print *, 'UOB VOB WQM WPC WRC for this level and event:'
   1480 ccc         print *, ' wuvevns5(1,',nlv2wrt,') = ',wuvevns5(1,nlv2wrt)
   1481 ccc         print *, ' wuvevns5(2,',nlv2wrt,') = ',wuvevns5(2,nlv2wrt)
   1482 ccc         print *, ' wuvevns5(3,',nlv2wrt,') = ',wuvevns5(3,nlv2wrt)

Page 27          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1483 ccc         print *, ' wuvevns5(4,',nlv2wrt,') = ',wuvevns5(4,nlv2wrt)
   1484 ccc         print *, ' wuvevns5(5,',nlv2wrt,') = ',wuvevns5(5,nlv2wrt)
   1485 ccc       else
   1486 ccc         print *, 'either UOB or VOB missing, wuvevns5 is missing ',
   1487 ccc  +               'for this level and event'
   1488           endif
   1489 
   1490           wdsevns5(1:5,nlv2wrt) = wdsevn_accum(1:5,jj,i)
   1491 ccc       print *, 'DDO FFO DFQ DFP DFR for this level and event:'
   1492 ccc       print *, ' wdsevns5(1,',nlv2wrt,') = ',wdsevns5(1,nlv2wrt)
   1493 ccc       print *, ' wdsevns5(2,',nlv2wrt,') = ',wdsevns5(2,nlv2wrt)
   1494 ccc       print *, ' wdsevns5(3,',nlv2wrt,') = ',wdsevns5(3,nlv2wrt)
   1495 ccc       print *, ' wdsevns5(4,',nlv2wrt,') = ',wdsevns5(4,nlv2wrt)
   1496 ccc       print *, ' wdsevns5(5,',nlv2wrt,') = ',wdsevns5(5,nlv2wrt)
   1497 
   1498 c Collapse arrays of background, post-processing, drift, acft_seq info - need to accumulate
   1499 c  background, etc., across all levels - only write out these values upon writing first
   1500 c  "event"/"layer".  These values occur only once per layer, there is no nested replication
   1501 c -----------------------------------------------------------------------------------------
   1502 
   1503           if(i.eq.1) then
   1504 
   1505             pbgarr3(1:3,nlv2wrt) = pbg_accum(1:3,jj)
   1506 ccc         print *, 'POE PFC PFCMOD for this level - NO event:'
   1507 ccc         print *, ' pbgarr3(1,',nlv2wrt,') = ',pbgarr3(1,nlv2wrt)
   1508 ccc         print *, ' pbgarr3(2,',nlv2wrt,') = ',pbgarr3(2,nlv2wrt)
   1509 ccc         print *, ' pbgarr3(3,',nlv2wrt,') = ',pbgarr3(3,nlv2wrt)
   1510             qbgarr3(1:3,nlv2wrt) = qbg_accum(1:3,jj)
   1511 ccc         print *, 'QOE QFC QFCMOD for this level - NO event:'
   1512 ccc         print *, ' qbgarr3(1,',nlv2wrt,') = ',qbgarr3(1,nlv2wrt)
   1513 ccc         print *, ' qbgarr3(2,',nlv2wrt,') = ',qbgarr3(2,nlv2wrt)
   1514 ccc         print *, ' qbgarr3(3,',nlv2wrt,') = ',qbgarr3(3,nlv2wrt)
   1515             tbgarr3(1:3,nlv2wrt) = tbg_accum(1:3,jj)
   1516 ccc         print *, 'TOE TFC TFCMOD for this level - NO event:'
   1517 ccc         print *, ' tbgarr3(1,',nlv2wrt,') = ',tbgarr3(1,nlv2wrt)
   1518 ccc         print *, ' tbgarr3(2,',nlv2wrt,') = ',tbgarr3(2,nlv2wrt)
   1519 ccc         print *, ' tbgarr3(3,',nlv2wrt,') = ',tbgarr3(3,nlv2wrt)
   1520             zbgarr3(1:3,nlv2wrt) = zbg_accum(1:3,jj)
   1521 ccc         print *, 'ZOE ZFC ZFCMOD for this level - NO event:'
   1522 ccc         print *, ' zbgarr3(1,',nlv2wrt,') = ',zbgarr3(1,nlv2wrt)
   1523 ccc         print *, ' zbgarr3(2,',nlv2wrt,') = ',zbgarr3(2,nlv2wrt)
   1524 ccc         print *, ' zbgarr3(3,',nlv2wrt,') = ',zbgarr3(3,nlv2wrt)
   1525             wuvbgarr5(1:5,nlv2wrt) = wuvbg_accum(1:5,jj)
   1526 ccc         print *, 'WOE UFC VFC UFCMOD VFCMOD for this level - NO event:'
   1527 ccc         print *, ' wuvbgarr5(1,',nlv2wrt,') = ',wuvbgarr5(1,nlv2wrt)
   1528 ccc         print *, ' wuvbgarr5(2,',nlv2wrt,') = ',wuvbgarr5(2,nlv2wrt)
   1529 ccc         print *, ' wuvbgarr5(3,',nlv2wrt,') = ',wuvbgarr5(3,nlv2wrt)
   1530 ccc         print *, ' wuvbgarr5(4,',nlv2wrt,') = ',wuvbgarr5(4,nlv2wrt)
   1531 ccc         print *, ' wuvbgarr5(5,',nlv2wrt,') = ',wuvbgarr5(5,nlv2wrt)
   1532 
   1533             ppparr3(1:3,nlv2wrt) = ppp_accum(1:3,jj)
   1534 ccc         print *, 'PAN PCL PCS for this level - NO event:'
   1535 ccc         print *, ' ppparr3(1,',nlv2wrt,') = ',ppparr3(1,nlv2wrt)
   1536 ccc         print *, ' ppparr3(2,',nlv2wrt,') = ',ppparr3(2,nlv2wrt)
   1537 ccc         print *, ' ppparr3(3,',nlv2wrt,') = ',ppparr3(3,nlv2wrt)
   1538             qpparr3(1:3,nlv2wrt) = qpp_accum(1:3,jj)
   1539 ccc         print *, 'QAN QCL QCS for this level - NO event:'

Page 28          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1540 ccc         print *, ' qpparr3(1,',nlv2wrt,') = ',qpparr3(1,nlv2wrt)
   1541 ccc         print *, ' qpparr3(2,',nlv2wrt,') = ',qpparr3(2,nlv2wrt)
   1542 ccc         print *, ' qpparr3(3,',nlv2wrt,') = ',qpparr3(3,nlv2wrt)
   1543             tpparr3(1:3,nlv2wrt) = tpp_accum(1:3,jj)
   1544 ccc         print *, 'TAN TCL TCS for this level - NO event:'
   1545 ccc         print *, ' tpparr3(1,',nlv2wrt,') = ',tpparr3(1,nlv2wrt)
   1546 ccc         print *, ' tpparr3(2,',nlv2wrt,') = ',tpparr3(2,nlv2wrt)
   1547 ccc         print *, ' tpparr3(3,',nlv2wrt,') = ',tpparr3(3,nlv2wrt)
   1548             zpparr3(1:3,nlv2wrt) = zpp_accum(1:3,jj)
   1549 ccc         print *, 'ZAN ZCL ZCS for this level - NO event:'
   1550 ccc         print *, ' zpparr3(1,',nlv2wrt,') = ',zpparr3(1,nlv2wrt)
   1551 ccc         print *, ' zpparr3(2,',nlv2wrt,') = ',zpparr3(2,nlv2wrt)
   1552 ccc         print *, ' zpparr3(3,',nlv2wrt,') = ',zpparr3(3,nlv2wrt)
   1553             wuvpparr6(1:6,nlv2wrt) = wuvpp_accum(1:6,jj)
   1554 ccc         print *, 'UAN VAN UCL UCS VCL VCS for this level - NO event:'
   1555 ccc         print *, ' wuvpparr6(1,',nlv2wrt,') = ',wuvpparr6(1,nlv2wrt)
   1556 ccc         print *, ' wuvpparr6(2,',nlv2wrt,') = ',wuvpparr6(2,nlv2wrt)
   1557 ccc         print *, ' wuvpparr6(3,',nlv2wrt,') = ',wuvpparr6(3,nlv2wrt)
   1558 ccc         print *, ' wuvpparr6(4,',nlv2wrt,') = ',wuvpparr6(4,nlv2wrt)
   1559 ccc         print *, ' wuvpparr6(5,',nlv2wrt,') = ',wuvpparr6(5,nlv2wrt)
   1560 ccc         print *, ' wuvpparr6(6,',nlv2wrt,') = ',wuvpparr6(6,nlv2wrt)
   1561 
   1562             drarr3(1:3,nlv2wrt) = drinfo_accum(1:3,jj)
   1563 ccc         print *, 'XDR YDR HRDR for this level - NO event:'
   1564 ccc         print *, ' drarr3(1,',nlv2wrt,') = ',drarr3(1,nlv2wrt)
   1565 ccc         print *, ' drarr3(2,',nlv2wrt,') = ',drarr3(2,nlv2wrt)
   1566 ccc         print *, ' drarr3(3,',nlv2wrt,') = ',drarr3(3,nlv2wrt)
   1567 
   1568             acft_seq_arr2(1:2,nlv2wrt) = acft_seq_accum(1:2,jj)
   1569 ccc         print *, 'PCAT POAF for this level - NO event:'
   1570 ccc         print *, ' acft_seq_arr2(1,',nlv2wrt,') = ',
   1571 ccc  +                 acft_seq_arr2(1,nlv2wrt)
   1572 ccc         print *, ' acft_seq_arr2(2,',nlv2wrt,') = ',
   1573 ccc  +                 acft_seq_arr2(2,nlv2wrt)
   1574 
   1575             mstq_arr1(1,nlv2wrt) = mstq_accum(1,jj)
   1576 ccc         print *, 'MSTQ for this level - NO event:'
   1577 ccc         print *, ' mstq_arr1(1,',nlv2wrt,') = ',mstq_arr1(1,nlv2wrt)
   1578 
   1579             rct_arr1(1,nlv2wrt) = rct_accum(1,jj)
   1580 ccc         print *, 'RCT for this level - NO event:'
   1581 ccc         print *, ' rct_arr1(1,',nlv2wrt,') = ',rct_arr1(1,nlv2wrt
   1582 
   1583             cat_arr1(1,nlv2wrt) = cat_accum(1,jj)
   1584 ccc         print *, 'CAT for this level - NO event:'
   1585 ccc         print *, ' cat_arr1(1,',nlv2wrt,') = ',cat_arr1(1,nlv2wrt)
   1586 
   1587             ialr_arr1(1,nlv2wrt) = rate_accum(jj)
   1588 ccc         print *, 'IALR for this level - NO event:'
   1589 ccc         print *, ' ialr_arr1(1,',nlv2wrt,') = ',ialr_arr1(1,nlv2wrt)
   1590           endif
   1591 
   1592           if(.not.l_operational) then  ! this is currently invoked because l_operational
   1593                                        !  is hardwired to F for l_ncep=T
   1594             if(i.eq.mxe4prof) then
   1595               hdr2wrt1 = hdr2wrt(1)
   1596               if(ibfms(drinfo_accum(3,jj)).ne.0) then

Page 29          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1597                 idrinfo_accum3 = 9999999
   1598               else
   1599                 idrinfo_accum3 = nint(drinfo_accum(3,jj) * 3600.)
   1600               endif
   1601               if(ibfms(hdr2wrt(9)).ne.0) then
   1602                 ihdr2wrt9 = 99999
   1603               else
   1604                 ihdr2wrt9 = nint(hdr2wrt(9))
   1605               endif
   1606               if(ibfms(hdr2wrt(6)).ne.0) then
   1607                 ihdr2wrt6 = 9999
   1608               else
   1609                 ihdr2wrt6 = nint(hdr2wrt(6))
   1610               endif
   1611               if(ibfms(acft_seq_accum(2,jj)).ne.0) then
   1612                 iacft_seq_accum2 = 99
   1613               else
   1614                 iacft_seq_accum2 = nint(acft_seq_accum(2,jj))
   1615               endif
   1616               if(ibfms(mstq_accum(1,jj)).ne.0) then
   1617                 imstq_accum1 = 9999
   1618               else
   1619                 imstq_accum1 = nint(mstq_accum(1,jj))
   1620               endif
   1621               if(ibfms(cat_accum(1,jj)).ne.0) then
   1622                 icat_accum1 = 9999
   1623               else
   1624                 icat_accum1 = nint(cat_accum(1,jj))
   1625               endif
   1626               do iii = mxe4prof,1,-1
   1627                 if(ibfms(tevn_accum(1,jj,iii)).ne.0) then
   1628                   nevents_t = iii
   1629                 else
   1630                   nevents_t = iii
   1631                   exit
   1632                 endif
   1633               enddo
   1634               if(ibfms(zevn_accum(1,jj,1)).ne.0) then
   1635                 izevn_accum1 = 999999
   1636               else
   1637                 izevn_accum1 =  nint(zevn_accum(1,jj,1))
   1638               endif
   1639               if(ibfms(wdsevn_accum(1,jj,1)).ne.0) then
   1640                 iwdsevn_accum1 = 99999
   1641               else
   1642                 iwdsevn_accum1 =  nint(wdsevn_accum(1,jj,1))
   1643               endif
   1644               do iii = mxe4prof,1,-1
   1645                 if(ibfms(wuvevn_accum(1,jj,iii)).ne.0 .or.
   1646      +             ibfms(wuvevn_accum(2,jj,iii)).ne.0) then
   1647                   if(iii.eq.1) wspd = bmiss
   1648                   nevents_w = iii
   1649                 else
   1650                   wspd = sqrt(wuvevn_accum(1,jj,iii)**2 + 
   1651      +                        wuvevn_accum(2,jj,iii)**2)
   1652                   nevents_w = iii
   1653                   exit

Page 30          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1654                 endif
   1655               enddo
   1656               do iii = mxe4prof,1,-1
   1657                 if(ibfms(qevn_accum(1,jj,iii)).ne.0) then
   1658                   if(iii.eq.1) q_sphum = bmiss
   1659                   nevents_q = iii
   1660                 else
   1661                   q_sphum = qevn_accum(1,jj,iii) * 0.001
   1662                   nevents_q = iii
   1663                   exit
   1664                 endif
   1665               enddo
   1666               if(ibfms(pevn_accum(2,jj,1)).ne.0) then
   1667                 ipevn_accum2 = 999
   1668               else
   1669                 ipevn_accum2 = nint(pevn_accum(2,jj,1))
   1670               endif
   1671               if(ibfms(zevn_accum(2,jj,1)).ne.0) then
   1672                 izevn_accum2 = 999
   1673               else
   1674                 izevn_accum2 = nint(zevn_accum(2,jj,1))
   1675               endif
   1676               if(ibfms(tevn_accum(2,jj,nevents_t)).ne.0) then
   1677                 itevn_accum2 = 999
   1678               else
   1679                 itevn_accum2 = nint(tevn_accum(2,jj,nevents_t))
   1680               endif
   1681               if(ibfms(qevn_accum(2,jj,nevents_q)).ne.0) then
   1682                 iqevn_accum2 = 999
   1683               else
   1684                 iqevn_accum2 = nint(qevn_accum(2,jj,nevents_q))
   1685               endif
   1686               if(ibfms(wuvevn_accum(3,jj,nevents_w)).ne.0) then
   1687                 iwuvevn_accum3 = 999
   1688               else
   1689                 iwuvevn_accum3 = nint(wuvevn_accum(3,jj,nevents_w))
   1690               endif
   1691               if(ibfms(pevn_accum(4,jj,1)).ne.0 .or.
   1692      +           nint(pevn_accum(3,jj,1)).ne.nrlacqc_pc) then
   1693                 ipevn_accum4 = 9999
   1694               else
   1695                 ipevn_accum4 = nint(pevn_accum(4,jj,1))
   1696               endif
   1697               if(ibfms(zevn_accum(4,jj,1)).ne.0 .or.
   1698      +           nint(zevn_accum(3,jj,1)).ne.nrlacqc_pc) then
   1699                 izevn_accum4 = 9999
   1700               else
   1701                 izevn_accum4 = nint(zevn_accum(4,jj,1))
   1702               endif
   1703               if(ibfms(tevn_accum(4,jj,nevents_t)).ne.0 .or.
   1704      +           nint(tevn_accum(3,jj,nevents_t)).ne.nrlacqc_pc) then
   1705                 itevn_accum4 = 9999
   1706               else
   1707                 itevn_accum4 = nint(tevn_accum(4,jj,nevents_t))
   1708               endif
   1709               if(ibfms(qevn_accum(4,jj,nevents_q)).ne.0 .or.
   1710      +           nint(qevn_accum(3,jj,nevents_q)).ne.nrlacqc_pc) then

Page 31          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1711                 iqevn_accum4 = 9999
   1712               else
   1713                 iqevn_accum4 = nint(qevn_accum(4,jj,nevents_q))
   1714               endif
   1715               if(ibfms(wuvevn_accum(5,jj,nevents_w)).ne.0 .or.
   1716      +           nint(wuvevn_accum(4,jj,nevents_w)).ne.nrlacqc_pc) then
   1717                 iwuvevn_accum5 = 9999
   1718               else
   1719                 iwuvevn_accum5 = nint(wuvevn_accum(5,jj,nevents_w))
   1720               endif
   1721 
   1722 ccccc         write(52,fmt=7999) i
   1723 c7999         format('EVENT # ',i5)
   1724               write(52,fmt=8001) j,c_acftid1,c_acftreg1,ihdr2wrt9,
   1725      +         iacft_seq_accum2,drinfo_accum(2,jj),
   1726      +         drinfo_accum(1,jj),idrinfo_accum3,izevn_accum1,
   1727      +         pevn_accum(1,jj,1),tevn_accum(1,jj,nevents_t)+273.16,
   1728      +         nevents_t,q_sphum,nevents_q,wuvevn_accum(1,jj,nevents_w),
   1729      +         wuvevn_accum(2,jj,nevents_w),nevents_w,
   1730      +         acft_seq_accum(1,jj),c_qc_accum(jj),rct_accum(1,jj),
   1731      +         imstq_accum1,icat_accum1,wspd,iwdsevn_accum1,ihdr2wrt6,
   1732      +         ipevn_accum2,izevn_accum2,itevn_accum2,iqevn_accum2,
   1733      +         iwuvevn_accum3,ipevn_accum4,izevn_accum4,itevn_accum4,
   1734      +         iqevn_accum4,iwuvevn_accum5
   1735 
   1736  8001 format(i5,1x,a9,1x,a8,1x,i3,2x,i1,1x,2f10.5, 1x,i6,1x,i5,1x,f6.1,
   1737      +       1x,f6.2,i3,1x,f7.2,1x,i3,1x,f6.1,1x,f6.1,1x,i3,1x,f6.2,1x,
   1738      +       '!',a11,'!',f5.2,1x,i3,2x,i2,1x,f6.1,1x,i4,2x,i3,9x,'!',
   1739      +       5(1x,i2.2),'!',i3.3,4(1x,i3.3))
   1740 
   1741             endif ! i.eq.mxe4prof
   1742           endif ! .not.l_operational
   1743 	enddo ! do j = nlv2wrt_tot,1,-1
   1744 ccc     print *, '.. will write out ',nlv2wrt,' p-levels for this ',
   1745 ccc  +           'report'
   1746 
   1747 c Store pressure events across levels, z events, t, q, w, df events
   1748 c -----------------------------------------------------------------
   1749         if(nlv2wrt.gt.0 .and. nlv2wrt.eq.nlv2wrt_tot) then ! should be equal; vertical coord.
   1750                                                            !  is pressure
   1751           call ufbint(proflun,pevns4,4,nlv2wrt,nlvwrt,'POB PQM PPC PRC')
   1752 ccc       print *, 'ufbint has stored POB PQM PPC PRC on all levels ',
   1753 ccc  +             'for this event:'
   1754 
   1755           call ufbint(proflun,qevns4,4,nlv2wrt,nlvwrt,'QOB QQM QPC QRC')
   1756 ccc       print *, 'ufbint has stored QOB QQM QPC QRC on all levels ',
   1757 ccc  +             'for this event:'
   1758 
   1759           call ufbint(proflun,tevns4,4,nlv2wrt,nlvwrt,'TOB TQM TPC TRC')
   1760 ccc       print *, 'ufbint has stored TOB TQM TPC TRC on all levels ',
   1761 ccc  +             'for this event:'
   1762 
   1763           call ufbint(proflun,zevns4,4,nlv2wrt,nlvwrt,'ZOB ZQM ZPC ZRC')
   1764 ccc       print *, 'ufbint has stored ZOB ZQM ZPC ZRC on all levels ',
   1765 ccc  +             'for this event:'
   1766 
   1767           call ufbint(proflun,wuvevns5,5,nlv2wrt,nlvwrt,

Page 32          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1768      +                'UOB VOB WQM WPC WRC')
   1769 ccc       print *, 'ufbint has stored UOB VOB WQM WPC WRC on all ',
   1770 ccc  +             'levels for this event:'
   1771 
   1772           call ufbint(proflun,wdsevns5,5,nlv2wrt,nlvwrt,
   1773      +                'DDO FFO DFQ DFP DFR')
   1774 ccc       print *, 'ufbint has stored DDO FFO DFQ DFP DFR on all ',
   1775 ccc  +             'levels for this event:'
   1776 
   1777 ccc       print *, 'Finished writing p,q,t,u/v,s/d on all ',nlv2wrt,
   1778 ccc  +             ' levels for THIS event'
   1779           num_events_prof = num_events_prof + nlv2wrt
   1780 ccc       print *, 'Finished writing p,q,t,u/v,s/d on all ',nlv2wrt,
   1781 ccc  +             ' levels for THIS event'
   1782 ccc       print *, 'num_events_prof = ',num_events_prof
   1783 
   1784           if(i.eq.1) then ! store/write these only on first event application the following
   1785                           !  values only occur once in the subset; there are no multiple
   1786                           !  events to write out
   1787 
   1788 c -------------------------------------------------------------------------------------------
   1789 c Store background and post processing info - each pressure level in the profile gets one set
   1790 c  of each (not nested replication like with the events)
   1791 c -------------------------------------------------------------------------------------------
   1792 
   1793 ccc         print'(" write background and post-processing info - only ",
   1794 ccc  +             "for first "event" since there are no events for ",
   1795 ccc  "             "these")'
   1796 
   1797 c write background info
   1798             call ufbint(proflun,pbgarr3,3,nlv2wrt,nlvwrt,
   1799      +                  'POE PFC PFCMOD')	
   1800 ccc         print *, 'ufbint has stored POE PFC PFCMOD on all levels -',
   1801 ccc  +               ' "event" ',i,' ONLY'
   1802 
   1803             call ufbint(proflun,qbgarr3,3,nlv2wrt,nlvwrt,
   1804      +                  'QOE QFC QFCMOD')	
   1805 ccc         print *, 'ufbint has stored QOE QFC QFCMOD on all levels -',
   1806 ccc  +               ' "event" ',i,' ONLY'
   1807 
   1808             call ufbint(proflun,tbgarr3,3,nlv2wrt,nlvwrt,
   1809      +                  'TOE TFC TFCMOD')	
   1810 ccc         print *, 'ufbint has stored TOE TFC TFCMOD on all levels -',
   1811 ccc  +               ' "event" ',i,' ONLY'
   1812 
   1813             call ufbint(proflun,zbgarr3,3,nlv2wrt,nlvwrt,
   1814      +                  'ZOE ZFC ZFCMOD')
   1815 ccc         print *, 'ufbint has stored ZOE ZFC ZFCMOD on all levels -',
   1816 ccc  +               ' "event" ',i,' ONLY'
   1817 
   1818             call ufbint(proflun,wuvbgarr5,5,nlv2wrt,nlvwrt,
   1819      +                  'WOE UFC VFC UFCMOD VFCMOD')	
   1820 ccc         print *, 'ufbint has stored WOE UFC VFC UFCMOD VFCMOD on',
   1821 ccc  +               ' all levels - "event" ',i,' ONLY'
   1822 
   1823 c write post-processing info
   1824             call ufbint(proflun,ppparr3,3,nlv2wrt,nlvwrt,'PAN PCL PCS')	

Page 33          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1825 ccc         print *, 'ufbint has stored PAN PCL PCS on all levels - ',
   1826 ccc  +               '"event" ',i,' ONLY'
   1827 
   1828             call ufbint(proflun,qpparr3,3,nlv2wrt,nlvwrt,'QAN QCL QCS')	
   1829 ccc         print *, 'ufbint has stored QAN QCL QCS on all levels - ',
   1830 ccc  +               '"event" ',i,' ONLY'
   1831 
   1832             call ufbint(proflun,tpparr3,3,nlv2wrt,nlvwrt,'TAN TCL TCS')	
   1833 ccc         print *, 'ufbint has stored TAN TCL TCS on all levels - ',
   1834 ccc  +               '"event" ',i,' ONLY'
   1835 
   1836             call ufbint(proflun,zpparr3,3,nlv2wrt,nlvwrt,'ZAN ZCL ZCS')	
   1837 ccc         print *, 'ufbint has stored ZAN ZCL ZCS on all levels - ',
   1838 ccc  +               '"event" ',i,' ONLY'
   1839 
   1840             call ufbint(proflun,wuvpparr6,6,nlv2wrt,nlvwrt,
   1841      +                  'UAN VAN UCL UCS VCL VCS')	
   1842 ccc         print *, 'ufbint has stored UAN VAN UCL UCS VCL VCS on all',
   1843 ccc  +               ' levels - "event" ',i,' ONLY'
   1844 
   1845 c write out drift info
   1846             call ufbint(proflun,drarr3,3,nlv2wrt,nlvwrt,'XDR YDR HRDR')
   1847 ccc         print *, 'ufbint has stored XDR YDR HRDR on all levels - ',
   1848 ccc  +               '"event" ',i,' ONLY'
   1849 
   1850 c write out acft_seq info
   1851             call ufbint(proflun,acft_seq_arr2,2,nlv2wrt,nlvwrt,
   1852      +                  'PCAT POAF')
   1853 ccc         print *, 'ufbint has stored PCAT POAF on all levels - ',
   1854 ccc  +               '"event" ',i,' ONLY'
   1855 
   1856 c There is no turbulence info carried forth into this subroutine right now, comment out
   1857 ccccc       call ufbint(proflun,turb_arr4,4,nlv2wrt,nlvwrt,
   1858 ccccc+                  'TRBX10 TRBX21 TRBX32 TRBX43')
   1859 ccc         print *, 'ufbint has stored TRBX10 TRBX21 TRBX32 TRBX43 on',
   1860 ccc  +               ' all levels - "event" ',i,' ONLY'
   1861 
   1862 c write out moisture QC flag
   1863             call ufbint(proflun,mstq_arr1,1,nlv2wrt,nlvwrt,'MSTQ')
   1864 ccc         print *, 'ufbint has stored MSTQ on all levels - "event"',
   1865 ccc  +               ' ',i,' ONLY'
   1866 
   1867 c write out level receipt time
   1868             call ufbint(proflun,rct_arr1,1,nlv2wrt,nlvwrt,'RCT')
   1869 ccc         print *, 'ufbint has stored RCT on all levels - "event" ',i,
   1870 ccc  +               ' ONLY'
   1871 
   1872 c write out level category
   1873             call ufbint(proflun,cat_arr1,1,nlv2wrt,nlvwrt,'CAT')
   1874 ccc         print *, 'ufbint has stored CAT on all levels - "event" ',i,
   1875 ccc  +               ' ONLY'
   1876 
   1877 c write out the ascent/descent rate
   1878             call ufbint(proflun,ialr_arr1,1,nlv2wrt,nlvwrt,'IALR')
   1879 ccc         print *, 'ufbint has stored IALR on all levels - "event" ',
   1880 ccc  +               i,' ONLY'
   1881 

Page 34          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1882           endif ! i.eq.1/1st event? - only write background/pp info once
   1883 
   1884         else
   1885 C.......................................................................
   1886 C For some reason the total number of levels written out (nlv2wrt_tot) does not equal the
   1887 c  number of pressure levels written out (nlv2wrt) for this profile report - problems!!!
   1888 c  (go on to next profile)
   1889 c----------------------------------------------------------------------------------------
   1890           print 54, nlv2wrt_tot,nlv2wrt
   1891    54 format(/' #####> WARNING: THE TOTAL # OF LEVELS WRITTEN OUT ',I6,
   1892      + ' .NE. THE # OF PRESSURE LEVELS WRITTEN OUT ',I6,' FOR THIS ',
   1893      + 'PROFILE -- GO ON TO NEXT PROFILE'/)
   1894           write(cnlv2wrt_tot,'(i3)') nlv2wrt_tot
   1895           write(cnlv2wrt,'(i3)') nlv2wrt
   1896           call system('[ -n "$jlogfile" ] && $DATA/postmsg '//
   1897      +     '"$jlogfile" "***WARNING: LEVEL MISMATCH FOR PREPACQC '//
   1898      +     'PROFILE: TOTAL WRITTEN '//cnlv2wrt_tot//' .ne. # PRESS '//
   1899      +     'LVLS WRITTEN '//cnlv2wrt//' - PROFILE SKIPPED"')
   1900           go to 9999
   1901 C.......................................................................
   1902         endif
   1903 
   1904       enddo ! i = 1,mxnmev
   1905 
   1906       if(.not.l_operational) then
   1907         write(52,fmt=8002)
   1908  8002 format(208('X'))
   1909       endif
   1910 
   1911  9999 continue
   1912 
   1913 ccc   print *, 'out of sub2mem_mer for this merged report'
   1914 
   1915       return
   1916 
   1917       end

Page 35          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Entry Points                    sub2mem_mer.f



ENTRY POINTS

  Name                    
                          
 sub2mem_mer_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 53                         Label  640                                                            639                               
 54                         Label  1891                                                           1890                              
 666                        Label  982                                                            914,941,959                       
 8001                       Label  1736                                                           1724                              
 8002                       Label  1908                                                           1907                              
 9999                       Label  1911                                                           1364,1900                         
 ABS                        Func   1054                                 scalar                    1054,1075,1091,1099,1116,1212,1215
                                                                                                  ,1237,1250                        
 ACFT_SEQ_ACCUM             Dummy  183      R(8)            8     2     0        ARG,INOUT        893,1005,1568,1611,1614,1730      
 ACFT_SEQ_ARR2              Local  395      R(8)            8     2     0                         1403,1568,1851                    
 ACID1                      Dummy  182      R(8)            8           scalar   ARG,INOUT        1354,1355                         
 ACID_ARR1                  Local  334      R(8)            8           scalar                    1354,1356                         
 ALLOCATED                  Func   984                                  scalar                    984,985,986,987,988,989,990,991,99
                                                                                                  2,993,994,995,996,997             
 ALOG                       Func   700                                  scalar                    700,702,736,738,753,755,771,773,81
                                                                                                  5,816,818,819,1200,1247,1285      
 ASIN                       Func   1215                                 scalar                    1215,1219                         
 BEST_SLALOM                Local  197                                  scalar                    197,925                           
 BEST_TSLALOM               Subr   925                                           PRIV             925                               
 BIGT                       Param  566      R(8)            8           scalar                    925,945                           
 BMISS                      Dummy  180      R(8)            8           scalar   ARG,INOUT        588,1345,1346,1382,1383,1384,1385,
                                                                                                  1386,1387,1389,1390,1391,1392,1393
                                                                                                  ,1395,1396,1397,1398,1399,1401,140
                                                                                                  3,1405,1406,1407,1408,1409,1647,16
                                                                                                  58                                
 BNEWTON                    Local  197                                  scalar                    197,945                           
 C1_JK                      Local  427      I(4)            4           scalar                    1052,1054,1058,1062,1063,1064,1066
                                                                                                  ,1067,1068                        
 C2_JK                      Local  428      I(4)            4           scalar                    1053,1055,1059,1080,1081,1083,1084
 CAT_ACCUM                  Dummy  184      R(8)            8     2     0        ARG,INOUT        671,1583,1621,1624                
 CAT_ARR1                   Local  399      R(8)            8     2     0                         1407,1583,1873                    
 CMXLV                      Local  216      CHAR            6           scalar                    643,645,647                       
 CNLV2WRT                   Local  351      CHAR            6           scalar                    1895,1899                         
 CNLV2WRT_TOT               Local  348      CHAR            6           scalar                    1894,1898                         
 CONVERTD                   Subr   197                                                            197,900                           
 CONVERTD_BACK              Subr   198                                                            198,963                           
 COS                        Func   1215                                 scalar                    1215,1221,1222                    
 COUNT_GATES                Subr   197                                                            197,922                           
 C_ACFTID1                  Dummy  182      CHAR            9           scalar   ARG,INOUT        1724                              
 C_ACFTREG1                 Dummy  182      CHAR            8           scalar   ARG,INOUT        850,1724                          
 C_QC_ACCUM                 Dummy  191      CHAR            11    1     0        ARG,INOUT        1309,1310,1325,1326,1730          
 DEG2RAD                    Param  515      R(4)            4           scalar                    1212,1215,1216,1220,1221,1222,1223
 DELX                       Local  520      R(8)            8           scalar                    1269,1281                         
 DELY                       Local  521      R(8)            8           scalar                    1271,1283                         

Page 36          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Symbol Table                    sub2mem_mer.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DESCENDING                 Local  580      L(4)            4           scalar                    901,916,964                       
 DHDT                       Local  577      R(8)            8     1     1        ALC              880,946,963,966,992               
 DIST2PML                   Local  502      R(4)            4           scalar                    1249,1255,1260                    
 DIST_PUL_PLL               Local  498      R(4)            4           scalar                    1212,1214,1218,1234,1236,1255,1260
 DORU                       Local  567      I(4)            4           scalar                    901,925                           
 DP                         Param  196      I(4)            4           scalar                    196,566,569,570,577,578,579       
 DQ_DLNP                    Local  464      R(4)            4           scalar                    736,738,753,755                   
 DRARR3                     Local  393      R(8)            8     2     0                         1401,1562,1846                    
 DRINFO_ACCUM               Dummy  183      R(8)            8     2     0        ARG,INOUT        857,889,891,974,1005,1016,1024,103
                                                                                                  3,1041,1050,1069,1071,1072,1085,10
                                                                                                  87,1088,1097,1098,1106,1141,1142,1
                                                                                                  143,1156,1157,1158,1199,1200,1206,
                                                                                                  1207,1208,1209,1232,1233,1237,1238
                                                                                                  ,1246,1250,1254,1256,1259,1261,126
                                                                                                  9,1270,1271,1272,1280,1281,1282,12
                                                                                                  83,1284,1317,1318,1319,1333,1334,1
                                                                                                  335,1562,1596,1599,1725,1726      
 DT                         Local  522      R(8)            8           scalar                    1050,1054,1060,1106,1116,1117,1121
 DTIME_DLNP                 Local  496      R(8)            8           scalar                    1199,1247,1285                    
 DT_DLNP                    Local  454      R(4)            4           scalar                    700,702                           
 DT_NEW                     Local  525      R(8)            8           scalar                    1060,1071,1075,1087,1091,1097,1099
 DU_DLNP                    Local  480      R(4)            4           scalar                    815,818                           
 DV_DLNP                    Local  487      R(4)            4           scalar                    816,819                           
 DZ_DLNP                    Local  474      R(4)            4           scalar                    771,773                           
 ELV_ACCUM                  Dummy  184      R(8)            8     2     0        ARG,INOUT        1320,1336                         
 ENBEST                     Local  569      R(8)            8           scalar                    926                               
 ERREXIT                    Subr   597                                                            597,1186                          
 ERR_TSPLINE                Local  568      I(4)            4           scalar                    851,913,940,958,1001              
 FF                         Local  580      L(4)            4           scalar                    901,904,926,931,946,949           
 HABEST                     Local  579      R(8)            8     1     1        ALC              924,926,945,996                   
 HALFGATE                   Local  570      R(8)            8           scalar                    865,876,900,925,945,963           
 HDATA                      Local  576      R(4)            4     1     1        ALC              879,892,894,900,987               
 HDR2WRT                    Dummy  181      R(8)            8     1     15       ARG,INOUT        1306,1311,1317,1318,1319,1320,1321
                                                                                                  ,1322,1327,1333,1334,1335,1336,133
                                                                                                  7,1338,1345,1346,1350,1595,1601,16
                                                                                                  04,1606,1609                      
 HDR2WRT1                   Local  555      R(8)            8           scalar                    1595                              
 HEPS                       Param  566      R(8)            8           scalar                                                      
 HGTP                       Local  575      I(4)            4     1     1        ALC              924,925,945,993                   
 HGTS                       Local  574      I(4)            4     1     1        ALC              880,901,922,925,945,963,966,990   
 HP                         Local  578      R(8)            8     1     1        ALC              924,925,994                       
 HS                         Local  577      R(8)            8     1     1        ALC              880,901,925,945,966,991           
 I                          Local  415      I(4)            4           scalar                    617,632,633,663,665,1372,1424,1426
                                                                                                  ,1437,1439,1450,1452,1463,1465,147
                                                                                                  6,1477,1478,1490,1503,1594,1784   
 IACFT_SEQ_ACCUM2           Local  532      I(4)            4           scalar                    1612,1614,1725                    
 IALR_ARR1                  Local  403      R(8)            8     2     0                         1408,1587,1878                    
 IBFMS                      Func   494      I(4)            4           scalar                    675,676,678,688,713,714,716,726,74
                                                                                                  7,748,764,765,784,785,786,787,789,
                                                                                                  790,802,803,857,889,974,1016,1024,
                                                                                                  1033,1041,1069,1085,1141,1142,1143
                                                                                                  ,1156,1157,1158,1355,1424,1437,145
                                                                                                  0,1463,1476,1477,1596,1601,1606,16
                                                                                                  11,1616,1621,1627,1634,1639,1645,1
                                                                                                  646,1657,1666,1671,1676,1681,1686,

Page 37          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Symbol Table                    sub2mem_mer.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  1691,1697,1703,1709,1715          
 ICAT_ACCUM1                Local  550      I(4)            4           scalar                    1622,1624,1731                    
 IDRINFO_ACCUM3             Local  533      I(4)            4           scalar                    1597,1599,1726                    
 IDX                        Local  571      I(4)            4     1     1        ALC              878,901,963,984                   
 IHDR2WRT6                  Local  551      I(4)            4           scalar                    1607,1609,1731                    
 IHDR2WRT9                  Local  531      I(4)            4           scalar                    1602,1604,1724                    
 III                        Local  416      I(4)            4           scalar                    677,678,679,681,687,688,689,691,71
                                                                                                  5,716,717,719,725,726,727,729,788,
                                                                                                  789,790,791,793,801,802,803,804,80
                                                                                                  6,1626,1627,1628,1630,1644,1645,16
                                                                                                  46,1647,1648,1650,1651,1652,1656,1
                                                                                                  657,1658,1659,1661,1662           
 IMSTQ_ACCUM1               Local  549      I(4)            4           scalar                    1617,1619,1731                    
 INT                        Func   1211                                 scalar                    1211,1213,1232,1233,1306,1311,1327
 IORD                       Local  411      I(4)            4     1     0                         603,621,622,842,856,888,973,1003,1
                                                                                                  009,1022,1039,1063,1067,1068,1080,
                                                                                                  1083,1084,1134,1155,1188,1189,1242
                                                                                                  ,1278,1303,1304,1418              
 IPEVN_ACCUM2               Local  536      I(4)            4           scalar                    1667,1669,1732                    
 IPEVN_ACCUM4               Local  541      I(4)            4           scalar                    1693,1695,1733                    
 IQEVN_ACCUM2               Local  539      I(4)            4           scalar                    1682,1684,1732                    
 IQEVN_ACCUM4               Local  544      I(4)            4           scalar                    1711,1713,1734                    
 ITEVN_ACCUM2               Local  538      I(4)            4           scalar                    1677,1679,1732                    
 ITEVN_ACCUM4               Local  543      I(4)            4           scalar                    1705,1707,1733                    
 IWDSEVN_ACCUM1             Local  535      I(4)            4           scalar                    1640,1642,1731                    
 IWORK                      Local  410      I(4)            4     1     0                         603,842                           
 IWUVEVN_ACCUM3             Local  540      I(4)            4           scalar                    1687,1689,1733                    
 IWUVEVN_ACCUM5             Local  545      I(4)            4           scalar                    1717,1719,1734                    
 IZEVN_ACCUM1               Local  534      I(4)            4           scalar                    1635,1637,1726                    
 IZEVN_ACCUM2               Local  537      I(4)            4           scalar                    1672,1674,1732                    
 IZEVN_ACCUM4               Local  542      I(4)            4           scalar                    1699,1701,1733                    
 J                          Local  415      I(4)            4           scalar                    618,621,622,624,855,856,887,888,96
                                                                                                  5,966,967,972,973,977,1002,1003,10
                                                                                                  04,1008,1009,1015,1018,1021,1032,1
                                                                                                  035,1038,1121,1133,1134,1153,1178,
                                                                                                  1181,1188,1189,1242,1278,1416,1418
                                                                                                  ,1724                             
 JJ                         Local  417      I(4)            4           scalar                    621,632,659,661,675,678,685,686,71
                                                                                                  3,716,723,724,747,750,764,766,768,
                                                                                                  784,786,789,790,797,798,799,856,85
                                                                                                  7,888,889,891,892,893,973,974,976,
                                                                                                  977,978,1003,1004,1005,1009,1016,1
                                                                                                  017,1033,1034,1117,1121,1134,1141,
                                                                                                  1142,1143,1418,1424,1426,1437,1439
                                                                                                  ,1450,1452,1463,1465,1476,1477,147
                                                                                                  8,1490,1505,1510,1515,1520,1525,15
                                                                                                  33,1538,1543,1548,1553,1562,1568,1
                                                                                                  575,1579,1583,1587,1596,1599,1611,
                                                                                                  1614,1616,1619,1621,1624,1627,1634
                                                                                                  ,1637,1639,1642,1645,1646,1650,165
                                                                                                  1,1657,1661,1666,1669,1671,1674,16
                                                                                                  76,1679,1681,1684,1686,1689,1691,1
                                                                                                  692,1695,1697,1698,1701,1703,1704,
                                                                                                  1707,1709,1710,1713,1715,1716,1719
                                                                                                  ,1725,1726,1727,1728,1729,1730    

Page 38          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Symbol Table                    sub2mem_mer.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 JJM                        Local  432      I(4)            4           scalar                    1039,1040,1041,1042,1084,1085,1086
 JJM1                       Local  419      I(4)            4           scalar                    1014,1034,1042,1049,1050,1072,1092
                                                                                                  ,1101,1106,1113,1188,1190,1200,120
                                                                                                  8,1209,1233,1238,1246,1250,1254,12
                                                                                                  56,1259,1261,1270,1272,1281,1283,1
                                                                                                  284                               
 JJM2                       Local  421      I(4)            4           scalar                    1057,1086,1088,1092,1096,1098,1101
 JJMAXP                     Local  422      I(4)            4           scalar                    1303,1309,1310,1317,1318,1319,1320
                                                                                                  ,1321,1322,1325,1326              
 JJMINP                     Local  423      I(4)            4           scalar                    1304,1333,1334,1335,1336,1337,1338
 JJP                        Local  431      I(4)            4           scalar                    1022,1023,1024,1025,1068,1069,1070
 JJP1                       Local  418      I(4)            4           scalar                    622,633,660,662,676,688,695,696,71
                                                                                                  4,726,733,734,748,751,765,767,769,
                                                                                                  785,787,802,803,810,811,812,1013,1
                                                                                                  017,1025,1049,1050,1076,1087,1100,
                                                                                                  1106,1112                         
 JJP2                       Local  420      I(4)            4           scalar                    1056,1070,1071,1076,1096,1097,1100
 JJPK                       Local  434      I(4)            4           scalar                    1242,1243,1246,1250,1254,1259,1278
                                                                                                  ,1279,1280,1282,1284              
 JJPNMNBTW                  Local  424      I(4)            4           scalar                    1189,1191,1199,1206,1207,1232,1237
                                                                                                  ,1256,1261,1269,1271              
 JK                         Local  426      I(4)            4           scalar                    1021,1022,1026,1038,1039,1043     
 JKM                        Local  430      I(4)            4           scalar                    1012,1035,1043,1055,1080,1083,1084
 JKP                        Local  429      I(4)            4           scalar                    1011,1018,1026,1054,1062,1063,1066
                                                                                                  ,1067,1068                        
 K                          Local  415      I(4)            4           scalar                    1153,1155,1240,1242,1276,1278,1281
                                                                                                  ,1283                             
 KK                         Local  433      I(4)            4           scalar                    1155,1156,1157,1158               
 L                          Local  415      I(4)            4           scalar                                                      
 LAT_PLL                    Local  509      R(4)            4           scalar                    1208,1212,1213,1220,1222          
 LAT_PUL                    Local  505      R(4)            4           scalar                    1206,1212,1213,1215,1220,1221     
 LON_PLL                    Local  511      R(4)            4           scalar                    1209,1211,1216,1223               
 LON_PUL                    Local  507      R(4)            4           scalar                    1207,1211,1216,1223               
 LOOP1                      Label  617                                  scalar                    649,833                           
 LVLSINPROF                 Dummy  192      I(4)            4     1     0        ARG,INOUT        603,632,633,659,660,665,842,1190,1
                                                                                                  191,1243,1279                     
 LWR                        Dummy  194      I(4)            4           scalar   ARG,INOUT        603,842                           
 L_MANDLVL                  Dummy  193      L(4)            4           scalar   ARG,INOUT        615,1130                          
 L_OPERATIONAL              Dummy  194      L(4)            4           scalar   ARG,INOUT        1592,1906                         
 M                          Local  567      I(4)            4           scalar                    923,924,945                       
 MANDLVLS                   Dummy  181      I(4)            4     1     0        ARG,INOUT        632,633,663,665                   
 MAX                        Func   667                                  scalar                    667,705,741,776,824               
 MAXIT                      Local  567      I(4)            4           scalar                    884,926,927                       
 MAXITA                     Local  567      I(4)            4           scalar                    881,926,927                       
 MAXITB                     Local  567      I(4)            4           scalar                    882,926,927                       
 MAXMANDLVLS                Dummy  180      I(4)            4           scalar   ARG,INOUT        323,617                           
 MAXRTS                     Local  567      I(4)            4           scalar                    883,926,928                       
 MESGTYPE                   Dummy  181      CHAR            8           scalar   ARG,INOUT        1360,1361                         
 MH                         Local  567      I(4)            4           scalar                    922,923,924,925                   
 MIN                        Func   1215                                 scalar                    1215,1219                         
 MOD                        Func   1306                                 scalar                    1306,1311,1327                    
 MODEBEST                   Local  572      I(4)            4     1     1        ALC              924,926,997                       
 MSTQ_ACCUM                 Dummy  184      R(8)            8     2     0        ARG,INOUT        1575,1616,1619                    
 MSTQ_ARR1                  Local  397      R(8)            8     2     0                         1405,1575,1863                    
 MXE4PROF                   Dummy  191      I(4)            4           scalar   ARG,INOUT        677,687,715,725,788,801,1372,1594,

Page 39          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Symbol Table                    sub2mem_mer.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  1626,1644,1656                    
 MXLV                       Dummy  180      I(4)            4           scalar   ARG,INOUT        219,229,231,234,236,238,240,242,24
                                                                                                  4,247,249,252,256,258,261,265,267,
                                                                                                  270,274,276,279,283,286,289,293,29
                                                                                                  7,356,358,360,362,364,366,372,374,
                                                                                                  376,378,380,383,385,387,389,391,39
                                                                                                  3,395,397,399,401,403,405,410,411,
                                                                                                  526,635,639,643                   
 MXNMEV                     Dummy  180      I(4)            4           scalar   ARG,INOUT        247,256,265,274,283,293           
 NEARSEC                    Local  580      L(4)            4           scalar                                                      
 NEVENTS_Q                  Local  547      I(4)            4           scalar                    717,719,723,724,727,729,733,734,16
                                                                                                  59,1662,1681,1684,1709,1710,1713,1
                                                                                                  728                               
 NEVENTS_T                  Local  546      I(4)            4           scalar                    679,681,685,686,689,691,695,696,16
                                                                                                  28,1630,1676,1679,1703,1704,1707,1
                                                                                                  727,1728                          
 NEVENTS_W                  Local  548      I(4)            4           scalar                    791,793,797,798,799,804,806,810,81
                                                                                                  1,812,1648,1652,1686,1689,1715,171
                                                                                                  6,1719,1728,1729                  
 NH                         Local  567      I(4)            4           scalar                    854,858,863,878,879,880,886,890,89
                                                                                                  1,892,893,894,895,900,922,925,945,
                                                                                                  946,963,965,971,975,976           
 NH2                        Local  567      I(4)            4           scalar                    863                               
 NINT                       Func   893                                  scalar                    893,1599,1604,1609,1614,1619,1624,
                                                                                                  1637,1642,1669,1674,1679,1684,1689
                                                                                                  ,1692,1695,1698,1701,1704,1707,171
                                                                                                  0,1713,1716,1719                  
 NIT                        Param  564      I(4)            4           scalar                                                      
 NLV2WRT                    Local  350      I(4)            4           scalar                    1380,1421,1426,1439,1452,1465,1478
                                                                                                  ,1490,1505,1510,1515,1520,1525,153
                                                                                                  3,1538,1543,1548,1553,1562,1568,15
                                                                                                  75,1579,1583,1587,1749,1751,1755,1
                                                                                                  759,1763,1767,1772,1779,1798,1803,
                                                                                                  1808,1813,1818,1824,1828,1832,1836
                                                                                                  ,1840,1846,1851,1863,1868,1873,187
                                                                                                  8,1890,1895                       
 NLV2WRT_TOT                Local  346      I(4)            4           scalar                    613,835,842,850,853,855,887,972,10
                                                                                                  00,1002,1008,1015,1021,1054,1062,1
                                                                                                  066,1133,1153,1303,1305,1308,1324,
                                                                                                  1416,1749,1890,1894               
 NLVINPROF                  Dummy  192      I(4)            4           scalar   ARG,INOUT        590,603,613,615,618,624,635,665,66
                                                                                                  6,667,668,669,671,704,705,706,707,
                                                                                                  740,741,742,743,757,775,776,777,77
                                                                                                  8,821,822,823,825,826,835,1023,104
                                                                                                  0,1063,1067,1080,1083,1130        
 NLVWRT                     Local  353      I(4)            4           scalar                    1350,1356,1751,1755,1759,1763,1767
                                                                                                  ,1772,1798,1803,1808,1813,1818,182
                                                                                                  4,1828,1832,1836,1840,1846,1851,18
                                                                                                  63,1868,1873,1878                 
 NMANDLVLS                  Local  325      I(4)            4           scalar                    612,635,653,665,666,667,668,669,67
                                                                                                  1,704,705,706,707,740,741,742,743,
                                                                                                  757,775,776,777,778,821,822,823,82
                                                                                                  5,826,835                         
 NMNBTW                     Local  327      I(4)            4           scalar                    1137,1147,1160,1189,1240,1270,1272
                                                                                                  ,1276                             

Page 40          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Symbol Table                    sub2mem_mer.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 NRLACQC_PC                 Dummy  193      R(4)            4           scalar   ARG,INOUT        668,706,742,777,825,1692,1698,1704
                                                                                                  ,1710,1716                        
 NUM_EVENTS_PROF            Dummy  192      I(4)            4           scalar   ARG,INOUT        1779                              
 ORDERS                     Subr   603                                                            603,842                           
 PBGARR3                    Local  372      R(8)            8     2     0                         1389,1505,1798                    
 PBG_ACCUM                  Dummy  186      R(8)            8     2     0        ARG,INOUT        1505                              
 PEVNS4                     Local  356      R(8)            8     2     0                         1382,1426,1751                    
 PEVN_ACCUM                 Dummy  186      R(8)            8     3     0        ARG,INOUT        661,662,666,667,668,669,1424,1426,
                                                                                                  1666,1669,1691,1692,1695,1727     
 PKIND                      Module 196                                                            196                               
 PLL                        Local  438      R(4)            4           scalar                    659,700,702,736,738,753,755,771,77
                                                                                                  3,815,816,818,819,1190,1200,1247,1
                                                                                                  285                               
 PML                        Local  444      R(4)            4           scalar                    663,666,702,738,755,773,818,819,12
                                                                                                  43,1247,1279,1285                 
 POF                        Local  573      I(4)            4     1     1        ALC              878,893,895,900,985               
 PPPARR3                    Local  383      R(8)            8     2     0                         1395,1533,1824                    
 PPP_ACCUM                  Dummy  186      R(8)            8     2     0        ARG,INOUT        1533                              
 PQLL                       Local  442      R(4)            4           scalar                    661,667                           
 PQUL                       Local  440      R(4)            4           scalar                    662,667                           
 PROFLUN                    Dummy  180      I(4)            4           scalar   ARG,INOUT        1350,1356,1751,1755,1759,1763,1767
                                                                                                  ,1772,1798,1803,1808,1813,1818,182
                                                                                                  4,1828,1832,1836,1840,1846,1851,18
                                                                                                  63,1868,1873,1878                 
 PSPL                       Module 197                                                            197                               
 PUL                        Local  436      R(4)            4           scalar                    660,700,736,753,771,815,816,1191,1
                                                                                                  200                               
 QBEST                      Local  579      R(8)            8     1     1        ALC              924,926,946,995                   
 QBGARR3                    Local  374      R(8)            8     2     0                         1390,1510,1803                    
 QBG_ACCUM                  Dummy  187      R(8)            8     2     0        ARG,INOUT        747,748,750,751,757,1510          
 QEVNS4                     Local  358      R(8)            8     2     0                         1383,1439,1755                    
 QEVN_ACCUM                 Dummy  187      R(8)            8     3     0        ARG,INOUT        713,714,716,723,724,726,733,734,74
                                                                                                  0,741,742,743,1437,1439,1657,1661,
                                                                                                  1681,1684,1709,1710,1713          
 QLL                        Local  457      R(4)            4           scalar                    723,736,738,750,753,755           
 QML                        Local  463      R(4)            4           scalar                    738,740,755,757                   
 QPPARR3                    Local  385      R(8)            8     2     0                         1396,1538,1828                    
 QPP_ACCUM                  Dummy  187      R(8)            8     2     0        ARG,INOUT        1538                              
 QQLL                       Local  461      R(4)            4           scalar                    724,741                           
 QQUL                       Local  459      R(4)            4           scalar                    734,741                           
 QUL                        Local  455      R(4)            4           scalar                    733,736,751,753                   
 Q_SPHUM                    Local  554      R(8)            8           scalar                    1658,1661,1728                    
 RADIUS_E                   Param  514      R(4)            4           scalar                    1212,1214,1218                    
 RATE_ACCUM                 Local  526      R(8)            8     1     0                         588,976,978,1117,1121,1587        
 RCT_ACCUM                  Dummy  183      R(8)            8     2     0        ARG,INOUT        1579,1730                         
 RCT_ARR1                   Local  401      R(8)            8     2     0                         1406,1579,1868                    
 RPT_ACCUM                  Dummy  184      R(8)            8     2     0        ARG,INOUT        1321,1337                         
 SIN                        Func   1216                                 scalar                    1216,1220,1223                    
 SPD_PUL_PLL                Local  500      R(4)            4           scalar                    1236,1249                         
 SQRT                       Func   1219                                 scalar                    1219,1650                         
 SUB2MEM_MER                Subr   180                                                                                              
 SYSTEM                     Subr   644                                                            644,1896                          
 TBGARR3                    Local  376      R(8)            8     2     0                         1391,1515,1808                    
 TBG_ACCUM                  Dummy  188      R(8)            8     2     0        ARG,INOUT        1515                              
 TBNEWTON                   Subr   945                                           PRIV             945                               

Page 41          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Symbol Table                    sub2mem_mer.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 TCOR_ACCUM                 Dummy  185      R(8)            8     2     0        ARG,INOUT        1322,1338                         
 TDATA                      Local  576      R(4)            4     1     1        ALC              879,891,894,900,963,986           
 TE                         Local  577      R(8)            8     1     1        ALC              880,946,989                       
 TEVNS4                     Local  360      R(8)            8     2     0                         1384,1452,1759                    
 TEVN_ACCUM                 Dummy  188      R(8)            8     3     0        ARG,INOUT        675,676,678,685,686,688,695,696,70
                                                                                                  4,705,706,707,1450,1452,1627,1676,
                                                                                                  1679,1703,1704,1707,1727          
 TIMEMIN                    Local  569      R(8)            8           scalar                                                      
 TLL                        Local  447      R(4)            4           scalar                    685,700,702                       
 TML                        Local  453      R(4)            4           scalar                    702,704                           
 TPPARR3                    Local  387      R(8)            8     2     0                         1397,1543,1832                    
 TPP_ACCUM                  Dummy  188      R(8)            8     2     0        ARG,INOUT        1543                              
 TQLL                       Local  451      R(4)            4           scalar                    686,705                           
 TQUL                       Local  449      R(4)            4           scalar                    696,705                           
 TSPLINES                   Dummy  193      L(4)            4           scalar   ARG,INOUT        853,1000                          
 TUL                        Local  445      R(4)            4           scalar                    695,700                           
 TURB_ARR4                  Local  405      R(8)            8     2     0                         1409                              
 UFBINT                     Subr   1350                                                           1350,1356,1751,1755,1759,1763,1767
                                                                                                  ,1772,1798,1803,1808,1813,1818,182
                                                                                                  4,1828,1832,1836,1840,1846,1851,18
                                                                                                  63,1868,1873,1878                 
 ULL                        Local  477      R(4)            4           scalar                    797,815,818                       
 UML                        Local  479      R(4)            4           scalar                    818,821                           
 UUL                        Local  475      R(4)            4           scalar                    810,815                           
 UVQLL                      Local  491      R(4)            4           scalar                    799,824                           
 UVQUL                      Local  489      R(4)            4           scalar                    812,824                           
 VLL                        Local  484      R(4)            4           scalar                    798,816,819                       
 VML                        Local  486      R(4)            4           scalar                    819,822                           
 VUL                        Local  482      R(4)            4           scalar                    811,816                           
 W3TAGE                     Subr   596                                                            596,1185                          
 WDATA                      Local  576      R(4)            4     1     1        ALC              879,963,967,976,988               
 WDSEVNS5                   Local  366      R(8)            8     2     0                         1387,1490,1772                    
 WDSEVN_ACCUM               Dummy  191      R(8)            8     3     0        ARG,INOUT        1490,1639,1642                    
 WSPD                       Local  553      R(8)            8           scalar                    1647,1650,1731                    
 WUVBGARR5                  Local  380      R(8)            8     2     0                         1393,1525,1818                    
 WUVBG_ACCUM                Dummy  190      R(8)            8     2     0        ARG,INOUT        1525                              
 WUVEVNS5                   Local  364      R(8)            8     2     0                         1386,1478,1767                    
 WUVEVN_ACCUM               Dummy  190      R(8)            8     3     0        ARG,INOUT        784,785,786,787,789,790,797,798,79
                                                                                                  9,802,803,810,811,812,821,822,823,
                                                                                                  825,826,1476,1477,1478,1645,1646,1
                                                                                                  650,1651,1686,1689,1715,1716,1719,
                                                                                                  1728,1729                         
 WUVPPARR6                  Local  391      R(8)            8     2     0                         1399,1553,1840                    
 WUVPP_ACCUM                Dummy  190      R(8)            8     2     0        ARG,INOUT        1553                              
 ZBGARR3                    Local  378      R(8)            8     2     0                         1392,1520,1813                    
 ZBG_ACCUM                  Dummy  189      R(8)            8     2     0        ARG,INOUT        1520                              
 ZEVNS4                     Local  362      R(8)            8     2     0                         1385,1465,1763                    
 ZEVN_ACCUM                 Dummy  189      R(8)            8     3     0        ARG,INOUT        764,765,766,767,768,769,775,776,77
                                                                                                  7,778,892,977,1004,1112,1113,1463,
                                                                                                  1465,1634,1637,1671,1674,1697,1698
                                                                                                  ,1701                             
 ZLL                        Local  467      R(4)            4           scalar                    766,771,773,1113,1117             
 ZML                        Local  473      R(4)            4           scalar                    773,775                           
 ZPPARR3                    Local  389      R(8)            8     2     0                         1398,1548,1836                    
 ZPP_ACCUM                  Dummy  189      R(8)            8     2     0        ARG,INOUT        1548                              

Page 42          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Symbol Table                    sub2mem_mer.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ZQLL                       Local  471      R(4)            4           scalar                    768,776                           
 ZQUL                       Local  469      R(4)            4           scalar                    769,776                           
 ZUL                        Local  465      R(4)            4           scalar                    767,771,1112,1117                 

Page 43          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

   1918 

Page 44          Source Listing                  SUB2MEM_MER
2017-04-18 11:09 Subprograms/Common Blocks       sub2mem_mer.f



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 SUB2MEM_MER                Subr   180                                                                                              

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte
       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume nobyterecl                    -assume nocc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofpe_summary                 -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume noold_ldout_format            -assume noold_logical_ldio
       -assume old_maxminloc                 -assume old_xor
       -assume noprotect_allocates           -assume protect_constants
       -assume noprotect_parens              -assume split_common
       -assume source_include                -assume nostd_intent_in
       -assume std_minus0_rounding           -assume nostd_mod_proc_name
       -assume std_value                     -assume norealloc_lhs
       -assume underscore                    -assume no2underscores
  no   -auto                                 -auto_scalar
  no   -bintext                              -ccdefault default
       -check noargs                         -check noarg_temp_created
       -check noassume                       -check nobounds
       -check noformat                       -check nooutput_conversion
       -check nooverflow                     -check nopointers
       -check power                          -check noshape
       -check nostack                        -check nounderflow
       -check nouninitialized                -coarray-num-procs 0
  no   -coarray-config-file                  -convert big_endian
       -cross_reference                      -D __INTEL_COMPILER=1600
       -D __INTEL_COMPILER_UPDATE=3          -D __unix__
       -D __unix                             -D __linux__
       -D __linux                            -D __gnu_linux__
       -D unix                               -D linux
       -D __ELF__                            -D __x86_64
       -D __x86_64__                         -D __amd64
       -D __amd64__                          -D __INTEL_COMPILER_BUILD_DATE=20160415
       -D __INTEL_OFFLOAD                    -D __i686
       -D __i686__                           -D __pentiumpro
       -D __pentiumpro__                     -D __pentium4

Page 45          Source Listing                  SUB2MEM_MER
2017-04-18 11:09                                 sub2mem_mer.f

       -D __pentium4__                       -D __tune_pentium4__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __SSE__                            -D __SSE_MATH__
       -D __MMX__                            -double_size 64
  no   -d_lines                         no   -Qdyncom
       -error_limit 30                  no   -f66
  no   -f77rtl                          no   -fast
       -fpscomp nofilesfromcmd               -fpscomp nogeneral
       -fpscomp noioformat                   -fpscomp noldio_spacing
       -fpscomp nologicals                   -fixed
  no   -fpconstant                           -fpe3
       -fprm nearest                    no   -ftz
       -fp_model noprecise                   -fp_model fast
       -fp_model nostrict                    -fp_model nosource
       -fp_model nodouble                    -fp_model noextended
       -fp_model novery_fast                 -fp_model noexcept
       -fp_model nono_except                 -heap_arrays 0
  no   -threadprivate_compat                 -g2
       -iface nomixed_str_len_arg            -iface nono_mixed_str_len_arg
       -init noarrays                        -init noinf
       -init nonan                           -init nosnan
       -init nozero                     no   -intconstant
       -integer_size 32                 no   -mixed_str_len_arg
  no   -module                               -names lowercase
  no   -noinclude                            -offload-build=host
       -O2                              no   -pad_source
       -real_size 32                    no   -recursive
       -reentrancy none                 no   -sharable_localsaves
       -vec=simd                             -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w alignments                         -w noargument_checking
       -w nodeclarations                     -w general
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w notruncated_source
       -w uncalled                           -w uninitialized
       -w nounused                           -w usage
  no   -wrap-margins

       -includepath : /usrx/local/intel/2016SP3/daal/include/,/usr/include/,.FOR,./.FOR,/usrx/local/intel/2016SP3/ipp/include/.FOR,
           /usrx/local/intel/2016SP3/mkl/include/.FOR,/usrx/local/intel/2016SP3/tbb/include/.FOR,/usrx/local/intel/2016SP3/daal/include/.FOR,
           /gpfs/tp1/usrx/local/intel/2016SP3/compilers_and_libraries_2016.3.210/linux/compiler/include/intel64/.FOR,
           /gpfs/tp1/usrx/local/intel/2016SP3/compilers_and_libraries_2016.3.210/linux/compiler/include/.FOR,/usr/local/include/.FOR,
           /usr/lib/gcc/x86_64-redhat-linux/4.4.7/include/.FOR,/usr/include/.FOR,/usr/include/.FOR,/usr/include/.FOR
       -list filename : sub2mem_mer.lst
       -o    filename : none

COMPILER: Intel(R) Fortran 16.0-1633
