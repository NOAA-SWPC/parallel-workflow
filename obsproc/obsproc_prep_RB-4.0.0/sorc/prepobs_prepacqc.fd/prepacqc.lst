Page 1           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

      1 c$$$ Main Program Documentation Block
      2 c   BEST VIEWED WITH 94-CHARACTER WIDTH WINDOW
      3 c
      4 c Main Program: PREPOBS_PREPACQC
      5 c   Programmer: D. Keyser       Org: NP22       Date: 2016-12-09
      6 c
      7 c Abstract: Performs the NRL aircraft data quality control on all types of reports (AIREP,
      8 c   PIREP, AMDAR, TAMDAR, MDCRS).  Replaces the previous routine of the same name originally
      9 c   written by Paul Julian (which was less comprehensive and did not handle MDCRS reports).
     10 c   It reads in a PREPBUFR file containing all reports, pulls out "AIRCAR" and "AIRCFT"
     11 c   reports, merges the mass and wind pieces, translates information into NRL "standards" and
     12 c   stores in internal memory.  These are then passed into the NRL quality control kernel
     13 c   (acftqc_obs).  Once the NRL quality control is completed, translates information back to
     14 c   NCEP/PREPBUFR "standards" and encodes the updated information into the full PREPBUFR file
     15 c   as "events" with new NRLACQC reason codes.  The events consist of quality mark changes,
     16 c   although NRLACQC can also remove duplicate reports and rehabilitate (update) the report
     17 c   time, latitude and longitude for some AIREP reports.  An option is to also generate a
     18 c   PREPBUFR-like profiles file containing only aircraft reports in "raob-lookalike"
     19 c   profiles (merged mass and wind data).  These can be used for air quality and verification
     20 c   codes.
     21 c
     22 c Program History Log:
     23 c 2010-11-15  S. Bender  -- Original Author
     24 c 2012-05-08  D. Keyser  -- Prepared for operational implementation
     25 c 2012-11-20  J. Woollen -- Initial port to WCOSS
     26 c 2012-12-11  S. Hsiao   -- Increased maximum number of merged reports that can be processed
     27 c                           "max_reps" from 150K to 155K to handle increase in MDCRS reports
     28 c 2013-02-07  D. Keyser  -- Interface with input PREPBUFR file will now store pressure and
     29 c                           pressure-altitude only from the first (mass) piece of a mass/wind
     30 c                           piece pair rather than re-store it again from the second (wind)
     31 c                           piece - even though they "should" be the same in both pieces (see
     32 c                           % below for exception), there can be rare cases when at least
     33 c                           pressure-altitude is missing in the wind piece (due to a bug in
     34 c                           PREPDATA where unreasonably-high winds are set to missing and an
     35 c                           "empty" wind piece is still encoded into PREPBUFR, this can lead
     36 c                           to floating point exception errors in construction of profiles
     37 c                           {note that pressure & pressure-altitude from reports with only a
     38 c                           wind piece will be read since it is the first (only) piece of the
     39 c                           report}: % - there can be cases where the pressure qualty mark
     40 c                           (PQM) is different in the mass piece vs. the wind piece (e.g.,
     41 c                           when it is set to 10 for reports near tropical systems by
     42 c                           SYNDATA), so it is better to pick up PQM from the mass report for
     43 c                           use in the merged mass/wind profiles, an added benefit of this
     44 c                           change; increased maximum number of merged reports that can be
     45 c                           processed "max_reps" from 155K to 185K to handle future increase
     46 c                           all types of aircraft rpts; if the total number of merged (mass
     47 c                           + wind piece) aircraft-type reports read in from PREPBUFR file is
     48 c                           at least 90% of the maximum allowed, print diagnostic warning
     49 c                           message to production joblog file prior to returning from
     50 c                           subroutine INPUT_ACQC; if the maximum number of merged reports
     51 c                           that can be processed ("max_reps") is exceeded when updating
     52 c                           reports in PREPBUFR file with QC changes in subroutine
     53 c                           OUTPUT_ACQC_NOPROF, program will no longer stop with r.c. 31, as
     54 c                           though there is an indexing error, instead all original reports
     55 c                           above "max_reps" will be written out without any QC and a message
     56 c                           will be printed to stdout (a diagnostic will have already been
     57 c                           sent to the production joblog file in this case when reports were

Page 2           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

     58 c                           first read in by subroutine INPUT_ACQC)
     59 c 2013-02-07  D. Keyser  -- Final changes to run on WCOSS: Set BUFRLIB missing (BMISS) to
     60 c                           10E8 rather than 10E10 to avoid integer overflow; use formatted
     61 c                           print statements where previously unformatted print was > 80
     62 c                           characters
     63 c 2014-03-06  D. Keyser  -- Moved BUFRLIB routine OPENMB call in subroutine
     64 c                           output_acqc_noprof to after time window and geographic domain
     65 c                           checks to prevent creation of an empty, but open, BUFR message
     66 c                           (type AIRCAR) in (rare) cases where absolutely no aircraft
     67 c                           reports pass these checks (would cause a BUFRLIB abort due to
     68 c                           previous message being open when attempting to copy first non-
     69 c                           aircraft message from input to output PREPBUFR file
     70 c 2014-07-18  D. Keyser  --
     71 c                 - Increased maximum number of flights that can be processed "maxflt" from
     72 c                   5000 to 7500 to account for increase in aircraft reports.
     73 c                 - Increased maximum number of merged reports that can be processed
     74 c                   "max_reps" from 185K to 220K to handle future increase in all types of
     75 c                   aircraft reports.
     76 c                 - If subroutine acftobs_qc returns abnormally to main program due to the
     77 c                   maximum value for number of flights calculated at some point during its
     78 c                   processing exceeding the allowed limit ("maxflt"), no longer stop with
     79 c                   r.c. 98.  Instead continue on with processing and post a diagnostic
     80 c                   warning message to the production joblog file.  The assumption is that
     81 c                   the resultant PREPBUFR file may not contain fully QC'd aircraft data,
     82 c                   especially if the actual number of flights calculated greatly exceeds
     83 c                   "maxflt" (since obs in flights above the "maxflt" limit may partially be
     84 c                   skipped over in the QC process), but the vast majority should be QC'd,
     85 c                   and all reports originally in the PREPBUFR file will be at least be
     86 c                   retained. (Note that a gradual increase will trigger a warning in the
     87 c                   production joblog now when numbers get too close to the limit - see
     88 c                   change to subroutine acftobs_qc below).
     89 c                 - Increased format width from I5 to I6 in all places where aircraft obs
     90 c                   index is listed out (since there now can be > 99999 reports).
     91 c                 - Subroutine acftobs_qc and its child subroutines:
     92 c                    - Keep track of maximum value for number of flights calculated at some
     93 c                      point during the processing of subroutine acftobs_qc.  If, at the end
     94 c                      of acftobs_qc, this value is at least 90% of the allowed limit
     95 c                      ("maxflt", set in the main program), post a diagnostic warning message
     96 c                      to the production joblog file prior to exiting from acftobs_qc.
     97 c                    - In subr. do_flt and do_reg, return (abnormally) immediately if
     98 c                      "maxflt" is exceeded rather than waiting to test for this at end of
     99 c                      do_flt and do_reg and then return (abnormally).  Prior to return
    100 c                      subtract 1 from number of flights so it will remain at "maxflt". The
    101 c                      immediate return avoids clobbering of memory in these cases.
    102 c                    - In subr. reorder, where any new flight exceeding "maxflt" replaces the
    103 c                      previous flight at index "maxflt" in the arrays to avoid an array
    104 c                      overflow (done in two places in original NRL version), post diagnostic
    105 c                      warning message to the production joblog file (found a third instance
    106 c                      where this needs to be done in subr. reorder - original NRL version
    107 c                      did not trap it and arrays limited to length "maxflt" would have
    108 c                      overflowed).
    109 c                    - If "maxflt" is exceeded in subr. dupchk (1 place possible) or in subr.
    110 c                      do_flt (2 places possible), the abnormal return back to subr.
    111 c                      acftobs_qc results in subr. acftobs_qc now continuing on but setting a
    112 c                      flag for "maxflt_exceeded".  Prior to this, subr.  acftobs_qc itself
    113 c                      immediately performed an abnormal return back to main program in such
    114 c                      cases resulting in no more NRL QC processing.  Now NRL QC processing

Page 3           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    115 c                      will continue on to the end of subr. acftobs_qc where the abnormal
    116 c                      return back to the main program will be triggered by the
    117 c                      "maxflt_exceeded" flag.
    118 c                    - There is one, apparently rare, condition where "maxflt" could be
    119 c                      exceeded in subr. acft_obs itself (within logic which generates master
    120 c                      list of tail numbers and counts).  Since it can't be determined if
    121 c                      continuing on without processing (QC'ing) any more data would yield
    122 c                      acceptable results, the program now immediately stops with condition
    123 c                      code 98 and a diagnostic warning message is posted to the production
    124 c                      joblog file noting that "maxflt" needs to be increased.  Prior to this
    125 c                      it returned to the main program where it also immediately stopped with
    126 c                      condition code 98 (so no real change in what happens here, just where
    127 c                      it happens).
    128 c 2014-09-03  D. Keyser  -- If no aircraft reports of any type are read from input PREPBUFR
    129 c                      file by subr. input_acqc, no further processing is performed in this
    130 c                      subr. other than the usual stdout print summary at its end.  After its
    131 c                      return back to the calling main program, the main program also, in
    132 c                      this case, does no further processing.  Instead the main program stops
    133 c                      with condition code 4 (to alert executing script prepobs_prepacqc.sh)
    134 c                      after printing a diagnostic message to stdout.
    135 c 2014-12-09  J. Purser/Y. Zhu     -- Added new namelist switches "l_mandlvl" and "tsplines",
    136 c                      used by subroutine sub2mem_mer to modify the calculation of vertical
    137 c                      velocity rate in the profiles {l_mandlvl=F excludes interpolation to
    138 c                      mandatory levels; tsplines=T calculates vertical velocity rate using
    139 c                      Jim Purser's tension-spline interpolation utility (source in-lined in
    140 c                      this program at this time) to get continuous gradient results in a
    141 c                      profile and mitigate missing time information; tsplines=F uses finite-
    142 c                      difference method to obtain vertical velocity rate, calculated for
    143 c                      both ascents and descents using the nearest neighboring pair which are
    144 c                      at least one minute apart (before, only finite-difference method was
    145 c                      used to obtain vertical velocity rate and it could only be calculated
    146 c                      for descents).
    147 c 2014-12-12  D. Keyser  -- Printout from vertical velocity rate calculation information for
    148 c                      QC'd merged aircraft reports written to profiles PREPBUFR-like file is
    149 c                      written to unit 41 rather than stdout.
    150 c 2015-03-16  D. Keyser  --
    151 c                 - Increased maximum number of merged reports that can be processed
    152 c                   "max_reps" from 220K to 300K to handle future increase in all types of
    153 c                   aircraft reports.
    154 c                 - In subr. output_acqc_prof, fixed a bug which, for cases where the maximum
    155 c                   number of merged reports that can be processed ("max_reps") is exceeded,
    156 c                   prevented any original reports above "max_reps" from being written out
    157 c                   (without any QC).
    158 c 2015-04-17  J. Purser   -- Updates to tension-spline interpolation utility pspl:
    159 c                   In April 2015 some significant changes were made to pspl.f90 to improve
    160 c                   the robustness of the algorithm and the usefulness of the energy
    161 c                   diagnostic:
    162 c                       1) The allowance of B iterations was increased from 40 to 80 owing to
    163 c                          a single failure in a parallel run (where 43 iterations were
    164 c                          required) (and the halfgate parameter was increased to 30 for all
    165 c                          data in the parallels, which also increases robustness).
    166 c                       2) There was included an explicit energy check at each A iteration to
    167 c                          force an exit when this energy fails to decrease. This change was
    168 c                          prompted by a single failure in a parallel run (courtesy Russ
    169 c                          Treadon) in which the A and B iterations flip-flopped at zero
    170 c                          energy change in a case of grazing contact with a gatepost.
    171 c                       3) The energy is now normalized by the energy that would be computed

Page 4           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    172 c                          from a spline that fits only the first and last gateposts. The
    173 c                          renormalized energy diagnostic tells how sinuous the final profile
    174 c                          is -- very large values are indiciative of a halfgate chosen to be
    175 c                          too narrow for the given profile data.
    176 c                       4) The normalized time data are now handled as integer arrays instead
    177 c                          of reals in those parts of the code dealing with the combinatorics
    178 c                          of routes.  This is just better coding practice.
    179 c 2015-04-17  Y. Zhu -- Updates to subroutine sub2mem_mer:
    180 c                       1) Subroutine is more robust.  If there is an error in the generation
    181 c                          of vertical velocity rate in the tension-spline interpolation
    182 c                          utility pspl (called in this subroutine), this subroutine (and thus
    183 c                          the program itself) will no longer abort (with either c. code 62,
    184 c                          63 or 64 depending upon which routine inside pspl generated the
    185 c                          error) but will instead revert to the finite difference method for
    186 c                          calculating vertical velocity rate.
    187 c                       2) Previously, halfgate was set to be 30 for the data profiles that
    188 c                          don't have second information in time, but a tighter value of 10
    189 c                          for the data profiles that do have second information in time. Now
    190 c                          halfgate is relaxed to be 30 for the data profiles that do have
    191 c                          complete time information.
    192 c 2016-11-09  C. Hill -----
    193 c                 - Increased the maximum number of flights that can be processed, "MAXFLT",
    194 c                   from 7500 to 12500 to resolve >90% warning.
    195 c 2016-12-09  D. Keyser  --
    196 c                 - Nomenclature change: replaced "MDCRS/ACARS" with just "MDCRS".
    197 c                 - New LATAM AMDARs contain an encrypted flight number (in addition to a tail
    198 c                   number, all other AMDARs have only a tail number which is copied into
    199 c                   flight number). Read this in and use in QC processing.
    200 c                   BENEFIT: Improves track-checking and other QC for LATAM AMDARs.
    201 c                 - Since "ACARS" as referred to in NRL QC kernal (acftobs_qc.f) is not used
    202 c                   there and we earlier decided to use this to provide a separate category
    203 c                   for TAMDARs in the NRL QC kernal (for stratifying statistics), all
    204 c                   printout in acftobs_qc.f changes the term "ACARS" to "TAMDAR".  In
    205 c                   addition, all comments now refer to "TAMDAR" instead of "ACARS".
    206 c                 - Variables holding latitude and longitude data (including arrays "alat" and
    207 c                   "alon" passed between subroutines) now double precision. XOB and YOB in
    208 c                   PREPBUFR file now scaled to 10**5 (was 10**2) to handle new v7 AMDAR and
    209 c                   MDCRS reports which have this higher precision.
    210 c                   BENEFIT: Retains exact precison here. Improves QC processing.
    211 c                      - Note: QC here can be improved further by changing logic in many
    212 c                              places to account for the increased precision. This needs to be
    213 c                              investigated.  For now, locations in code where this seems
    214 c                              possible are noted by the spanning comments:
    215 c                    ! vvvv DAK-future change perhaps to account for incr. lat/lon precision
    216 c                    ! ^^^^ DAK-future change perhaps to account for incr. lat/lon precision
    217 c                      - The format for all print statements containing latitude and longitude
    218 c                        changed to print to 5 decimal places.
    219 c
    220 c Usage:
    221 c   Input files:
    222 c     Unit 05  - Standard input (namelist)
    223 c     Unit 11  - PREPBUFR file containing all obs, prior to any processing by this program
    224 c
    225 c   Output files:
    226 c     Unit 06  - Standard output print
    227 c     Unit 08  - Text file containing full log of all NRL QC information
    228 c     Unit 30  - Text file containing duplicate data check information

Page 5           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    229 c     Unit 31  - Text file containing spike data check information
    230 c     Unit 32  - Text file containing invalid data check information
    231 c     Unit 33  - Text file containing stuck data check information
    232 c     Unit 34  - Text file containing gross check information
    233 c     Unit 35  - Text file containing position check information
    234 c     Unit 36  - Text file containing ordering check information
    235 c     Unit 37  - Text file containing suspect data check information
    236 c     Unit 38  - Text file containing reject list information
    237 c     Unit 41  - Text file containing vertical velocity rate calculation information for QC'd
    238 c                merged aircraft reports written to profiles PREPBUFR-like file
    239 c     Unit 51  - Text file containing sorted listing of all single-level QC'd aircraft
    240 c                reports written back to full PREPBUFR file
    241 c     Unit 52  - Text file containing sorted listing of all QC'd merged aircraft reports
    242 c                written to profiles PREPBUFR-like file
    243 c     Unit 61  - PREPBUFR file identical to input except containing NRLACQC events
    244 c     Unit 62  - PREPBUFR-like file containing merged (mass and wind) profile reports
    245 c                (always) and single(flight)-level reports not part of any profile (when
    246 c                l_prof1lvl=T) with NRLACQC events
    247 c
    248 c   Subprograms called:
    249 c     Unique:    - ACFTOBS_QC        PR_WORKDATA INDEXC             DUPCHEK_QC
    250 c                - REORDER           DO_FLT      DO_REG             INNOV_QC
    251 c                - BENFORD_QC        INVALID_QC  STK_VAL_QC         GRCHEK_QC
    252 c                - POSCHEK_QC        ORDDUP_QC   ORDCHEK_QC         SUSPECT_QC
    253 c                - REJLIST_QC        P2HT_QC     HT2FL_QC           P_DDTG
    254 c                - SPIKE_QC          SLEN        INSTY_OB_FUN       C_INSTY_OB
    255 c                - GCIRC_QC          INDEXC40    INPUT_ACQC         OUTPUT_ACQC_NOPROF
    256 c                - OUTPUT_ACQC_PROF  SUB2MEM_MER SUB2MEM_UM         TRANQCFLAGS
    257 C     LIBRARY:
    258 c       SYSTEM:  - SYSTEM
    259 c       W3NCO:   - ERREXIT    W3TAGB     W3TAGE     W3MOVDAT   MOVA2I     W3FI04
    260 c       W3EMC:   - W3FC05     ORDERS
    261 c       BUFRLIB: - IREADMG    IREADSB    UFBINT     UFBSEQ     UFBEVN     READNS     IBFMS
    262 c                - COPYMG     OPENMB     UFBCPY     WRITSB     WRITLC     CLOSMG     DATELEN
    263 c                - OPENBF     CLOSBF     UFBQCD     SETBMISS   GETBMISS
    264 c                
    265 c   Exit states:
    266 c     Cond =   0 - successful run
    267 c              4 - no aircraft reports of any type read in
    268 c             23 - unexpected return code from readns; problems reading BUFR file
    269 c             31 - indexing problem encountered when trying to match QC'd data in arrays to
    270 c                  mass and wind pieces in original PREPBUFR file (subroutine
    271 c                  output_acqc_noprof)
    272 c             59 - nlvinprof is zero coming into subroutine sub2mem_mer (should never
    273 c                  happen!)
    274 c             61 - index "j is .le. 1 meaning "iord" array underflow (should never happen!)
    275 c                  (subroutine sub2mem_mer)
    276 c             69 - row number for input data matrix is outside range of 1-34 (subroutine
    277 c                  tranQCflags)
    278 c             79 - characters on this machine are not ASCII, conversion of quality flag to
    279 c                  row number in subroutine tranQCflags cannot be made
    280 c             98 - too many flights in input PREPBUFR file, must increase size of parameter
    281 c                  "maxflt" (in some places code continues but in this case can't be sure
    282 c                  continuing on w/o processing any more data would turn out ok)
    283 calloc        99 - unable to allocate one or more array
    284 c
    285 c   Remarks:

Page 6           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    286 c      Input Namelist switches (namelist &nrlacqcinput)):
    287 c            trad           - time window radius in hours for outputting reports (if l_otw=T)
    288 c                             (default=3.0)
    289 c            l_otw          - logical:
    290 c                                 TRUE  - eliminate reports outside the time window radius
    291 c                                         +/- trad when writing out reports
    292 c                                   
    293 c                                 FALSE - DO NOT eliminate reports outside the time window
    294 c                                         radius +/- trad when writing out reports
    295 c                                 (default=FALSE)
    296 c            l_nhonly       - logical:
    297 c                                 TRUE  - eliminate reports outside tropics & N. Hemisphere
    298 c                                         when writing out reports
    299 c                                 FALSE - DO NOT eliminate reports outside tropics & N.
    300 c                                         Hemisphere when writing out reports
    301 c                                 (default=FALSE)
    302 c            l_doprofiles   - logical:
    303 c                                 TRUE  - create merged raob lookalike QC'd profiles from
    304 c                                         aircraft ascents and descents (always) and output
    305 c                                         these as well as QC'd merged single(flight)-level
    306 c                                         aircraft reports not part of any profile (when
    307 c                                         l_prof1lvl=T) to a PREPBUFR-like file
    308 c                                         **CAUTION: Will make code take quite a bit longer
    309 c                                                    to run!
    310 c                                 FALSE - SKIP creation of merged raob lookalike QC'd
    311 c                                         profiles from aircraft ascents and descents into
    312 c                                         PREPBUFR-like file
    313 c                                 (default=FALSE)
    314 c            l_allev_pf     - logical:
    315 c                                 TRUE  - process latest (likely NRLACQC) events plus all
    316 c                                         prior events into profiles PREPBUFR-like file
    317 c                                         **CAUTION: More complete option, but will make code
    318 c                                                    take longer to run!
    319 c                                 FALSE - process ONLY latest (likely NRLACQC) events into
    320 c                                         profiles PREPBUFR-like file
    321 c                                 (Note 1: Hardwired to FALSE if l_doprofiles=FALSE)
    322 c                                 {Note 2: All pre-existing events plus latest (likely
    323 c                                          NRLACQC) events are always encoded into full
    324 c                                          PREPBUFR file}
    325 c                                 (default=FALSE)
    326 c            l_prof1lvl     - logical:
    327 c                                 TRUE  - encode merged single(flight)-level aircraft reports
    328 c                                         with NRLACQC events that are not part of any
    329 c                                         profile into PREPBUFR-like file, along with merged
    330 c                                         profiles from aircraft ascents and descents
    331 c                                         **CAUTION: Will make code take a bit longer to run!
    332 c                                 FALSE - DO NOT encode merged single(flight)-level aircraft
    333 c                                         reports with NRLACQC events that are not part of
    334 c                                         any profile into PREPBUFR-like file
    335 c                                         - only merged profiles from aircraft ascents and
    336 c                                         descents will be encoded into this file
    337 c                                 (Note:  Applicable only when l_doprofiles=TRUE)
    338 c                                 (default=FALSE)
    339 c            l_mandlvl      - logical:
    340 c                                 TRUE  - interpolate obs data to mandatory levels in profile
    341 c                                         generation
    342 c                                 FALSE - DO NOT interpolate obs data to mandatory levels in

Page 7           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    343 c                                         profile generation
    344 c                                 (Note:  Applicable only when l_doprofiles=TRUE)
    345 c                                 (default=TRUE)
    346 c            tsplines       - logical:
    347 c                                 TRUE  - use Jim Purser's tension-spline interpolation
    348 c                                         utility to generate aircraft vertical velocity rate
    349 c                                         in profile generation
    350 c                                 FALSE - use finite-difference method based on nearest
    351 c                                         neighboring pair of obs which are at least one
    352 c                                         minute apart to generate aircraft vertical velocity
    353 c                                         rate in profile generation
    354 c                                 (Note:  Applicable only when l_doprofiles=TRUE)
    355 c                                 (default=TRUE)
    356 c
    357 c Attributes:
    358 c   Language: FORTRAN 90
    359 c   Machine:  NCEP WCOSS
    360 c
    361 c$$$
    362       program prepobs_prepacqc 
    363 
    364       implicit none
    365 
    366 c ------------------------------
    367 c Parameter statements/constants
    368 c ------------------------------
    369       integer    inlun                ! input unit number (for pre-prepacqc PREPBUFR file
    370                                       !  containing all obs)
    371       parameter (inlun = 11)
    372 
    373       integer    outlun               ! output unit number for post-PREPACQC PREPBUFR file
    374                                       !  with added NRLACQC events
    375       parameter (outlun=61)
    376 
    377       integer    proflun              ! output unit number for post-PREPACQC PREPBUFR-like
    378                                       !  file containing merged profile reports (always) and
    379       parameter (proflun=62)
    380 
    381       integer    max_reps             ! maximum number of input merged (mass + wind piece)
    382                                       !  aircraft-type reports allowed
    383       parameter (max_reps = 300000)
    384 
    385 cvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
    386 c replace above with this in event of future switch to dynamic memory allocation
    387 
    388 calloc  integer      max_reps          ! original number of input merged (mass + wind piece)
    389 calloc                                 !  aircraft-type reports (obtained from first pass
    390 calloc                                 !  through input PREPBUFR file to get total for array
    391 calloc                                 !  allocation should = nrpts4QC_pre)
    392 c^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    393 
    394       integer    maxflt               ! maximum number of flights allowed (inside NRL QC)
    395       parameter (maxflt = 12500)
    396       character*6  cmaxflt            ! character form of maxflt
    397 
    398       integer    imiss                ! NRL integer missing value flag
    399       parameter (imiss = 99999)

Page 8           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    400 
    401       real       amiss                ! NRL real missing value flag
    402       parameter (amiss = -9999.)
    403 
    404       real*8     bmiss                ! BUFR missing value
    405       real*8     getbmiss             ! Function to return current bmiss value from BUFRLIB
    406 
    407       real         m2ft               ! NRL conversion factor to convert m to ft
    408 
    409       parameter (m2ft = 3.28084)
    410 
    411 c ----------------------
    412 c Declaration statements
    413 c ----------------------
    414 
    415 c Indices/counters
    416 c ----------------
    417       integer      i,j                ! loop indeces
    418 
    419       integer      nrpts4QC_pre       ! original number of input merged (mass + wind piece)
    420                                       !  aircraft-type reports (read in from PREPBUFR file)
    421                                       !  (after all is said and done, should equal nrpts4QC +
    422                                       !   krej)
    423 
    424       integer      nrpts4QC           ! number of merged (mass + wind piece) reports going
    425                                       !  through NRL QC code  (initially equals nrpts4QC_pre,
    426                                       !  then reduced as processing continues - ultimately
    427                                       !  includes only "good" reports)
    428 
    429       integer      krej               ! number of merged (mass + wind piece) reports
    430                                       !  ulimately rejected by NRL QC code
    431 
    432 c Observation variables required by the NRL aircraft QC routine
    433 c -------------------------------------------------------------
    434       character*10   cdtg_an          ! date-time group for analysis (YYYYMMDDCC)
    435 
    436 
    437       character*11 c_qc(max_reps)     ! character QC flags output from NRL QC code
    438                                       !   1st char - info about reject (if ob was rejected)
    439                                       !   2nd char - reason why time was rejected
    440                                       !   3rd char - reason why latitude was rejected
    441                                       !   4th char - reason why longitude was rejected
    442                                       !   5th char - reason why pressure/atitude was rejected
    443                                       !   6th char - readon why temperature was rejected
    444                                       !   7th char - reason why wind direction was rejected
    445                                       !   8th char - reason why wind speed was rejected
    446                                       !   9th char - reason why mixing ratio was rejected
    447                                       !  10th char - reason for blacklisting the aircraft
    448                                       !  11th char - info about flight phase
    449 
    450       character*25 csort(max_reps)    ! variable (sort key) used for sorting data in NRL QC
    451                                       !  code
    452 
    453       integer      itype(max_reps)     ! instrument (aircraft) type
    454       real*8       alat(max_reps)      ! latitude
    455      +,            alon(max_reps)      ! longitude
    456       real         pres(max_reps)      ! pressure

Page 9           Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    457      +,            ht_ft(max_reps)     ! altitude in feet
    458       integer      idt(max_reps)       ! time in seconds to anal. time (- before, + after)
    459       integer      idp(max_reps)       ! surface pressure change at ob location (not created
    460                                        !  anywhere, set to missing)
    461       integer      ncep_qm_p(max_reps) ! NCEP PREPBUFR quality mark pressure (PQM)
    462      +,            ncep_rc_p(max_reps) ! NCEP PREPBUFR NRLACQC pressure event reason code(PRC)
    463      +,            ncep_qm_z(max_reps) ! NCEP PREPBUFR quality mark on altitude (ZQM)
    464      +,            ncep_rc_z(max_reps) ! NCEP PREPBUFR NRLACQC alt/hght event reason code(ZRC)
    465      +,            ncep_qm_t(max_reps) ! NCEP PREPBUFR quality mark on temperature (TQM)
    466      +,            ncep_rc_t(max_reps) ! NCEP PREPBUFR NRLACQC temperature evnt rea. code(TRC)
    467      +,            ncep_qm_q(max_reps) ! NCEP PREPBUFR quality mark on moisture (QQM)
    468      +,            ncep_rc_q(max_reps) ! NCEP PREPBUFR NRLACQC moisture reason code (QRC)
    469      +,            ncep_qm_w(max_reps) ! NCEP PREPBUFR quality mark on wind (WQM)
    470      +,            ncep_rc_w(max_reps) ! NCEP PREPBUFR NRLACQC wind event reason code (WRC)
    471      +,            ncep_rej(max_reps)  ! NCEP PREPBUFR rejection indicator
    472 
    473       character*14 c_dtg(max_reps)     ! full date-time group (yyyymmddhhmmss)
    474       character*8  c_acftreg(max_reps) ! aircraft registration (tail) number (used in NRL QC
    475                                        !  QC processing)
    476       character*9  c_acftid(max_reps)  ! aircraft flight number (used in NRL QC processing)
    477 
    478       real         t_prcn(max_reps)    ! temperature precision
    479      +,            ob_t(max_reps)      ! temperature
    480      +,            ob_q(max_reps)      ! moisture (specific humidity)
    481      +,            ob_dir(max_reps)    ! wind direction
    482      +,            ob_spd(max_reps)    ! wind speed
    483      +,            xiv_t(max_reps)     ! temperature innovation/increment (ob-bg)
    484      +,            xiv_q(max_reps)     ! specific humidity innovation/increment (ob-bg)
    485      +,            xiv_d(max_reps)     ! wind direction innovation/increment (ob-bg)
    486      +,            xiv_s(max_reps)     ! wind speed innovation/increment (ob-bg)
    487 
    488       integer      ichk_t(max_reps)    ! NRL QC flag for temperature ob
    489      +,            ichk_q(max_reps)    ! NRL QC flag for specific humidity ob
    490      +,            ichk_d(max_reps)    ! NRL QC flag for wind direction ob
    491      +,            ichk_s(max_reps)    ! NRL QC flag for wind speed ob
    492      +,            nchk_t(max_reps)    ! NCEP QC flag for temperature ob
    493      +,            nchk_q(max_reps)    ! NCEP QC flag for specific humidity ob
    494      +,            nchk_d(max_reps)    ! NCEP QC flag for wind direction ob
    495      +,            nchk_s(max_reps)    ! NCEP QC flag for wind speed ob
    496      +,            phase(max_reps)     ! phase of flight for aircraft
    497 
    498       logical      l_minus9c(max_reps) ! true for MDCRS -9C temperatures
    499 
    500 c Pointers
    501 c --------
    502       integer      indx(max_reps)      ! pointer index in NRL QC for good reports
    503      +,            in_bad(max_reps)    ! pointer index in NRL QC for bad reports
    504      +,            isave(max_reps)     ! second pointer index in NRL QC
    505 
    506 c **************************************************
    507 c  All below are output from NRL acftobs_qc routine
    508 c **************************************************
    509 
    510 c Flight statistics
    511 c -----------------
    512       character*8  creg_flt(maxflt)    ! tail number for each flight
    513       character*9  cid_flt(maxflt)     ! flight id for each flight

Page 10          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    514      +,            cid_flt_old(maxflt) ! previous value of cid_flt
    515       integer      nobs_flt(maxflt)    ! number of reports per flight
    516      +,            ntot_flt(maxflt)    ! total number of reports per flight
    517      +,            ntot_flt_old(maxflt)! previous value of total num of reports per flt
    518      +,            nrej_flt(maxflt)    ! number of reports rejected per flight
    519      +,            nrej_flt_old(maxflt)! previous value of num of reports rejected per flt
    520      +,            iobs_flt(maxflt)    ! index for first report in each flight
    521      +,            kflight             ! number of flights in dataset
    522       logical      l_newflt(maxflt)    ! true if flight is new flight
    523 
    524 c Tail number statistics
    525 c ----------------------
    526       character*8  creg_reg(maxflt)    ! tail numbers
    527       integer      nobs_reg(maxflt,5)  ! number of reports per tail number per type
    528      +,            ntot_reg(maxflt,5)  ! total number of reports rejected per tail number
    529      +,            nrej_reg(maxflt,5)  ! number of reports rejected per tail number
    530      +,            ntemp_reg(maxflt,5) ! number of reports with rejected temperature
    531      +,            nwind_reg(maxflt,5) ! number of reports with rejected wind
    532      +,            nwhol_reg(maxflt,5) ! number of reports with temperature in whole degrees
    533 
    534       character*10 creg_reg_tot(maxflt)     ! master list of tail numbers
    535       integer      nobs_reg_tot(maxflt,5)   ! number of reports per tail number
    536      +,            nwhol_reg_tot(maxflt,5)  ! number of temperatures in whole degs/tail number
    537      +,            nrej_reg_tot(maxflt,5)   ! number of reports rejected per tail number
    538      +,            ntemp_reg_tot(maxflt,5)  ! number of temperatures rejected per tail number
    539      +,            nwind_reg_tot(maxflt,5)  ! number of winds rejected per tail number
    540      +,            nrej_inv_tot(maxflt,5)   ! number of reports rejected in subr. invalid
    541      +,            nrej_stk_tot(maxflt,5)   ! number of reports rejected in subr. stkchek
    542      +,            nrej_grc_tot(maxflt,5)   ! number of reports rejected in subr. grchek
    543      +,            nrej_pos_tot(maxflt,5)   ! number of reports rejected in subr. poschek
    544      +,            nrej_ord_tot(maxflt,5)   ! number of reports rejected in subr. ordchek
    545      +,            nrej_sus_tot(maxflt,5)   ! number of reports rejected in suspect data check
    546 
    547       integer      lead_t_tot(maxflt,11,2)  ! distribution of temperature innovations
    548      +,            lead_d_tot(maxflt,11,2)  ! distribution of wind direction innovations
    549      +,            lead_s_tot(maxflt,11,2)  ! distribution of wind speed innovations
    550      +,            n_xiv_t(maxflt,2)        ! number of temperature innovations
    551      +,            n_xiv_d(maxflt,2)        ! number of wind direction innovations
    552      +,            n_xiv_s(maxflt,2)        ! number of wind speed innovations
    553 
    554       real         sum_xiv_t(maxflt,2)      ! sum of temperature innovations
    555      +,            sum_xiv_d(maxflt,2)      ! sum of wind direction innovations
    556      +,            sum_xiv_s(maxflt,2)      ! sum of wind speed innovations
    557      +,            sumabs_xiv_t(maxflt,2)   ! sum of absolute value of temperature innovations
    558      +,            sumabs_xiv_d(maxflt,2)   ! sum of absolute value of wind dir. innovations
    559      +,            sumabs_xiv_s(maxflt,2)   ! sum of absolute value of wind speed innovations
    560 
    561 c **************************************************
    562 
    563 c Variables for sorting data by type, tail, flight, etc., including bad reports - will be
    564 c  used AFTER NRL QC code in the generation of profiles PREPBUFR-like profiles file
    565 c ---------------------------------------------------------------------------------------
    566       integer      iob                      ! loop index
    567      +,            kidt                     ! idt + 100000 (converted to charcter c_idt and
    568                                             !  added to csort_wbad sort key string)
    569      +,            iht_ft                   ! integer of ht_ft (converted to charcter c_ht_ft
    570                                             !  and added to csort_wbad sort key string)

Page 11          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    571      +,            ilon                     ! integer of alon (converted to charcter c_lon
    572                                             !  and added to csort_wbad sort key string)
    573      +,            ilat                     ! integer of alat (converted to charcter c_lat
    574                                             !  and added to csort_wbad sort key string)
    575       character*6  c_lon                    ! character form of ilon (added to csort_wbad
    576                                             !  sort key string)
    577       character*7  c_idt                    ! character form of kidt (added to csort_wbad
    578                                             !  sort key string)
    579       character*5  c_ht_ft                  ! character form of iht_ft (added to csort_wbad
    580                                             !  sort key string)
    581      +,            c_lat                    ! character form of ilat (added to csort_wbad
    582                                             !  sort key string)
    583       character*4  c_type                   ! first 4 characters defining aircraft type
    584                                             !  (added to csort_wbad sort key string)
    585       character*1  c_qc11                   ! value of 11th char in NRL c_qc string,
    586                                             !  specifies whether report is part of an ascent,
    587                                             !  descent, level leg, etc. (added to csort_wbad
    588                                             !  sort key string)
    589       character*16 c_insty_ob               ! function - convers aircraft type to character
    590                                             !  string ((added to csort_wbad sort key string)
    591       character*40 csort_wbad(max_reps)     ! variable (sort key) used to sort data after NRL
    592                                             !  QC code - used in generation of profiles
    593                                             !  PREPBUFR-like profiles file
    594       integer indx_wbad(max_reps)           ! sorted array index (specifies the order in
    595                                             !  which reports should be written to the
    596                                             !  PREPBUFR-like profiles file
    597 c Namelist variables
    598 c ------------------
    599       namelist /nrlacqcinput/ trad,l_otw,l_nhonly,l_doprofiles,
    600      +                        l_allev_pf,l_prof1lvl,l_mandlvl,tsplines
    601 
    602       real trad               ! Time window radius for outputting reports (if l_otw=T)
    603       logical l_otw           ! T=eliminate reports outside the time window radius +/- trad
    604      +,       l_nhonly        ! T=eliminate reports outside tropics & N. Hemisphere
    605      +,       l_doprofiles    ! T=create merged raob lookalike QC'd profiles from aircraft
    606                               !   ascents and descents (always) and output these as well as
    607                               !   QC'd merged single(flight)-level aircraft reports not part
    608                               !   of any profile (when l_prof1lvl=T) to a PREPBUFR-like file
    609                               !   **CAUTION: Will make code take quite a bit longer to run!
    610                               ! F=skip creation of merged raob lookalike QC'd profiles from
    611                               !   aircraft ascents and descents into PREPBUFR-like file
    612      +,       l_allev_pf      ! T=process latest (likely NRLACQC) events plus all prior
    613                               !   events into profiles PREPBUFR-like file
    614                               !   **CAUTION: More complete option, but will make code take
    615                               !              longer to run!
    616                               ! F=process ONLY latest (likely NRLACQC) events into profiles
    617                               !   PREPBUFR-like file
    618                               !
    619                               ! Note 1: Hardwired to F if l_doprofiles=F
    620                               ! Note 2: All pre-existing events plus latest (likely NRLACQC)
    621                               !         events are always encoded into full PREPBUFR file)
    622      +,       l_prof1lvl      ! T=encode merged single(flight)-level aircraft reports with
    623                               !   NRLACQC events that are not part of any profile into
    624                               !   PREPBUFR-like file, along with merged profiles from
    625                               !   aircraft ascents and descents
    626                               !   **CAUTION: Will make code take a bit longer to run!
    627                               ! F=do not encode merged single(flight)-level aircraft reports

Page 12          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    628                               !   with NRLACQC events that are not part of any profile into
    629                               !   PREPBUFR-like file - only merged profiles from aircraft
    630                               !   ascents and descents will be encoded into this file
    631                               ! Note : Applicable only when l_doprofiles=T
    632      +,       l_mandlvl       ! T=interpolate to mandatory levels in profile generation
    633                               ! F=do not interpolate to mandatory levels in profile
    634                               !   generation
    635      +,       tsplines        ! T=use tension-splines for aircraft vertical velocity
    636                               !   calculation
    637                               ! F=use finite-differencing for aircraft vertical velocity
    638                               !   calculation
    639                               ! Note : Applicable only when l_doprofiles=T
    640 
    641 c Variables used to hold original aircraft data read from the input PREPBUFR file - necessary
    642 c  for carrying data through program so that it can be written to output profiles PREPBUFR-
    643 c  like file from memory instead of going back to input PREPBUFR file and re-reading that
    644 c  file before adding any QC events resulting from a decision made by the NRL QC routine (not
    645 c  applicable for case of single-level QC'd reports written back to full PREPBUFR file)
    646 c --------------------------------------------------------------------------------------------
    647       integer      mxnmev             ! maximum number of events allowed in stack
    648       parameter (mxnmev = 15)
    649 
    650       integer      mxlv               ! maximum number of report levels allowed in aircraft
    651                                       !  profiles
    652       parameter(mxlv = 255)
    653 
    654 
    655       integer nevents(max_reps,6)     ! array tracking number of events for variables for
    656                                       !  each report:
    657                                       !   1 - number of pressure events
    658                                       !   2 - number of specific humidity events
    659                                       !   3 - number of temperature events
    660                                       !   4 - number of altitude events
    661                                       !   5 - number of wind (u/v) events
    662                                       !   6 - number of wind (direction/speed) events
    663       integer nnestreps(4,max_reps)   ! number of "nested replications" for TURB3SEQ,
    664                                       !  PREWXSEQ, CLOUDSEQ, AFIC_SEQ
    665 
    666       real*8  pob_ev(max_reps,mxnmev) ! POB values for each report, including all events
    667      +,       pqm_ev(max_reps,mxnmev) ! PQM values for each report, including all events
    668      +,       ppc_ev(max_reps,mxnmev) ! PPC values for each report, including all events
    669      +,       prc_ev(max_reps,mxnmev) ! PRC values for each report, including all events
    670      +,       zob_ev(max_reps,mxnmev) ! ZOB values for each report, including all events
    671      +,       zqm_ev(max_reps,mxnmev) ! ZQM values for each report, including all events
    672      +,       zpc_ev(max_reps,mxnmev) ! ZPC values for each report, including all events
    673      +,       zrc_ev(max_reps,mxnmev) ! ZRC values for each report, including all events
    674      +,       tob_ev(max_reps,mxnmev) ! TOB values for each report, including all events
    675      +,       tqm_ev(max_reps,mxnmev) ! TQM values for each report, including all events
    676      +,       tpc_ev(max_reps,mxnmev) ! TPC values for each report, including all events
    677      +,       trc_ev(max_reps,mxnmev) ! TRC values for each report, including all events
    678      +,       qob_ev(max_reps,mxnmev) ! QOB values for each report, including all events
    679      +,       qqm_ev(max_reps,mxnmev) ! QQM values for each report, including all events
    680      +,       qpc_ev(max_reps,mxnmev) ! QPC values for each report, including all events
    681      +,       qrc_ev(max_reps,mxnmev) ! QRC values for each report, including all events
    682      +,       uob_ev(max_reps,mxnmev) ! UOB values for each report, including all events
    683      +,       vob_ev(max_reps,mxnmev) ! VOB values for each report, including all events
    684      +,       wqm_ev(max_reps,mxnmev) ! WQM values for each report, including all events

Page 13          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    685      +,       wpc_ev(max_reps,mxnmev) ! WPC values for each report, including all events
    686      +,       wrc_ev(max_reps,mxnmev) ! WRC values for each report, including all events
    687      +,       ddo_ev(max_reps,mxnmev) ! DDO values for each report, including all events
    688      +,       ffo_ev(max_reps,mxnmev) ! FFO values for each report, including all events
    689      +,       dfq_ev(max_reps,mxnmev) ! DFQ values for each report, including all events
    690      +,       dfp_ev(max_reps,mxnmev) ! DFP values for each report, including all events
    691      +,       dfr_ev(max_reps,mxnmev) ! DFR values for each report, including all events
    692 
    693      +,       hdr(max_reps,15)        ! SID XOB YOB DHR ELV TYP T29 TSB ITP SQN PROCN RPT
    694                                       !  TCOR RSRD EXRSRD
    695      +,       acid(max_reps)          ! ACID
    696      +,       rct(max_reps)           ! RCT
    697 
    698      +,       pbg(max_reps,3)         ! POE PFC PFCMOD
    699      +,       zbg(max_reps,3)         ! ZOE ZFC ZFCMOD
    700      +,       tbg(max_reps,3)         ! TOE TFC TFCMOD
    701      +,       qbg(max_reps,3)         ! QOE QFC QFCMOD
    702      +,       wbg(max_reps,5)         ! WOE UFC VFC UFCMOD VFCMOD
    703 
    704      +,       ppp(max_reps,3)         ! PAN PCL PCS
    705      +,       zpp(max_reps,3)         ! ZAN ZCL ZCS
    706      +,       tpp(max_reps,3)         ! TAN TCL TCS
    707      +,       qpp(max_reps,3)         ! QAN QCL QCS
    708      +,       wpp(max_reps,6)         ! UAN VAN UCL VCL UCS VCS
    709 
    710      +,       drinfo(max_reps,3)      ! XOB YOB DHR
    711      +,       acft_seq(max_reps,2)    ! PCAT POAF
    712 
    713      +,       turb1seq(max_reps)      ! TRBX
    714      +,       turb2seq(max_reps,4)    ! TRBX10 TRBX21 TRBX32 TRBX43
    715      +,       turb3seq(3,max_reps,5)  ! DGOT HBOT HTOT
    716      +,       prewxseq(1,max_reps,5)  ! PRWE
    717      +,       cloudseq(5,max_reps,5)  ! VSSO CLAM CLTP HOCB HOCT
    718      +,       afic_seq(3,max_reps,5)  ! AFIC HBOI HTOI
    719      +,       mstq(max_reps)          ! MSTQ
    720      +,       cat(max_reps)           ! CAT
    721      +,       rolf(max_reps)          ! ROLF
    722 
    723      +,       sqn(max_reps,2)         ! SQN (1=SQN for mass, 2=SQN for wind)
    724      +,       procn(max_reps,2)       ! PROCN (1=PROCN for mass, 2=PROCN for wind)
    725 
    726 cvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
    727 c add these in place of above declar. in event of future switch to dynamic memory allocation
    728 
    729 calloc  character*11,allocatable :: c_qc(:)
    730 calloc  character*25,allocatable :: csort(:)
    731 calloc  integer,allocatable :: itype(:)
    732 calloc  real*8, allocatable :: alat(:)
    733 calloc  real*8, allocatable :: alon(:)
    734 calloc  real,   allocatable :: pres(:)
    735 calloc  real,   allocatable :: ht_ft(:)
    736 calloc  integer,allocatable :: idt(:)
    737 calloc  integer,allocatable :: idp(:)
    738 calloc  character*14,allocatable :: c_dtg(:)
    739 calloc  character*8, allocatable :: c_acftreg(:)
    740 calloc  character*9, allocatable :: c_acftid(:)
    741 calloc  real,   allocatable :: t_prcn(:)

Page 14          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    742 calloc  real,   allocatable :: ob_t(:)
    743 calloc  real,   allocatable :: ob_q(:)
    744 calloc  real,   allocatable :: ob_dir(:)
    745 calloc  real,   allocatable :: ob_spd(:)
    746 calloc  real,   allocatable :: xiv_t(:)
    747 calloc  real,   allocatable :: xiv_q(:)
    748 calloc  real,   allocatable :: xiv_d(:)
    749 calloc  real,   allocatable :: xiv_s(:)
    750 calloc  integer,allocatable :: ichk_t(:)
    751 calloc  integer,allocatable :: ichk_q(:)
    752 calloc  integer,allocatable :: ichk_d(:)
    753 calloc  integer,allocatable :: ichk_s(:)
    754 calloc  integer,allocatable :: nchk_t(:)
    755 calloc  integer,allocatable :: nchk_q(:)
    756 calloc  integer,allocatable :: nchk_d(:)
    757 calloc  integer,allocatable :: nchk_s(:)
    758 calloc  integer,allocatable :: phase(:)
    759 calloc  logical,allocatable :: l_minus9c(:)
    760 calloc  integer,allocatable :: indx(:)
    761 calloc  integer,allocatable :: in_bad(:)
    762 calloc  integer,allocatable :: isave(:)
    763 calloc  character*40,allocatable :: csort_wbad(:)
    764 calloc  integer,allocatable :: indx_wbad(:)
    765 calloc  integer,allocatable :: nevents(:,:)
    766 calloc  integer,allocatable :: nnestreps(:,:)
    767 calloc  real*8,allocatable :: pob_ev(:,:)
    768 calloc  real*8,allocatable :: pqm_ev(:,:)
    769 calloc  real*8,allocatable :: ppc_ev(:,:)
    770 calloc  real*8,allocatable :: prc_ev(:,:)
    771 calloc  real*8,allocatable :: zob_ev(:,:)
    772 calloc  real*8,allocatable :: zqm_ev(:,:)
    773 calloc  real*8,allocatable :: zpc_ev(:,:)
    774 calloc  real*8,allocatable :: zrc_ev(:,:)
    775 calloc  real*8,allocatable :: tob_ev(:,:)
    776 calloc  real*8,allocatable :: tqm_ev(:,:)
    777 calloc  real*8,allocatable :: tpc_ev(:,:)
    778 calloc  real*8,allocatable :: trc_ev(:,:)
    779 calloc  real*8,allocatable :: qob_ev(:,:)
    780 calloc  real*8,allocatable :: qqm_ev(:,:)
    781 calloc  real*8,allocatable :: qpc_ev(:,:)
    782 CAlloc  real*8,allocatable :: qrc_ev(:,:)
    783 calloc  real*8,allocatable :: uob_ev(:,:)
    784 calloc  real*8,allocatable :: vob_ev(:,:)
    785 calloc  real*8,allocatable :: wqm_ev(:,:)
    786 calloc  real*8,allocatable :: wpc_ev(:,:)
    787 calloc  real*8,allocatable :: wrc_ev(:,:)
    788 calloc  real*8,allocatable :: ddo_ev(:,:)
    789 calloc  real*8,allocatable :: ffo_ev(:,:)
    790 calloc  real*8,allocatable :: dfq_ev(:,:)
    791 calloc  real*8,allocatable :: dfp_ev(:,:)
    792 calloc  real*8,allocatable :: dfr_ev(:,:)
    793 calloc  real*8,allocatable :: hdr(:,:)
    794 calloc  real*8,allocatable :: acid(:)
    795 calloc  real*8,allocatable :: rct(:)
    796 calloc  real*8,allocatable :: pbg(:,:)
    797 calloc  real*8,allocatable :: zbg(:,:)
    798 calloc  real*8,allocatable :: tbg(:,:)

Page 15          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    799 calloc  real*8,allocatable :: qbg(:,:)
    800 calloc  real*8,allocatable :: wbg(:,:)
    801 calloc  real*8,allocatable :: ppp(:,:)
    802 calloc  real*8,allocatable :: zpp(:,:)
    803 calloc  real*8,allocatable :: tpp(:,:)
    804 calloc  real*8,allocatable :: qpp(:,:)
    805 calloc  real*8,allocatable :: wpp(:,:)
    806 calloc  real*8,allocatable :: drinfo(:,:)
    807 calloc  real*8,allocatable :: acft_seq(:,:)
    808 calloc  real*8,allocatable :: turb1seq(:)
    809 calloc  real*8,allocatable :: turb2seq(:,:)
    810 calloc  real*8,allocatable :: turb3seq(:,:,:)
    811 calloc  real*8,allocatable :: prewxseq(:,:,:)
    812 calloc  real*8,allocatable :: cloudseq(:,:,:)
    813 calloc  real*8,allocatable :: afic_seq(:,:,:)
    814 calloc  real*8,allocatable :: mstq(:)
    815 calloc  real*8,allocatable :: cat(:)
    816 calloc  real*8,allocatable :: rolf(:)
    817 calloc  real*8,allocatable :: sqn(:,:)
    818 calloc  real*8,allocatable :: procn(:,:)
    819 
    820 c Variables for reading numeric data out of BUFR files via BUFRLIB
    821 c ----------------------------------------------------------------
    822 calloc  real*8       sqn_8             ! array holding BUFR subset sequence number from
    823 calloc                                 !  BUFRLIB call to input PREPBUFR file
    824 calloc  integer      nlev              ! number of report levels returned from BUFRLIB call
    825 calloc  Integer      iret              ! return code for call to BUFRLIB routine readns
    826 
    827 c Functions
    828 c ---------
    829 calloc  integer      ireadmg           ! for reading messages
    830 callo+,              ireadsb           ! for reading subsets
    831 
    832 
    833 c Variables for BUFRLIB interface
    834 c -------------------------------
    835 calloc  character*8  mesgtype          ! mesgtype of message
    836 calloc  integer      mesgdate          ! date time from BUFR message
    837 
    838 c Variables for determining whether consecutive reports are mass and wind pieces that belong
    839 c  together
    840 c ------------------------------------------------------------------------------------------
    841 calloc  logical l_match
    842 calloc  real sqn_current, sqn_next
    843 
    844 c^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    845 
    846 c Miscellaneous
    847 c -------------
    848       real       nrlacqc_pc              ! PREPBUFR program code for the NRL PREPACQC step
    849 
    850       logical    l_first_date            ! true for first date (used inside NRL QC code)
    851       data       l_first_date /.true./   ! always initialize as T
    852 
    853       logical    l_operational           ! run program in operational mode if true
    854       data       l_operational /.true./  ! will get reset to F within acftobs_qc since
    855                                          !  l_ncep=T; must be set to true here so that the

Page 16          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    856                                          !  first l_operational=F section of the if block in
    857                                          !  acftobs_qc.f will get skipped over
    858                               ! DAK: would code run faster if l_operational=F?, does it give
    859                               !      same answers I wonder ??
    860       logical    l_pc                    ! true if running checkout at NRL (used inside NRL
    861                                          !  QC code)
    862       data       l_pc /.false./          ! always set to F
    863       logical    l_last                  ! true if last time subroutine acftobs_qc is called
    864       data       l_last /.true./         ! DAK: I think this should be set to T
    865       logical    l_ncep                  ! run NRL QC code using NCEP preferences if true
    866       data       l_ncep /.true./         ! always set to T
    867 
    868 c Machine characteristics (obtained from W3FI04)
    869 c ----------------------------------------------
    870       integer    lwr                     ! machine word length in bytes (either 4 or 8)
    871      +,          ichtp                   ! machine charatcer type (either 0 for ASCII or 1
    872                                          !  for EBCDIC)
    873      +,          iendn                   ! machine Endian configuration (either 0 for Big-
    874                                          !  Endian or 1 for Little-Endian)
    875 
    876 c **********************************************************************************
    877 
    878 c Start program
    879 c -------------
    880       call w3tagb('PREPOBS_PREPACQC',2016,344,1927,'NP22')
    881 
    882       write(*,*)
    883       write(*,*) '************************************************'
    884       write(*,*) 'Welcome to PREPOBS_PREPACQC, version 2016-12-09 '
    885       call system('date')
    886       write(*,*) '************************************************'
    887       write(*,*)
    888 
    889 C On WCOSS should always set BUFRLIB missing (BMISS) to 10E8 to avoid overflow when either an
    890 C  INTEGER*4 variable is set to BMISS or a REAL*8 (or REAL*4) variable that is missing is
    891 C  NINT'd
    892 C -------------------------------------------------------------------------------------------
    893 ccccc call setbmiss(10E10_8)
    894       call setbmiss(10E8_8)
    895       bmiss = getbmiss()
    896       print *
    897       print *, 'BUFRLIB value for missing is: ',bmiss
    898       print *
    899 
    900 c Initialize observation arrays
    901 c -----------------------------
    902       c_qc      = '-----------'
    903       idp       = imiss  ! this is not created anywhere (even inside acftobs_qc)
    904 
    905 c Call W3FI04 to determine machine characteristics {word length (bytes), character type
    906 c  (ASCII or EBCDIC), and Endian-type (Big or Little)}
    907 c -------------------------------------------------------------------------------------
    908       call w3fi04(iendn,ichtp,lwr)
    909       print 2213, lwr, ichtp, iendn
    910  2213 format(/' ---> CALL TO W3FI04 RETURNS: LWR = ',I3,', ICHTP = ',i3,
    911      + ', IENDN = ',I3/)
    912 

Page 17          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    913 c......................................................
    914       if(ichtp.ne.0)  then
    915 
    916 C Characters on this machine are not ASCII!! -- stop 79
    917 c -----------------------------------------------------
    918         print 217
    919   217 format(/5x,'++ CHARACTERS ON THIS MACHINE ARE NOT ASCII - STOP ',
    920      + '79'/)
    921         call w3tage('PREPOBS_PREPACQC')
    922         call errexit(79)
    923       endif
    924 c......................................................
    925 
    926 c Read in namelist nrlacqcinput, but set namelist defaults first
    927 c --------------------------------------------------------------
    928       trad         =    3.0
    929       l_otw        = .false.
    930       l_nhonly     = .false.
    931       l_doprofiles = .false.
    932       l_allev_pf   = .false.
    933       l_prof1lvl   = .false.
    934       l_mandlvl    = .true.
    935       tsplines     = .true.
    936 
    937       read(5,nrlacqcinput,end=10)
    938    10 continue
    939       write(6,nrlacqcinput)
    940 
    941       if(.not.l_doprofiles) l_allev_pf = .false. ! l_allev_pf always set to FALSE if profiles
    942                                                  !  are not being generated
    943 
    944       call datelen(10)
    945 
    946 c Open input PREPBUFR file (contains mass and wind reports for all data types, no NRLACQC
    947 c  events on reports in AIRCAR and AIRCFT message types)
    948 c ---------------------------------------------------------------------------------------
    949       call openbf(inlun,'IN',inlun)
    950       print *
    951       print'(" Opened input PREPBUFR file with all data, including ",
    952      +       "pre-NRLACQC aircraft data; unit number ",I0)', inlun
    953       print *
    954 
    955 c Open output PREPBUFR file (will eventually be identical to input PREPBUFR file but with
    956 c  NRLACQC events on reports in AIRCAR and AIRCFT message types)
    957 c ---------------------------------------------------------------------------------------
    958       call openbf(outlun,'OUT',inlun)
    959       print *
    960       print'(" Opened output PREPBUFR file - will hold all data, ",
    961      +       "including post-NRLACQC aircraft data; unit number ",I0)',
    962      +     outlun
    963       print *
    964 
    965       if(l_doprofiles) then
    966 
    967 c Open output PREPBUFR-like file (will eventually contain merged aircraft mass/wind data in
    968 c  AIRCAR and AIRCFT message types, including constructed profiles, with NRLACQC events on
    969 c  reports)

Page 18          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

    970 c -----------------------------------------------------------------------------------------
    971         call openbf(proflun,'OUT',inlun)
    972         print *
    973         print'(" Opened output PREPBUFR-like file - will hold only ",
    974      +         "post-NRLACQC merged aircraft profile data; unit ",
    975      +         "number ",I0)', proflun
    976         print *
    977       endif
    978 
    979 c Get the program code for NRLACQC
    980 c --------------------------------
    981       call ufbqcd(outlun,'NRLACQC',nrlacqc_pc)
    982 
    983       print *
    984       print *, 'NRLACQC PROGRAM CODE IS: ', nrlacqc_pc
    985       print *
    986 
    987 cvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
    988 c add this in event of future switch to dynamic memory allocation
    989 
    990 calloc  CALL SYSTEM('date')
    991 calloc  max_reps = 0
    992 calloc  l_match = .false.
    993 calloc  write(*,*) 'First time through just get count of number of ',
    994 callo+   'merged reports for dynamic array allocation'
    995 calloc  loop1: do while(ireadmg(inlun,mesgtype,mesgdate).eq.0)
    996 calloc    if((mesgtype.eq.'AIRCFT').or.
    997 callo+       (mesgtype.eq.'AIRCAR')) then
    998 calloc      do while(ireadsb(inlun).eq.0)
    999 c4051         continue
   1000 calloc        l_match = .false.
   1001 calloc        if(mesgtype.ne.'AIRCAR' .and. mesgtype.ne. 'AIRCFT')
   1002 callo+         cycle loop1
   1003 c5051         continue
   1004 calloc        max_reps = max_reps + 1
   1005 calloc        call ufbint(inlun,sqn_8,1,1,nlev,'SQN')
   1006 calloc        sqn_current = sqn_8
   1007 c6051         continue
   1008 calloc        if(l_match) then
   1009 calloc          call readns(inlun,mesgtype,mesgdate,iret)
   1010 calloc          if(iret.eq.-1) then
   1011 calloc            exit
   1012 calloc          elseif(iret.eq.0) then
   1013 calloc            go to 4051
   1014 calloc          else
   1015 calloc            print *, 'Unexpected return code(iret=',iret,
   1016 callo+                     ') from readns!'
   1017 calloc            call w3tage('PREPOBS_PREPACQC')
   1018 calloc            call errexit(23) ! Problems reading BUFR file
   1019 calloc          endif
   1020 calloc        endif
   1021 calloc        call readns(inlun,mesgtype,mesgdate,iret)
   1022 calloc        if(iret.eq.-1) then
   1023 calloc          exit
   1024 calloc        elseif(iret.eq.0) then
   1025 calloc          if(mesgtype.ne.'AIRCAR' .and. mesgtype.ne. 'AIRCFT')
   1026 callo+           cycle loop1

Page 19          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1027 calloc          call ufbint(inlun,sqn_8,1,1,nlev,'SQN')
   1028 calloc          sqn_next = sqn_8
   1029 calloc          if(sqn_next.eq.sqn_current) then
   1030 calloc            l_match = .true.
   1031 calloc            go to 6051
   1032 calloc          else
   1033 calloc            l_match = .false.
   1034 calloc            go to 5051
   1035 calloc          endif
   1036 calloc        else
   1037 calloc          print *, 'Unexpected return code(iret=',iret,
   1038 callo+                   ') from readns!'
   1039 calloc          call w3tage('PREPOBS_PREPACQC')
   1040 calloc          call errexit(23) ! Problems reading BUFR file
   1041 calloc        endif
   1042 calloc      enddo
   1043 calloc    endif
   1044 calloc  enddo loop1
   1045 calloc  write(*,*)
   1046 calloc  write(*,*) 'TOTAL NUM OF RPTS IN FIRST READ THROUGH: ',
   1047 callo+   max_reps
   1048 calloc  call closbf(inlun)
   1049 calloc  call openbf(inlun,'IN',inlun)
   1050 calloc  CALL SYSTEM('date')
   1051 calloc  allocate(c_qc(max_reps),stat=i);if(i.ne.0) go to 901
   1052 calloc  allocate(csort(max_reps),stat=i);if(i.ne.0) go to 901
   1053 calloc  allocate(itype(max_reps),stat=i);if(i.ne.0) go to 901
   1054 calloc  allocate(alat(max_reps),stat=i);if(i.ne.0) go to 901
   1055 calloc  allocate(alon(max_reps),stat=i);if(i.ne.0) go to 901
   1056 calloc  allocate(pres(max_reps),stat=i);if(i.ne.0) go to 901
   1057 calloc  allocate(ht_ft(max_reps),stat=i);if(i.ne.0) go to 901
   1058 calloc  allocate(idt(max_reps),stat=i);if(i.ne.0) go to 901
   1059 calloc  allocate(idp(max_reps),stat=i);if(i.ne.0) go to 901
   1060 calloc  allocate(c_dtg(max_reps),stat=i);if(i.ne.0) go to 901
   1061 calloc  allocate(c_acftreg(max_reps),stat=i);if(i.ne.0) go to 901
   1062 calloc  allocate(c_acftid(max_reps),stat=i);if(i.ne.0) go to 901
   1063 calloc  allocate(t_prcn(max_reps),stat=i);if(i.ne.0) go to 901
   1064 calloc  allocate(ob_t(max_reps),stat=i);if(i.ne.0) go to 901
   1065 calloc  allocate(ob_q(max_reps),stat=i);if(i.ne.0) go to 901
   1066 calloc  allocate(ob_dir(max_reps),stat=i);if(i.ne.0) go to 901
   1067 calloc  allocate(ob_spd(max_reps),stat=i);if(i.ne.0) go to 901
   1068 calloc  allocate(xiv_t(max_reps),stat=i);if(i.ne.0) go to 901
   1069 calloc  allocate(xiv_q(max_reps),stat=i);if(i.ne.0) go to 901
   1070 calloc  allocate(xiv_d(max_reps),stat=i);if(i.ne.0) go to 901
   1071 calloc  allocate(xiv_s(max_reps),stat=i);if(i.ne.0) go to 901
   1072 calloc  allocate(ichk_t(max_reps),stat=i);if(i.ne.0) go to 901
   1073 calloc  allocate(ichk_q(max_reps),stat=i);if(i.ne.0) go to 901
   1074 calloc  allocate(ichk_d(max_reps),stat=i);if(i.ne.0) go to 901
   1075 calloc  allocate(ichk_s(max_reps),stat=i);if(i.ne.0) go to 901
   1076 calloc  allocate(nchk_t(max_reps),stat=i);if(i.ne.0) go to 901
   1077 calloc  allocate(nchk_q(max_reps),stat=i);if(i.ne.0) go to 901
   1078 calloc  allocate(nchk_d(max_reps),stat=i);if(i.ne.0) go to 901
   1079 calloc  allocate(nchk_s(max_reps),stat=i);if(i.ne.0) go to 901
   1080 calloc  allocate(phase(max_reps),stat=i);if(i.ne.0) go to 901
   1081 calloc  allocate(l_minus9c(max_reps),stat=i);if(i.ne.0) go to 901
   1082 calloc  allocate(indx(max_reps),stat=i);if(i.ne.0) go to 901
   1083 calloc  allocate(in_bad(max_reps),stat=i);if(i.ne.0) go to 901

Page 20          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1084 calloc  allocate(isave(max_reps),stat=i);if(i.ne.0) go to 901
   1085 calloc  allocate(csort_wbad(max_reps),stat=i);if(i.ne.0) go to 901
   1086 calloc  allocate(indx_wbad(max_reps),stat=i);if(i.ne.0) go to 901
   1087 calloc  allocate(nevents(max_reps,6),stat=i);if(i.ne.0) go to 901
   1088 calloc  allocate(nnestreps(4,max_reps),stat=i);if(i.ne.0) go to 901
   1089 calloc  allocate(pob_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1090 calloc  allocate(pqm_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1091 calloc  allocate(ppc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1092 calloc  allocate(prc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1093 calloc  allocate(zob_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1094 calloc  allocate(zqm_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1095 calloc  allocate(zpc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1096 calloc  allocate(zrc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1097 calloc  allocate(tob_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1098 calloc  allocate(tqm_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1099 calloc  allocate(tpc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1100 calloc  allocate(trc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1101 calloc  allocate(qob_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1102 calloc  allocate(qqm_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1103 calloc  allocate(qpc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1104 calloc  allocate(qrc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1105 calloc  allocate(uob_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1106 calloc  allocate(vob_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1107 calloc  allocate(wqm_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1108 calloc  allocate(wpc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1109 calloc  allocate(wrc_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1110 calloc  allocate(ddo_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1111 calloc  allocate(ffo_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1112 calloc  allocate(dfq_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1113 calloc  allocate(dfp_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1114 calloc  allocate(dfr_ev(max_reps,mxnmev),stat=i);if(i.ne.0) go to 901
   1115 calloc  allocate(hdr(max_reps,15),stat=i);if(i.ne.0) go to 901
   1116 calloc  allocate(acid(max_reps),stat=i);if(i.ne.0) go to 901
   1117 calloc  allocate(rct(max_reps),stat=i);if(i.ne.0) go to 901
   1118 calloc  allocate(pbg(max_reps,3),stat=i);if(i.ne.0) go to 901
   1119 calloc  allocate(zbg(max_reps,3),stat=i);if(i.ne.0) go to 901
   1120 calloc  allocate(tbg(max_reps,3),stat=i);if(i.ne.0) go to 901
   1121 calloc  allocate(qbg(max_reps,3),stat=i);if(i.ne.0) go to 901
   1122 calloc  allocate(wbg(max_reps,5),stat=i);if(i.ne.0) go to 901
   1123 calloc  allocate(ppp(max_reps,3),stat=i);if(i.ne.0) go to 901
   1124 calloc  allocate(zpp(max_reps,3),stat=i);if(i.ne.0) go to 901
   1125 calloc  allocate(tpp(max_reps,3),stat=i);if(i.ne.0) go to 901
   1126 calloc  allocate(qpp(max_reps,3),stat=i);if(i.ne.0) go to 901
   1127 calloc  allocate(wpp(max_reps,6),stat=i);if(i.ne.0) go to 901
   1128 calloc  allocate(drinfo(max_reps,3),stat=i);if(i.ne.0) go to 901
   1129 calloc  allocate(acft_seq(max_reps,2),stat=i);if(i.ne.0) go to 901
   1130 calloc  allocate(turb1seq(max_reps),stat=i);if(i.ne.0) go to 901
   1131 calloc  allocate(turb2seq(max_reps,4),stat=i);if(i.ne.0) go to 901
   1132 calloc  allocate(turb3seq(3,max_reps,5),stat=i);if(i.ne.0) go to 901
   1133 calloc  allocate(prewxseq(1,max_reps,5),stat=i);if(i.ne.0) go to 901
   1134 calloc  allocate(cloudseq(5,max_reps,5),stat=i);if(i.ne.0) go to 901
   1135 calloc  allocate(afic_seq(3,max_reps,5),stat=i);if(i.ne.0) go to 901
   1136 calloc  allocate(mstq(max_reps),stat=i);if(i.ne.0) go to 901
   1137 calloc  allocate(cat(max_reps),stat=i);if(i.ne.0) go to 901
   1138 calloc  allocate(rolf(max_reps),stat=i);if(i.ne.0) go to 901
   1139 calloc  allocate(sqn(max_reps,2),stat=i);if(i.ne.0) go to 901
   1140 calloc  allocate(procn(max_reps,2),stat=i);if(i.ne.0) go to 901

Page 21          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1141 c^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   1142 
   1143 c Call input routine input_acqc to read the input PREPBUFR file, merge the mass and wind
   1144 c  pieces, translate some values to NRL standards and store in memory (arrays)
   1145 c --------------------------------------------------------------------------------------
   1146       write(*,*)
   1147       write(*,*) 'Calling input_acqc....'
   1148       write(*,*)
   1149 
   1150       call input_acqc(inlun,max_reps,mxnmev,bmiss,imiss,amiss,m2ft,mxlv,
   1151      +                nrpts4QC_pre,cdtg_an,alat,alon,ht_ft,idt,c_dtg,
   1152      +                itype,phase,t_prcn,c_acftreg,c_acftid,
   1153      +                pres,ob_t,ob_q,ob_dir,ob_spd,
   1154      +                ichk_t,ichk_q,ichk_d,ichk_s,
   1155      +                nchk_t,nchk_q,nchk_d,nchk_s,
   1156      +                xiv_t,xiv_q,xiv_d,xiv_s,l_minus9C,nevents,
   1157      +                hdr,acid,rct,drinfo,acft_seq,turb1seq,turb2seq,
   1158      +                turb3seq,prewxseq,cloudseq,afic_seq,mstq,cat,rolf,
   1159      +                nnestreps,sqn,procn,
   1160      +                pob_ev,pqm_ev,ppc_ev,prc_ev,pbg,ppp,
   1161      +                zob_ev,zqm_ev,zpc_ev,zrc_ev,zbg,zpp,
   1162      +                tob_ev,tqm_ev,tpc_ev,trc_ev,tbg,tpp,
   1163      +                qob_ev,qqm_ev,qpc_ev,qrc_ev,qbg,qpp,
   1164      +                uob_ev,vob_ev,wqm_ev,wpc_ev,wrc_ev,wbg,wpp,
   1165      +                ddo_ev,ffo_ev,dfq_ev,dfp_ev,dfr_ev,l_allev_pf)
   1166 
   1167 c Close input PREPBUFR file
   1168 c -------------------------
   1169       call closbf(inlun)
   1170       print *
   1171       print'(" Closed input PREPBUFR file with all data, including ",
   1172      +       "pre-NRLACQC aircraft data; unit number ",I0)', inlun
   1173       print *
   1174 
   1175       write(*,*)
   1176       write(*,*) 'Back from input_acqc....'
   1177       write(*,'(" There are ",I0," merged reports for acftobs_qc (NRL ",
   1178      +          "aircraft data QC routine).")') nrpts4QC_pre
   1179       write(*,*)
   1180 
   1181       if(nrpts4QC_pre.gt.0) then
   1182 
   1183 c Now that we are done reading in data from the input PREPBUFR file, need to call acftobs_qc
   1184 c  (actual NRL aircraft QC code)
   1185 c ------------------------------------------------------------------------------------------
   1186       write(*,*) 'Passing ',nrpts4QC_pre,'obs to acftobs_qc.f...'
   1187       write(*,*)
   1188       write(*,*) 'Calling acftobs_qc...'
   1189 
   1190 c NRPTS4QC_PRE is returned from input_acqc and represents the original number of "merged"
   1191 c  reports (mass and wind pieces put together) read in from the PREPBUFR file - we need to
   1192 c  save this value now as it will be used later (e.g., to correctly match the QC decisions
   1193 c  made by acftobs_qc to the reports originally in the input PREPBUFR file) - we will set
   1194 c  NRPTS4qc to NRPTS4QC_PRE at this point and then pass NRPTS4QC into acftobs_qc - the value
   1195 c  for NRPTS4Qc gets reduced in the various subroutines in acftobs_qc as it only represents
   1196 c  the number of "good" reports coming out of each subroutine
   1197 c-------------------------------------------------------------------------------------------  

Page 22          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1198       nrpts4QC = nrpts4QC_pre
   1199 
   1200       call acftobs_qc(max_reps,cdtg_an,nrpts4QC,krej,c_acftreg,c_acftid,


ENTRY POINTS

  Name              
                    
 MAIN__             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 10                         Label  938                                                            937                               
 108                        Label  1649                                                           1648                              
 153                        Label  1223                                                           1222                              
 217                        Label  919                                                            918                               
 2213                       Label  910                                                            909                               
 3001                       Label  1587                                                           1586                              
 34                         Label  1233                                                           1218                              
 8001                       Label  1622                                                           1602                              
 8073                       Label  1271                                                           1265,1285,1321,1341               
 99                         Label  1221                                                           1216                              
 ABS                        Func   1318                                 scalar                    1318,1338                         
 ACFTOBS_QC                 Subr   1200                                                           1200                              
 ACFT_SEQ                   Local  711      R(8)            8     2     600000                    1157,1433                         
 ACID                       Local  695      R(8)            8     1     300000                    1157,1432                         
 AFIC_SEQ                   Local  718      R(8)            8     3     4500000                   1158                              
 ALAT                       Local  454      R(8)            8     1     300000                    1151,1201,1266,1286,1314,1317,1322
                                                                                                  ,1342,1430,1497,1603              
 ALON                       Local  455      R(8)            8     1     300000                    1151,1201,1266,1286,1322,1334,1337
                                                                                                  ,1342,1430,1497,1603              
 AMISS                      Param  401      R(4)            4           scalar                    1150,1278,1314,1334               
 BMISS                      Local  404      R(8)            8           scalar                    895,897,1150,1430,1496            
 CAT                        Local  720      R(8)            8     1     300000                    1158,1433                         
 CDTG_AN                    Local  434      CHAR            10          scalar                    1151,1200,1430                    
 CID_FLT                    Local  513      CHAR            9     1     12500                     1205                              
 CID_FLT_OLD                Local  514      CHAR            9     1     12500                     1205                              
 CLOSBF                     Subr   1169                                                           1169,1456,1517,1525               
 CLOUDSEQ                   Local  717      R(8)            8     3     7500000                   1158                              
 CMAXFLT                    Local  396      CHAR            6           scalar                    1226,1228,1230                    
 CREG_FLT                   Local  512      CHAR            8     1     12500                     1205                              
 CREG_REG                   Local  526      CHAR            8     1     12500                     1207                              
 CREG_REG_TOT               Local  534      CHAR            10    1     12500                     1208                              
 CSORT                      Local  450      CHAR            25    1     300000                    1204                              
 CSORT_WBAD                 Local  591      CHAR            40    1     300000                    1249,1402,1418,1605               
 C_ACFTID                   Local  476      CHAR            9     1     300000                    1152,1200,1266,1286,1322,1342,1404
                                                                                                  ,1432,1602                        
 C_ACFTREG                  Local  474      CHAR            8     1     300000                    1152,1200,1265,1285,1321,1341,1403
                                                                                                  ,1431,1602                        
 C_DTG                      Local  473      CHAR            14    1     300000                    1151                              
 C_HT_FT                    Local  579      CHAR            5           scalar                    1279,1307,1309,1408               
 C_IDT                      Local  577      CHAR            7           scalar                    1276,1407                         
 C_INSTY_OB                 Func   589      CHAR            16          scalar                    1265,1285,1321,1341,1355          

Page 23          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07 Symbol Table                    prepacqc.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 C_LAT                      Local  581      CHAR            5           scalar                    1315,1331,1410                    
 C_LON                      Local  575      CHAR            6           scalar                    1335,1351,1411                    
 C_QC                       Local  437      CHAR            11    1     300000                    902,1204,1303,1391,1393,1396,1430,
                                                                                                  1497,1605                         
 C_QC11                     Local  585      CHAR            1           scalar                    1392,1394,1396,1402               
 C_TYPE                     Local  583      CHAR            4           scalar                    1355,1402                         
 DATELEN                    Subr   944                                                            944                               
 DDO_EV                     Local  687      R(8)            8     2     4500000                   1165,1440                         
 DFP_EV                     Local  690      R(8)            8     2     4500000                   1165,1440                         
 DFQ_EV                     Local  689      R(8)            8     2     4500000                   1165,1440                         
 DFR_EV                     Local  691      R(8)            8     2     4500000                   1165,1440                         
 DRINFO                     Local  710      R(8)            8     2     900000                    1157,1432                         
 ERREXIT                    Subr   922                                                            922,1651                          
 FFO_EV                     Local  688      R(8)            8     2     4500000                   1165,1440                         
 GETBMISS                   Func   405      R(8)            8           scalar                    895                               
 HDR                        Local  693      R(8)            8     2     4500000                   1157,1432                         
 HT_FT                      Local  457      R(4)            4     1     300000                    1151,1201,1267,1278,1281,1287,1323
                                                                                                  ,1343,1430,1497,1603              
 I                          Local  417      I(4)            4           scalar                    1248,1249,1250,1598,1599          
 ICHK_D                     Local  490      I(4)            4     1     300000                    1154,1203,1269,1290,1326,1346,1605
 ICHK_Q                     Local  489      I(4)            4     1     300000                    1154,1203,1269,1289,1325,1345,1604
 ICHK_S                     Local  491      I(4)            4     1     300000                    1154,1203,1270,1291,1327,1347,1604
 ICHK_T                     Local  488      I(4)            4     1     300000                    1154,1203,1268,1288,1324,1344,1604
 ICHTP                      Local  871      I(4)            4           scalar                    908,909,914                       
 IDP                        Local  459      I(4)            4     1     300000                    903,1201,1270,1291,1327,1347      
 IDT                        Local  458      I(4)            4     1     300000                    1151,1201,1260,1266,1286,1322,1342
                                                                                                  ,1430,1497,1603                   
 IENDN                      Local  873      I(4)            4           scalar                    908,909                           
 IHT_FT                     Local  569      I(4)            4           scalar                    1281,1282,1284,1293,1304,1306,1307
                                                                                                  ,1309                             
 ILAT                       Local  573      I(4)            4           scalar                    1317,1318,1320,1329,1331          
 ILON                       Local  571      I(4)            4           scalar                    1337,1338,1340,1349,1351          
 IMISS                      Param  398      I(4)            4           scalar                    903,1150                          
 INDEXC40                   Subr   1418                                                           1418                              
 INDX                       Local  502      I(4)            4     1     300000                    1204                              
 INDX_WBAD                  Local  594      I(4)            4     1     300000                    1250,1418,1431,1599               
 INLUN                      Param  369      I(4)            4           scalar                    949,952,958,971,1150,1169,1172,147
                                                                                                  1,1475,1496,1517,1520             
 INPUT_ACQC                 Subr   1150                                                           1150                              
 IN_BAD                     Local  503      I(4)            4     1     300000                    1204                              
 IOB                        Local  566      I(4)            4           scalar                    1258,1260,1265,1266,1267,1268,1269
                                                                                                  ,1270,1278,1281,1285,1286,1287,128
                                                                                                  8,1289,1290,1291,1303,1314,1317,13
                                                                                                  21,1322,1323,1324,1325,1326,1327,1
                                                                                                  334,1337,1341,1342,1343,1344,1345,
                                                                                                  1346,1347,1355,1391,1393,1396,1402
                                                                                                  ,1403,1404                        
 IOBS_FLT                   Local  520      I(4)            4     1     12500                     1206                              
 ISAVE                      Local  504      I(4)            4     1     300000                    1204                              
 ITYPE                      Local  453      I(4)            4     1     300000                    1152,1201,1265,1285,1321,1341,1355
                                                                                                  ,1602                             
 J                          Local  417      I(4)            4           scalar                    1599,1601,1602,1603,1604,1605,1606
                                                                                                  ,1607,1608                        
 KFLIGHT                    Local  521      I(4)            4           scalar                    1205                              
 KIDT                       Local  567      I(4)            4           scalar                    1260,1261,1263,1274,1276          

Page 24          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07 Symbol Table                    prepacqc.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 KREJ                       Local  429      I(4)            4           scalar                    1200,1237                         
 LEAD_D_TOT                 Local  548      I(4)            4     3     275000                    1212                              
 LEAD_S_TOT                 Local  549      I(4)            4     3     275000                    1213                              
 LEAD_T_TOT                 Local  547      I(4)            4     3     275000                    1212                              
 LWR                        Local  870      I(4)            4           scalar                    908,909,1443                      
 L_ALLEV_PF                 Local  612      L(4)            4           scalar                    600,932,941,1165,1441             
 L_DOPROFILES               Local  605      L(4)            4           scalar                    599,931,941,965,1420              
 L_FIRST_DATE               Local  850      L(4)            4           scalar                    851,1215                          
 L_LAST                     Local  863      L(4)            4           scalar                    864,1215                          
 L_MANDLVL                  Local  632      L(4)            4           scalar                    600,934,1442                      
 L_MINUS9C                  Local  498      L(4)            4     1     300000                    1156,1215                         
 L_NCEP                     Local  865      L(4)            4           scalar                    866,1216                          
 L_NEWFLT                   Local  522      L(4)            4     1     12500                     1205                              
 L_NHONLY                   Local  604      L(4)            4           scalar                    599,930,1431,1498                 
 L_OPERATIONAL              Local  853      L(4)            4           scalar                    854,1216,1443,1532                
 L_OTW                      Local  603      L(4)            4           scalar                    599,929,1431,1497                 
 L_PC                       Local  860      L(4)            4           scalar                    862,1216                          
 L_PROF1LVL                 Local  622      L(4)            4           scalar                    600,933,1441                      
 M2FT                       Param  407      R(4)            4           scalar                    1150                              
 MAXFLT                     Param  394      I(4)            4           scalar                    512,513,514,515,516,517,518,519,52
                                                                                                  0,522,526,527,528,529,530,531,532,
                                                                                                  534,535,536,537,538,539,540,541,54
                                                                                                  2,543,544,545,547,548,549,550,551,
                                                                                                  552,554,555,556,557,558,559,1204,1
                                                                                                  222,1226                          
 MAX_REPS                   Param  381      I(4)            4           scalar                    437,450,453,454,455,456,457,458,45
                                                                                                  9,461,462,463,464,465,466,467,468,
                                                                                                  469,470,471,473,474,476,478,479,48
                                                                                                  0,481,482,483,484,485,486,488,489,
                                                                                                  490,491,492,493,494,495,496,498,50
                                                                                                  2,503,504,591,594,655,663,666,667,
                                                                                                  668,669,670,671,672,673,674,675,67
                                                                                                  6,677,678,679,680,681,682,683,684,
                                                                                                  685,686,687,688,689,690,691,693,69
                                                                                                  5,696,698,699,700,701,702,704,705,
                                                                                                  706,707,708,710,711,713,714,715,71
                                                                                                  6,717,718,719,720,721,723,724,1150
                                                                                                  ,1200,1248,1429,1496,1544         
 MSTQ                       Local  719      R(8)            8     1     300000                    1158,1433                         
 MXLV                       Param  650      I(4)            4           scalar                    1150,1429                         
 MXNMEV                     Param  647      I(4)            4           scalar                    666,667,668,669,670,671,672,673,67
                                                                                                  4,675,676,677,678,679,680,681,682,
                                                                                                  683,684,685,686,687,688,689,690,69
                                                                                                  1,1150,1429                       
 NCEP_QM_P                  Local  461      I(4)            4     1     300000                    1481,1499,1606                    
 NCEP_QM_Q                  Local  467      I(4)            4     1     300000                    1487,1502,1606                    
 NCEP_QM_T                  Local  465      I(4)            4     1     300000                    1485,1501,1606                    
 NCEP_QM_W                  Local  469      I(4)            4     1     300000                    1489,1503,1607                    
 NCEP_QM_Z                  Local  463      I(4)            4     1     300000                    1483,1500,1606                    
 NCEP_RC_P                  Local  462      I(4)            4     1     300000                    1482,1499,1607                    
 NCEP_RC_Q                  Local  468      I(4)            4     1     300000                    1488,1502,1608                    
 NCEP_RC_T                  Local  466      I(4)            4     1     300000                    1486,1501,1607                    
 NCEP_RC_W                  Local  470      I(4)            4     1     300000                    1490,1503,1608                    
 NCEP_RC_Z                  Local  464      I(4)            4     1     300000                    1484,1500,1607                    
 NCEP_REJ                   Local  471      I(4)            4     1     300000                    1491,1504,1601                    

Page 25          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07 Symbol Table                    prepacqc.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 NCHK_D                     Local  494      I(4)            4     1     300000                    1155,1203                         
 NCHK_Q                     Local  493      I(4)            4     1     300000                    1155,1203                         
 NCHK_S                     Local  495      I(4)            4     1     300000                    1155,1204                         
 NCHK_T                     Local  492      I(4)            4     1     300000                    1155,1203                         
 NEVENTS                    Local  655      I(4)            4     2     1800000                   1156,1432                         
 NINT                       Func   1281                                 scalar                    1281,1317,1337,1603,1605          
 NNESTREPS                  Local  663      I(4)            4     2     1200000                   1159                              
 NOBS_FLT                   Local  515      I(4)            4     1     12500                     1206                              
 NOBS_REG                   Local  527      I(4)            4     2     62500                     1207                              
 NOBS_REG_TOT               Local  535      I(4)            4     2     62500                     1209                              
 NREJ_FLT                   Local  518      I(4)            4     1     12500                     1206                              
 NREJ_FLT_OLD               Local  519      I(4)            4     1     12500                     1207                              
 NREJ_GRC_TOT               Local  542      I(4)            4     2     62500                     1211                              
 NREJ_INV_TOT               Local  540      I(4)            4     2     62500                     1210                              
 NREJ_ORD_TOT               Local  544      I(4)            4     2     62500                     1212                              
 NREJ_POS_TOT               Local  543      I(4)            4     2     62500                     1211                              
 NREJ_REG                   Local  529      I(4)            4     2     62500                     1207                              
 NREJ_REG_TOT               Local  537      I(4)            4     2     62500                     1209                              
 NREJ_STK_TOT               Local  541      I(4)            4     2     62500                     1211                              
 NREJ_SUS_TOT               Local  545      I(4)            4     2     62500                     1212                              
 NRLACQCINPUT               Local  599                                  scalar                    937,939                           
 NRLACQC_PC                 Local  848      R(4)            4           scalar                    981,984,1441,1504                 
 NRPTS4QC                   Local  424      I(4)            4           scalar                    1198,1200,1237                    
 NRPTS4QC_PRE               Local  419      I(4)            4           scalar                    1151,1178,1181,1186,1198,1237,1258
                                                                                                  ,1418,1429,1496,1544,1598         
 NTEMP_REG                  Local  530      I(4)            4     2     62500                     1208                              
 NTEMP_REG_TOT              Local  538      I(4)            4     2     62500                     1210                              
 NTOT_FLT                   Local  516      I(4)            4     1     12500                     1206                              
 NTOT_FLT_OLD               Local  517      I(4)            4     1     12500                     1206                              
 NTOT_REG                   Local  528      I(4)            4     2     62500                     1207                              
 NWHOL_REG                  Local  532      I(4)            4     2     62500                     1208                              
 NWHOL_REG_TOT              Local  536      I(4)            4     2     62500                     1209                              
 NWIND_REG                  Local  531      I(4)            4     2     62500                     1208                              
 NWIND_REG_TOT              Local  539      I(4)            4     2     62500                     1210                              
 N_XIV_D                    Local  551      I(4)            4     2     25000                     1213                              
 N_XIV_S                    Local  552      I(4)            4     2     25000                     1213                              
 N_XIV_T                    Local  550      I(4)            4     2     25000                     1213                              
 OB_DIR                     Local  481      R(4)            4     1     300000                    1153,1202,1269,1289,1325,1345,1605
 OB_Q                       Local  480      R(4)            4     1     300000                    1153,1201,1268,1288,1324,1344,1604
 OB_SPD                     Local  482      R(4)            4     1     300000                    1153,1202,1270,1290,1326,1346,1604
 OB_T                       Local  479      R(4)            4     1     300000                    1153,1201,1267,1287,1323,1343,1432
                                                                                                  ,1604                             
 OPENBF                     Subr   949                                                            949,958,971,1471                  
 OUTLUN                     Param  373      I(4)            4           scalar                    958,962,981,1496,1525,1529        
 OUTPUT_ACQC_NOPROF         Subr   1496                                                           1496                              
 OUTPUT_ACQC_PROF           Subr   1429                                                           1429                              
 PBG                        Local  698      R(8)            8     2     900000                    1160,1434                         
 PHASE                      Local  496      I(4)            4     1     300000                    1152,1603                         
 POB_EV                     Local  666      R(8)            8     2     4500000                   1160,1434                         
 PPC_EV                     Local  668      R(8)            8     2     4500000                   1160,1434                         
 PPP                        Local  704      R(8)            8     2     900000                    1160,1434                         
 PQM_EV                     Local  667      R(8)            8     2     4500000                   1160,1434                         
 PRC_EV                     Local  669      R(8)            8     2     4500000                   1160,1434                         
 PREPOBS_PREPACQC           Prog   362                                                                                              
 PRES                       Local  456      R(4)            4     1     300000                    1153,1201,1267,1287,1323,1343,1603

Page 26          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07 Symbol Table                    prepacqc.f

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 PREWXSEQ                   Local  716      R(8)            8     3     1500000                   1158                              
 PROCN                      Local  724      R(8)            8     2     600000                    1159                              
 PROFLUN                    Param  377      I(4)            4           scalar                    971,975,1429,1456,1460            
 QBG                        Local  701      R(8)            8     2     900000                    1163,1437                         
 QOB_EV                     Local  678      R(8)            8     2     4500000                   1163,1437                         
 QPC_EV                     Local  680      R(8)            8     2     4500000                   1163,1437                         
 QPP                        Local  707      R(8)            8     2     900000                    1163,1437                         
 QQM_EV                     Local  679      R(8)            8     2     4500000                   1163,1437                         
 QRC_EV                     Local  681      R(8)            8     2     4500000                   1163,1437                         
 RCT                        Local  696      R(8)            8     1     300000                    1157,1432                         
 ROLF                       Local  721      R(8)            8     1     300000                    1158                              
 SETBMISS                   Subr   894                                                            894                               
 SQN                        Local  723      R(8)            8     2     600000                    1159                              
 SUMABS_XIV_D               Local  558      R(4)            4     2     25000                     1214                              
 SUMABS_XIV_S               Local  559      R(4)            4     2     25000                     1215                              
 SUMABS_XIV_T               Local  557      R(4)            4     2     25000                     1214                              
 SUM_XIV_D                  Local  555      R(4)            4     2     25000                     1214                              
 SUM_XIV_S                  Local  556      R(4)            4     2     25000                     1214                              
 SUM_XIV_T                  Local  554      R(4)            4     2     25000                     1213                              
 SYSTEM                     Subr   885                                                            885,1227,1638                     
 TBG                        Local  700      R(8)            8     2     900000                    1162,1436                         
 TOB_EV                     Local  674      R(8)            8     2     4500000                   1162,1436                         
 TPC_EV                     Local  676      R(8)            8     2     4500000                   1162,1436                         
 TPP                        Local  706      R(8)            8     2     900000                    1162,1436                         
 TQM_EV                     Local  675      R(8)            8     2     4500000                   1162,1436                         
 TRAD                       Local  602      R(4)            4           scalar                    599,928,1431,1497                 
 TRC_EV                     Local  677      R(8)            8     2     4500000                   1162,1436                         
 TSPLINES                   Local  635      L(4)            4           scalar                    600,935,1442                      
 TURB1SEQ                   Local  713      R(8)            8     1     300000                    1157                              
 TURB2SEQ                   Local  714      R(8)            8     2     1200000                   1157                              
 TURB3SEQ                   Local  715      R(8)            8     3     4500000                   1158                              
 T_PRCN                     Local  478      R(4)            4     1     300000                    1152,1202,1267,1287,1323,1343,1605
 UFBQCD                     Subr   981                                                            981                               
 UOB_EV                     Local  682      R(8)            8     2     4500000                   1164,1438                         
 VOB_EV                     Local  683      R(8)            8     2     4500000                   1164,1438                         
 W3FI04                     Subr   908                                                            908                               
 W3TAGB                     Subr   880                                                            880                               
 W3TAGE                     Subr   921                                                            921,1641                          
 WBG                        Local  702      R(8)            8     2     1500000                   1164,1439                         
 WPC_EV                     Local  685      R(8)            8     2     4500000                   1164,1438                         
 WPP                        Local  708      R(8)            8     2     1800000                   1164,1439                         
 WQM_EV                     Local  684      R(8)            8     2     4500000                   1164,1438                         
 WRC_EV                     Local  686      R(8)            8     2     4500000                   1164,1438                         
 XIV_D                      Local  485      R(4)            4     1     300000                    1156,1202,1269,1289,1325,1345     
 XIV_Q                      Local  484      R(4)            4     1     300000                    1156,1202,1268,1288,1324,1344     
 XIV_S                      Local  486      R(4)            4     1     300000                    1156,1202,1270,1290,1326,1346     
 XIV_T                      Local  483      R(4)            4     1     300000                    1156,1202,1268,1288,1324,1344     
 ZBG                        Local  699      R(8)            8     2     900000                    1161,1435                         
 ZOB_EV                     Local  670      R(8)            8     2     4500000                   1161,1435                         
 ZPC_EV                     Local  672      R(8)            8     2     4500000                   1161,1435                         
 ZPP                        Local  705      R(8)            8     2     900000                    1161,1435                         
 ZQM_EV                     Local  671      R(8)            8     2     4500000                   1161,1435                         
 ZRC_EV                     Local  673      R(8)            8     2     4500000                   1161,1435                         

Page 27          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1201      +                itype,idt,idp,alon,alat,pres,ht_ft,ob_t,ob_q,
   1202      +                ob_dir,ob_spd,t_prcn,xiv_t,xiv_q,xiv_d,xiv_s,
   1203      +                ichk_t,ichk_q,ichk_d,ichk_s,nchk_t,nchk_q,nchk_d,
   1204      +                nchk_s,indx,isave,in_bad,c_qc,csort,maxflt,
   1205      +                kflight,creg_flt,cid_flt,cid_flt_old,l_newflt,
   1206      +                nobs_flt,iobs_flt,ntot_flt,nrej_flt,ntot_flt_old,
   1207      +                nrej_flt_old,creg_reg,nobs_reg,ntot_reg,nrej_reg,
   1208      +                ntemp_reg,nwind_reg,nwhol_reg,creg_reg_tot,
   1209      +                nobs_reg_tot,nwhol_reg_tot,nrej_reg_tot,
   1210      +                ntemp_reg_tot,nwind_reg_tot,nrej_inv_tot,
   1211      +                nrej_stk_tot,nrej_grc_tot,nrej_pos_tot,
   1212      +                nrej_ord_tot,nrej_sus_tot,lead_t_tot,lead_d_tot,
   1213      +                lead_s_tot,n_xiv_t,n_xiv_d,n_xiv_s,sum_xiv_t,
   1214      +                sum_xiv_d,sum_xiv_s,sumabs_xiv_t,sumabs_xiv_d,
   1215      +                sumabs_xiv_s,l_minus9c,l_last,l_first_date,
   1216      +                l_operational,l_pc,l_ncep,*99)
   1217 
   1218       go to 34
   1219 
   1220 c-----------------------------------
   1221    99 continue  ! return 1 out of subr. acftobs_qc comes here - keep going but post message
   1222       print 153, maxflt,maxflt
   1223   153 format(/' #####> WARNING: THERE ARE MORE THAN ',I6,' AIRCRAFT ',
   1224      + '"FLIGHTS" IN INPUT FILE -- MUST INCREASE SIZE OF PARAMETER ',
   1225      +'NAME "MAXFLT" - WILL CONTINUE ON PROCESSING ONLY ',I6,' FLTS-0'/)
   1226       write(cmaxflt,'(i6)') maxflt
   1227       call system('[ -n "$jlogfile" ] && $DATA/postmsg'//
   1228      + ' "$jlogfile" "***WARNING:'//cmaxflt//' AIRCRAFT "FLIGHT" '//
   1229      + 'LIMIT EXCEEDED IN PREPOBS_PREPACQC, ONLY '//
   1230      + cmaxflt//' FLIGHTS PROCESSED-0"')
   1231 c-----------------------------------
   1232 
   1233    34 continue
   1234 
   1235       write(*,'(" After running acftobs_qc, there are ",I0," good ",
   1236      +          "reports, ",I0," bad reports (total rpts = ",I0,")")')
   1237      +        nrpts4QC,krej,nrpts4QC_pre
   1238       write(*,*)
   1239       write(*,*)
   1240 
   1241 c Sort reports (including bad ones) into profiles (sort logic and sort key construction
   1242 c  borrowed from acftobs_qc) (note this is done even if l_doprofiles = FALSE because it
   1243 c  is used in the final listing of single-level aircraft reports)
   1244 c -------------------------------------------------------------------------------------
   1245 
   1246 c Initialize sort key and sort index
   1247 c ----------------------------------
   1248       do i=1,max_reps
   1249         csort_wbad(i)   = 'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz'
   1250         indx_wbad(i) = i 
   1251       enddo
   1252 
   1253 c Form variable to sort / sort key
   1254 c --------------------------------
   1255       write(*,'(" Sorting reports and creating sort index, including ",
   1256      +          "reports marked as bad....")')
   1257  

Page 28          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1258       do iob=1,nrpts4QC_pre
   1259  
   1260         kidt = idt(iob) + 100000
   1261         if(kidt.ge.1000000) then
   1262           write(*,*)
   1263           write(*,*) '** WARNING: kidt too large (=',kidt,')'
   1264           write(*,*)
   1265           write (*,8073) iob,c_insty_ob(itype(iob)),c_acftreg(iob),
   1266      +                   c_acftid(iob),idt(iob),alat(iob),alon(iob),
   1267      +                   pres(iob),ht_ft(iob),t_prcn(iob),ob_t(iob),
   1268      +                   xiv_t(iob),ichk_t(iob),ob_q(iob),xiv_q(iob),
   1269      +                   ichk_q(iob),ob_dir(iob),xiv_d(iob),ichk_d(iob),
   1270      +                   ob_spd(iob),xiv_s(iob),ichk_s(iob),idp(iob)
   1271  8073 format(i5,1x,a8,1x,a8,1x,a9,1x,i7,1x,2f11.5,1x,f8.1,1x,f7.0,1x,
   1272      +       f5.2,4(2(1x,f8.2),1x,i5),1x,i4)
   1273           write(*,*)
   1274           kidt = 999999
   1275         endif
   1276         write(c_idt,'(i6)') kidt
   1277  
   1278         if(ht_ft(iob).eq.amiss) then
   1279           c_ht_ft = '99999'
   1280         else
   1281           iht_ft = nint(ht_ft(iob))
   1282           if(iht_ft.ge.100000) then
   1283             write(*,*)
   1284             write(*,*) '** WARNING: iht_ft too large (=',iht_ft,')'
   1285             write (*,8073) iob,c_insty_ob(itype(iob)),c_acftreg(iob),
   1286      +                     c_acftid(iob),idt(iob),alat(iob),alon(iob),
   1287      +                     pres(iob),ht_ft(iob),t_prcn(iob),ob_t(iob),
   1288      +                     xiv_t(iob),ichk_t(iob),ob_q(iob),xiv_q(iob),
   1289      +                     ichk_q(iob),ob_dir(iob),xiv_d(iob),
   1290      +                     ichk_d(iob),ob_spd(iob),xiv_s(iob),
   1291      +                     ichk_s(iob),idp(iob)
   1292             write(*,*)
   1293             iht_ft = 99999
   1294           endif
   1295 
   1296 c Make descents look like ascents for sorting purposes (complication comes in when a descent
   1297 c  has two obs with the same time, but different altitudes)
   1298 c
   1299 c *** -> Need to make sure to reverse order upon writing to output in output_acqc_prof for
   1300 c         descents - profile levels need to be ordered by decreasing pressure (for example,
   1301 c         1st lvl = 1010 mb, 2nd lvl = 987 mb, 3rd lvl = 764 mb, etc.)
   1302 c -----------------------------------------------------------------------------------------
   1303 	  if(c_qc(iob)(11:11).eq.'d' .or. c_qc(iob)(11:11).eq.'D')
   1304      +     iht_ft = 50000 + (-1)*iht_ft
   1305 
   1306           if(iht_ft.ge.0) then
   1307             write(c_ht_ft,'(i5.5)') iht_ft
   1308           else
   1309             write(c_ht_ft,'(i5.4)') iht_ft
   1310           endif
   1311         endif
   1312  
   1313 ! vvvv DAK-future change perhaps to account for incr. lat/lon precision
   1314         if(alat(iob).eq.amiss) then

Page 29          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1315           c_lat = '99999'
   1316         else
   1317           ilat = nint(alat(iob)*100.)
   1318           if(abs(ilat).ge.100000) then
   1319             write(*,*)
   1320             write(*,*) '** WARNING: ilat too large (=',ilat,')'
   1321             write (*,8073) iob,c_insty_ob(itype(iob)),c_acftreg(iob),
   1322      +                     c_acftid(iob),idt(iob),alat(iob),alon(iob),
   1323      +                     pres(iob),ht_ft(iob),t_prcn(iob),ob_t(iob),
   1324      +                     xiv_t(iob),ichk_t(iob),ob_q(iob),xiv_q(iob),
   1325      +                     ichk_q(iob),ob_dir(iob),xiv_d(iob),
   1326      +                     ichk_d(iob),ob_spd(iob),xiv_s(iob),
   1327      +                     ichk_s(iob),idp(iob)
   1328             write(*,*)
   1329             ilat = 99999
   1330           endif
   1331           write(c_lat,'(i5)') ilat
   1332         endif
   1333  
   1334         if(alon(iob).eq.amiss) then
   1335           c_lon = '999999'
   1336         else
   1337           ilon = nint(alon(iob)*100.)
   1338           if(abs(ilon).ge.1000000) then
   1339             write(*,*)
   1340             write(*,*) '** WARNING: ilon too large (=',ilon,')'
   1341             write (*,8073) iob,c_insty_ob(itype(iob)),c_acftreg(iob),
   1342      +                     c_acftid(iob),idt(iob),alat(iob),alon(iob),
   1343      +                     pres(iob),ht_ft(iob),t_prcn(iob),ob_t(iob),
   1344      +                     xiv_t(iob),ichk_t(iob),ob_q(iob),xiv_q(iob),
   1345      +                     ichk_q(iob),ob_dir(iob),xiv_d(iob),
   1346      +                     ichk_d(iob),ob_spd(iob),xiv_s(iob),
   1347      +                     ichk_s(iob),idp(iob)
   1348             write(*,*)
   1349             ilon = 999999
   1350           endif
   1351           write(c_lon,'(i6)') ilon
   1352         endif
   1353 ! ^^^^ DAK-future change perhaps to account for incr. lat/lon precision
   1354  
   1355         c_type = c_insty_ob(itype(iob))
   1356 
   1357 c NRL sort key: 
   1358 c -------------
   1359 cc Option 1: not used
   1360 cc      csort_wbad(iob) = c_idt(1:6)          ! time
   1361 cc   +                  //c_ht_ft(1:5)        ! altitude
   1362 cc   +                  //c_lat(1:5)          ! latitude
   1363 cc   +                  //c_lon(1:6)          ! longitude
   1364 cc   +                  //c_type(1:2)         ! aircraft type
   1365 
   1366 cc Option 2: not used (tail number first)
   1367 cc      csort_wbad(iob) = c_acftreg(iob)(1:7) ! tail number
   1368 cc   +                  //c_acftid(iob)(1:7)  ! flight number
   1369 cc   +                  //c_idt(1:6)          ! time
   1370 cc   +                  //c_ht_ft(1:5)        ! altitude
   1371 cc   +                  //c_lat(1:5)          ! latitude

Page 30          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1372 cc   +                  //c_type(1:2)         ! aircraft type
   1373 
   1374 cc Option 3: not used (use type first to group AIRCFT and AIRCAR message types together)
   1375 cc      csort_wbad(iob) = c_type(1:2)         ! aircraft type
   1376 cc   +                  //c_acftreg(iob)(1:7) ! tail number
   1377 cc   +                  //c_acftid(iob)(1:7)  ! flight number
   1378 cc   +                  //c_idt(1:6)          ! time
   1379 cc   +                  //c_ht_ft(1:5)        ! altitude
   1380 cc   +                  //c_lat(1:5)          ! latitude
   1381 cc   +                  //c_lon(1:6)          ! longitude
   1382 
   1383 c Option 4: not used
   1384 c Sort by altitude before time... want descents in order with an increasing vertical
   1385 c  coordinate - but if you have two obs in a descent with the same time but different
   1386 c  altitude, the altitudes will show up reversed -- use offset to get around this
   1387 c -----------------------------------------------------------------------------------
   1388 c
   1389 c Option 5: USE THIS (sort by time then altitude that is adjusted for descents)
   1390 c -----------------------------------------------------------------------------
   1391         if(c_qc(iob)(11:11).eq.'A') then    ! change 'A' to 'a'
   1392           c_qc11 = 'a'
   1393         elseif(c_qc(iob)(11:11).eq.'D') then
   1394           c_qc11 = 'd'                      ! change 'D' to 'd'
   1395         else
   1396           c_qc11 = c_qc(iob)(11:11)
   1397         endif
   1398 
   1399 c Option 6: not used {sort by altitude first, then time... trust vertical coordinate more
   1400 c  than position (many less bad marks in c_qc(5:5)'s vs c_qc(2:4))}
   1401 c ---------------------------------------------------------------------------------------
   1402         csort_wbad(iob) = c_type(1:2)//c_qc11               ! aircraft type + ascent/descent
   1403      +                               //c_acftreg(iob)(1:8)  ! tail number
   1404      +                               //c_acftid(iob)(1:7)   ! flight number
   1405 ccccc+                               //c_ht_ft(1:5)
   1406 ccccc+                               //c_idt(1:6)
   1407      +                               //c_idt(1:6)           ! time
   1408      +                               //c_ht_ft(1:5)         ! altitude
   1409 ! vvvv DAK-future change perhaps to account for incr. lat/lon precision
   1410      +                               //c_lat(1:5)           ! latitude
   1411      +                               //c_lon(1:6)           ! longitude
   1412 ! ^^^^ DAK-future change perhaps to account for incr. lat/lon precision
   1413 
   1414       enddo
   1415  
   1416 c Sort reports in file according to array csort_wbad
   1417 c --------------------------------------------------
   1418       call indexc40(nrpts4QC_pre,csort_wbad,indx_wbad)
   1419 
   1420       if(l_doprofiles) then ! takes longer to run, because it outputs profiles in separate
   1421                             !  PREPBUFR-like file
   1422 
   1423 c ----------------------------------------------------------------------------------
   1424 c Translate NRL QC flags to NCEP events and add events to PREPBUFRlike profiles file
   1425 c ----------------------------------------------------------------------------------
   1426         write(*,*) 'Calling output_acqc_prof....'
   1427         write(*,*)
   1428 

Page 31          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1429         call output_acqc_prof(proflun,nrpts4QC_pre,max_reps,mxnmev,mxlv,
   1430      +                        bmiss,cdtg_an,alat,alon,ht_ft,idt,c_qc,
   1431      +	                      trad,l_otw,l_nhonly,indx_wbad,c_acftreg,
   1432      +                        c_acftid,ob_t,nevents,hdr,acid,rct,drinfo,
   1433      +                        acft_seq,mstq,cat,
   1434      +                        pob_ev,pqm_ev,ppc_ev,prc_ev,pbg,ppp,
   1435      +                        zob_ev,zqm_ev,zpc_ev,zrc_ev,zbg,zpp,
   1436      +                        tob_ev,tqm_ev,tpc_ev,trc_ev,tbg,tpp,
   1437      +                        qob_ev,qqm_ev,qpc_ev,qrc_ev,qbg,qpp,
   1438      +                        uob_ev,vob_ev,wqm_ev,wpc_ev,wrc_ev,
   1439      +                        wbg,wpp,
   1440      +	                      ddo_ev,ffo_ev,dfq_ev,dfp_ev,dfr_ev,
   1441      +                        nrlacqc_pc,l_allev_pf,l_prof1lvl,
   1442      +                        l_mandlvl,tsplines,
   1443      +                        l_operational,lwr)
   1444 
   1445         write(*,*)
   1446         write(*,*)
   1447         write(*,*) 'Back from output_acqc_prof ....'
   1448         write(*,'(" PREPBUFR-like (profiles) file has been updated ",
   1449      +            "with events representing the QC marks applied by ",
   1450      +            "the NRLACQC routine acftobs_qc.")')
   1451         write(*,*)
   1452         write(*,*)
   1453 
   1454 c Close output PREPBUFR-like (profiles) file 
   1455 c ------------------------------------------
   1456         call closbf(proflun) ! closbf will take care of flushing last message
   1457         print *
   1458         print'(" Closed output PREPBUFR-like file - now holds post-",
   1459      +         "NRLACQC merged aircraft profile data; unit number ",
   1460      +         I0)', proflun
   1461         print *
   1462       endif
   1463 
   1464 c ----------------------------------------------------------------------
   1465 c Always output single-level QC'd aircraft data in regular PREPBUFR file
   1466 C ----------------------------------------------------------------------
   1467 
   1468 c Re-open input PREPBUFR file (contains mass and wind reports for all data types, no NRLACQC
   1469 c  events on reports in AIRCAR and AIRCFT message types)
   1470 c ------------------------------------------------------------------------------------------
   1471       call openbf(inlun,'IN',inlun)
   1472       print *
   1473       print'(" Again opened input PREPBUFR file with all data, ",
   1474      +       "including pre-NRLACQC aircraft data; unit number ",I0)',
   1475      +     inlun
   1476       print *
   1477 
   1478 
   1479 C Initialize some variables that will be set in output_acqc_noprof and used in printout
   1480 c -------------------------------------------------------------------------------------
   1481       ncep_qm_p = 9999
   1482       ncep_rc_p = 9999
   1483       ncep_qm_z = 9999
   1484       ncep_rc_z = 9999
   1485       ncep_qm_t = 9999

Page 32          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1486       ncep_rc_t = 9999
   1487       ncep_qm_q = 9999
   1488       ncep_rc_q = 9999
   1489       ncep_qm_w = 9999
   1490       ncep_rc_w = 9999
   1491       ncep_rej  =    0
   1492 
   1493 c Translate NRL QC flags to NCEP events and add events to aircraft reports in "AIRCAR" and
   1494 c  "AIRCFT" message types in full PREPBUFR file (split mass and wind pieces)
   1495 c ----------------------------------------------------------------------------------------
   1496       call output_acqc_noprof(inlun,outlun,nrpts4QC_pre,max_reps,bmiss,
   1497      +                        alat,alon,ht_ft,idt,c_qc,trad,l_otw,
   1498      +                        l_nhonly,
   1499      +                        ncep_qm_p,ncep_rc_p,
   1500      +                        ncep_qm_z,ncep_rc_z,
   1501      +                        ncep_qm_t,ncep_rc_t,
   1502      +                        ncep_qm_q,ncep_rc_q,
   1503      +                        ncep_qm_w,ncep_rc_w,
   1504      +                        ncep_rej,nrlacqc_pc)
   1505 
   1506       write(*,*)
   1507       write(*,*)
   1508       write(*,*) 'Back from output_acqc_noprof ....'
   1509       write(*,'(" PREPBUFR file has been updated with events ",
   1510      +          "representing the QC marks applied by the NRL aircraft",
   1511      +          " QC routine acftobs_qc")')
   1512       write(*,*)
   1513       write(*,*)
   1514 
   1515 c Close input PREPBUFR file
   1516 c -------------------------
   1517       call closbf(inlun)
   1518       print *
   1519       print'(" Closed input PREPBUFR file with all data, including ",
   1520      +       "pre-NRLACQC aircraft data; unit number ",I0)', inlun
   1521       print *
   1522 
   1523 c Close output PREPBUFR file 
   1524 c --------------------------
   1525       call closbf(outlun) ! closbf will take care of flushing last message
   1526       print *
   1527       print'(" Closed output PREPBUFR file - now holds all data, ",
   1528      +       "including post-NRLACQC aircraft data; unit number ",I0)',
   1529      +     outlun
   1530       print *
   1531 
   1532       if(.not.l_operational) then
   1533 
   1534 c Write merged reports and resulting NRL QC decisions (array c_qc) to an output file for
   1535 c  later perusal
   1536 c --------------------------------------------------------------------------------------
   1537 
   1538         open(51,file='merged.reports.post_acftobs_qc.sorted',form=
   1539      +       'formatted')
   1540         write(51,*)
   1541         write(51,'(" Final listing of all aircraft reports in PREPBUFR",
   1542      +             " file after NRL QC (sorted according to array ",

Page 33          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1543      +             "csort_wbad)")')
   1544         if(nrpts4QC_pre.eq.max_reps) write(51,'(" (since max report ",
   1545      +   "limit hit, only reports going through QC listed here)")')
   1546         write(51,'(" -------------------------------------------------",
   1547      +             "--------------------------------------------------",
   1548      +             "-------")')
   1549         write(51,*)
   1550         write(51,'(" TAMDAR reports here replace characters 1-3 of ",
   1551      +             "manufactured flight # (''000'') with (''TAM'') in ",
   1552      +             "order to create truncated tail # ''TAM'' for ",
   1553      +             "NRLACQC sorting - the PREPBUFR file continues to ",
   1554      +             "encode ''000'' in")')
   1555         write(51,'("  characters 1-3 of manufactured flight # for ",
   1556      +             "TAMDAR (stored as both ''SID'' and ''ACID'')")')
   1557 
   1558         write(51,*)
   1559         write(51,'(" AIREP and PIREP reports report only a flight # ",
   1560      +             "(manufactured for PIREPs) - a tail # for NRLACQC ",
   1561      +             "sorting is created by truncating the flight # - ",
   1562      +             "the PREPBUFR file will not encode these truncated ",
   1563      +             "tail #''s")')
   1564 
   1565         write(51,*)
   1566         write(51,'(" All AMDAR reports except LATAM report only a tail",
   1567      +            " # - this is stored as both flight # and tail # for",
   1568      +             " NRLACQC sorting - the PREPBUFR file continues to ",
   1569      +             "encode only tail # (stored in ''SID'')")')
   1570         write(51,*)
   1571         write(51,'(" AMDAR reports from LATAM report both a tail # and",
   1572      +             " a flight # - these are used as reported for ",
   1573      +             "NRLACQC sorting - the PREPBUFR file continues to ",
   1574      +             "encode both tail # and flight # (as ''SID'' and ",
   1575      +             "''ACID'',")')
   1576         write(51,*) 'resp.)'
   1577         write(51,*)
   1578         write(51,'(" MDCRS reports from ARINC report both a tail # and",
   1579      +             " a flight # - these are used as reported for ",
   1580      +             "NRLACQC sorting - the PREPBUFR file continues to ",
   1581      +             "encode both tail # and flight # (as ''SID'' and ",
   1582      +             "''ACID'',")')
   1583         write(51,*) 'resp.)'
   1584 
   1585         write(51,*)
   1586         write(51,3001)
   1587  3001   format(173x,'! _PREPBUFR_QMs_!NRLACQC_REASON_CODE'/' index ',
   1588      +         'flight    tail num itp ph      lat       lon    ',
   1589      +         'time  hght   pres  temp/chk spec_h/chk  wspd/chk ',
   1590      +         'wdir/chk t-prec !__qc_flag__!_______________',
   1591      +         'csort_wbad_______________! Pq Zq Tq Qq Wq!Prc Zrc Trc ',
   1592      +         'Qrc Wrc'/'------ --------- -------- --- --  ',
   1593      +         '-------- --------- ------ ----- ------ --------- ',
   1594      +         '---------- --------- -------- ------ !-----------!',
   1595      +         '----------------------------------------! -- -- -- ',
   1596      +         '-- --!--- --- --- --- ---')
   1597 
   1598         do i=1,nrpts4QC_pre
   1599           j=indx_wbad(i)

Page 34          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1600 
   1601           if(ncep_rej(j).eq.0) then
   1602             write(51,fmt=8001) j,c_acftid(j),c_acftreg(j),itype(j),
   1603      +       phase(j),alat(j),alon(j),idt(j),nint(ht_ft(j)),pres(j),
   1604      +       ob_t(j),ichk_t(j),ob_q(j),ichk_q(j),ob_spd(j),ichk_s(j),
   1605      +       nint(ob_dir(j)),ichk_d(j),t_prcn(j),c_qc(j),csort_wbad(j),
   1606      +       ncep_qm_p(j),ncep_qm_z(j),ncep_qm_t(j),ncep_qm_q(j),
   1607      +       ncep_qm_w(j),ncep_rc_p(j),ncep_rc_z(j),ncep_rc_t(j),
   1608      +       ncep_rc_q(j),ncep_rc_w(j)
   1609 c           if(ncep_rc_p(j).ge.1000) write(51,fmt=9001) ncep_rc_p(j)
   1610 c9001       format(' PRC too large = ',i10)
   1611 c           if(ncep_rc_z(j).ge.1000) write(51,fmt=9002) ncep_rc_z(j)
   1612 c9002       format(' ZRC too large = ',i10)
   1613 c           if(ncep_rc_t(j).ge.1000) write(51,fmt=9003) ncep_rc_t(j)
   1614 c9003       format(' TRC too large = ',i10)
   1615 c           if(ncep_rc_q(j).ge.1000) write(51,fmt=9004) ncep_rc_q(j)
   1616 c9004       format(' QRC too large = ',i10)
   1617 c           if(ncep_rc_w(j).ge.1000) write(51,fmt=9005) ncep_rc_w(j)
   1618 c9005       format(' WRC too large = ',i10)
   1619           endif
   1620 	enddo
   1621 
   1622  8001 format(i6,1x,a9,1x,a8,i4,1x,i2,2f10.5,1x,i6,1x,i5,1x,f6.1,1x,
   1623      +       f6.2,i3,1x,f7.2,i3,1x,f6.1,i3,2x,i4,i3,1x,f6.2,1x,
   1624      +       '!',a11,'!',a40,'!',5(1x,i2.2),'!',i3.3,4(1x,i3.3))
   1625 
   1626 c Close data listing file
   1627 c -----------------------
   1628 	close(51)
   1629 
   1630       endif
   1631 
   1632 c End program
   1633 c -----------
   1634 
   1635       write(*,*)
   1636       write(*,*) '**************************'
   1637       write(*,*) 'PREPOBS_PREPACQC has ended'
   1638       call system('date')
   1639       write(*,*) '**************************'
   1640       write(*,*)
   1641       call w3tage('PREPOBS_PREPACQC')
   1642 
   1643       else  ! nrpts4QC_pre.le.0
   1644 
   1645 c Input PREPBUFR file contains NO aircraft data of any kind -- STOP 4
   1646 c -------------------------------------------------------------------
   1647 
   1648          WRITE(6,108)
   1649   108 FORMAT(/' INPUT PREPBUFR FILE CONTAINS NO "AIRCAR" OR "AIRCFT" ',
   1650      $ 'MESSAGES WITH REPORTS - STOP 4'/)
   1651          CALL ERREXIT(4)
   1652 
   1653       endif ! nrpts4QC_pre.gt.0
   1654 
   1655       stop
   1656 

Page 35          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

   1657 cvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
   1658 c add this event of future switch to dynamic memory allocation
   1659 
   1660 ca901 continue
   1661 
   1662 calloc  print *, '#####PREPOBS_PREPACQC - UNABLE TO ALLOCATE ARRAYS'
   1663 calloc  call w3tage('PREPOBS_PREPACQC')
   1664 calloc  call errexit(99)
   1665 c^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   1666 
   1667       end

Page 36          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07 Subprograms/Common Blocks       prepacqc.f



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 PREPOBS_PREPACQC           Prog   362                                                                                              

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte
       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume nobyterecl                    -assume nocc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofpe_summary                 -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume noold_ldout_format            -assume noold_logical_ldio
       -assume old_maxminloc                 -assume old_xor
       -assume noprotect_allocates           -assume protect_constants
       -assume noprotect_parens              -assume split_common
       -assume source_include                -assume nostd_intent_in
       -assume std_minus0_rounding           -assume nostd_mod_proc_name
       -assume std_value                     -assume norealloc_lhs
       -assume underscore                    -assume no2underscores
  no   -auto                                 -auto_scalar
  no   -bintext                              -ccdefault default
       -check noargs                         -check noarg_temp_created
       -check noassume                       -check nobounds
       -check noformat                       -check nooutput_conversion
       -check nooverflow                     -check nopointers
       -check power                          -check noshape
       -check nostack                        -check nounderflow
       -check nouninitialized                -coarray-num-procs 0
  no   -coarray-config-file                  -convert big_endian
       -cross_reference                      -D __INTEL_COMPILER=1600
       -D __INTEL_COMPILER_UPDATE=3          -D __unix__
       -D __unix                             -D __linux__
       -D __linux                            -D __gnu_linux__
       -D unix                               -D linux
       -D __ELF__                            -D __x86_64
       -D __x86_64__                         -D __amd64
       -D __amd64__                          -D __INTEL_COMPILER_BUILD_DATE=20160415
       -D __INTEL_OFFLOAD                    -D __i686
       -D __i686__                           -D __pentiumpro
       -D __pentiumpro__                     -D __pentium4

Page 37          Source Listing                  PREPOBS_PREPACQC
2017-04-18 11:07                                 prepacqc.f

       -D __pentium4__                       -D __tune_pentium4__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __SSE__                            -D __SSE_MATH__
       -D __MMX__                            -double_size 64
  no   -d_lines                         no   -Qdyncom
       -error_limit 30                  no   -f66
  no   -f77rtl                          no   -fast
       -fpscomp nofilesfromcmd               -fpscomp nogeneral
       -fpscomp noioformat                   -fpscomp noldio_spacing
       -fpscomp nologicals                   -fixed
  no   -fpconstant                           -fpe3
       -fprm nearest                    no   -ftz
       -fp_model noprecise                   -fp_model fast
       -fp_model nostrict                    -fp_model nosource
       -fp_model nodouble                    -fp_model noextended
       -fp_model novery_fast                 -fp_model noexcept
       -fp_model nono_except                 -heap_arrays 0
  no   -threadprivate_compat                 -g2
       -iface nomixed_str_len_arg            -iface nono_mixed_str_len_arg
       -init noarrays                        -init noinf
       -init nonan                           -init nosnan
       -init nozero                     no   -intconstant
       -integer_size 32                 no   -mixed_str_len_arg
  no   -module                               -names lowercase
  no   -noinclude                            -offload-build=host
       -O2                              no   -pad_source
       -real_size 32                    no   -recursive
       -reentrancy none                 no   -sharable_localsaves
       -vec=simd                             -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w alignments                         -w noargument_checking
       -w nodeclarations                     -w general
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w notruncated_source
       -w uncalled                           -w uninitialized
       -w nounused                           -w usage
  no   -wrap-margins

       -includepath : /usrx/local/intel/2016SP3/daal/include/,/usr/include/,.FOR,./.FOR,/usrx/local/intel/2016SP3/ipp/include/.FOR,
           /usrx/local/intel/2016SP3/mkl/include/.FOR,/usrx/local/intel/2016SP3/tbb/include/.FOR,/usrx/local/intel/2016SP3/daal/include/.FOR,
           /gpfs/tp1/usrx/local/intel/2016SP3/compilers_and_libraries_2016.3.210/linux/compiler/include/intel64/.FOR,
           /gpfs/tp1/usrx/local/intel/2016SP3/compilers_and_libraries_2016.3.210/linux/compiler/include/.FOR,/usr/local/include/.FOR,
           /usr/lib/gcc/x86_64-redhat-linux/4.4.7/include/.FOR,/usr/include/.FOR,/usr/include/.FOR,/usr/include/.FOR
       -list filename : prepacqc.lst
       -o    filename : none

COMPILER: Intel(R) Fortran 16.0-1633
